swagger: "2.0"
info:
  title: BlendVision API
  version: version not set
host: _
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /bv/account/v1/accounts:
    get:
      summary: List accounts
      description: This API will list accounts in current organization based on the given access token.
      operationId: PublicAccountService_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.ListResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: |-
            Optional. The current page in the current pagination.
            If enable_pagination is true, need to assign positive number. Min: 1 Max: 100
          in: query
          required: false
          type: integer
          format: int32
        - name: items_per_page
          description: |-
            Optional. The number of items per page in the current pagination.
            If enable_pagination is true, need to assign positive number. Min: 1 Max: 100
          in: query
          required: false
          type: integer
          format: int32
        - name: enable_pagination
          description: 'Optional. Enable pagination.  Default: false'
          in: query
          required: false
          type: boolean
        - name: email
          description: |-
            Optional. The filter of specific email
            It will return the results which are contain the filter of email.
          in: query
          required: false
          type: string
        - name: status
          description: |-
            Optional. The filter of specific account status.
            The example of status: ACCOUNT_STATUS_ACTIVATED,ACCOUNT_STATUS_DEACTIVATED
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Account
    post:
      summary: Batch create accounts
      description: |-
        This API will batch create accounts without organization.
        The maximum of account you can created is 10.
      operationId: PublicAccountService_BatchCreateAccounts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.BatchCreateAccountsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.BatchCreateAccountsRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Account
  /bv/account/v1/accounts/{id}:
    get:
      summary: Get account information
      description: |-
        This API will get account information base on account id from given request.

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicAccountService_Get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.GetResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of account.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Account
  /bv/account/v1/accounts/api-token:
    post:
      summary: Create account api token
      description: |-
        This API will create API token associated with the current user's account.
        If you use api token to invoke api (except some of api, please check each api detail information in api document), you need to put the `x-bv-org-id` into header to perform specific organization.

        **Notice:** The `/bv/account/v1/accounts/api-token` will be deprecated soon.
        Please use `/bv/account/v1/accounts/api-tokens` to create api token.
      operationId: PublicAccountService_CreateAPIToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.CreateAPITokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.CreateAPITokenRequest'
      tags:
        - Account
  /bv/account/v1/accounts/api-tokens:
    get:
      summary: List account api tokens
      description: This API returns API tokens associated with the current user's account.
      operationId: PublicAccountService_ListAPITokens
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.ListAPITokensResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: Required. The current page in the current pagination.
          in: query
          required: true
          type: integer
          format: int32
        - name: items_per_page
          description: Required. The number of items per page in the current pagination.
          in: query
          required: true
          type: integer
          format: int32
        - name: filter.name
          description: Optional. Filter by api token name
          in: query
          required: false
          type: string
      tags:
        - Account
    post:
      summary: Create account api token
      description: |-
        This API will create API token associated with the current user's account.
        If you use api token to invoke api (except some of api, please check each api detail information in api document), you need to put the `x-bv-org-id` into header to perform specific organization.

        **Notice:** The `/bv/account/v1/accounts/api-token` will be deprecated soon.
        Please use `/bv/account/v1/accounts/api-tokens` to create api token.
      operationId: PublicAccountService_CreateAPIToken2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.CreateAPITokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.CreateAPITokenRequest'
      tags:
        - Account
  /bv/account/v1/accounts/api-tokens/{id}:
    get:
      summary: Get an account api token
      description: This API will return an API token associated with the current user's account.
      operationId: PublicAccountService_GetAPIToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.GetAPITokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of API token.
          in: path
          required: true
          type: string
      tags:
        - Account
    delete:
      summary: Delete account api token
      description: This API will delete specific API token.
      operationId: PublicAccountService_DeleteAPIToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.DeleteAPITokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of API token.
          in: path
          required: true
          type: string
      tags:
        - Account
  /bv/account/v1/accounts/awsmp-customer-landing:
    post:
      summary: AWS Marketplace Customer Landing
      description: This API is for aws market place.
      operationId: OpenAccountService_AWSMPCustomerLanding
      responses:
        "200":
          description: ""
          schema:
            type: string
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: form_url_encoded
          description: Required.
          in: body
          required: true
          schema:
            type: string
            required:
              - form_url_encoded
      tags:
        - Account
  /bv/account/v1/accounts/groups:
    put:
      summary: Update account group
      description: This API will update(overwrite) current account group
      operationId: PublicAccountService_UpdateGroup
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.UpdateGroupResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.UpdateGroupRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Account
  /bv/account/v1/accounts/info:
    get:
      summary: Get account information base on token
      description: This API will get account information based on the given access token.
      operationId: PublicAccountService_GetInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.GetInfoResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Account
    put:
      summary: Update a account information
      description: |-
        This API will update a specific account based on the access token.

        ----

        Required field(s):
        - `firs_name`
        - `last_name`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
        - It'll return a `400`/`BadRequest` error if any request body is invalid.
      operationId: PublicAccountService_Update
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.UpdateResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.UpdateRequest'
      tags:
        - Account
  /bv/account/v1/accounts/invitations:
    post:
      summary: Invite user to organization
      description: |-
        This API will invite user to specific organization by sending invitation.

        ----

        Required field(s):
        - `email`
        - `inviter_id`
        - `org_id`
        - `role_type`

        ----

        - It'll return a `400`/`Bad Request` error if there is any parameters in request is invalid.
      operationId: PublicAccountService_Invite
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.InviteResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.InviteRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Account
  /bv/account/v1/accounts/invitations:accept:
    post:
      summary: Accept invitation
      description: |-
        This API will accept the invitation and add account to organization which is from invitation.

        ----

        Required field(s):
        - `token`
        - `time_zone`
      operationId: OpenAccountService_AcceptInvite
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.AcceptInviteResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.AcceptInviteRequest'
      tags:
        - Account
  /bv/account/v1/accounts/invitations:resend:
    post:
      summary: Resend Invitation to user
      description: |-
        This API will re-send invitation to user

        ----

        Required field(s):
        - `org_id`
        - `email`
        - `inviter_id`

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
      operationId: PublicAccountService_ResendInvite
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.ResendInviteResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.ResendInviteRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Account
  /bv/account/v1/accounts/invitees:
    get:
      summary: List invitees
      description: This API will return an array of invitee resources.
      operationId: PublicAccountService_ListInvitees
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.ListInviteesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: Required. The current page in the current pagination. Min:1 Max:100
          in: query
          required: true
          type: integer
          format: int32
        - name: items_per_page
          description: Required. The number of items per page in the current pagination. Min:1 Max:100
          in: query
          required: true
          type: integer
          format: int32
        - name: status
          description: Optional. The status of invitation
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Account
  /bv/account/v1/accounts/login:
    post:
      summary: Login account
      description: |-
        This API will login the account.

        ----

        Required field(s):
        - `email`
        - `password`
      operationId: OpenAccountService_Login
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.LoginResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.LoginRequest'
      tags:
        - Account
  /bv/account/v1/accounts/logout:
    post:
      summary: Logout
      description: |-
        This API will logout current account on console.
        If you use `api_token`, it is not allow to use this api.  It'll return a `400 / BadRequest` error.
      operationId: PublicAccountService_Logout
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.LogoutResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.LogoutRequest'
      tags:
        - Account
  /bv/account/v1/accounts/password:change:
    post:
      summary: Change account password
      description: |-
        This API will change account password based on the access token.

        ----

        Required field(s):
        - `previous_password`
        - `new_password`

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        If you use `api_token`, it is not allow to use this api.  It'll return a `400 / BadRequest` error.
      operationId: PublicAccountService_ChangePassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.ChangePasswordResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.ChangePasswordRequest'
      tags:
        - Account
  /bv/account/v1/accounts/password:confirm:
    post:
      summary: Confirm forgot password
      description: |-
        This API will reset account password with confirmation code.

        ----

        Required field(s):
        - `email`
        - `new_password`
        - `confirm_code`
      operationId: OpenAccountService_ConfirmForgotPassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.ConfirmForgotPasswordResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.ConfirmForgotPasswordRequest'
      tags:
        - Account
  /bv/account/v1/accounts/password:forgot:
    post:
      summary: Forgot account password
      description: |-
        This API will send forgot password confirmation code base on email from request.

        ----

        Required field(s):
        - `email`
      operationId: OpenAccountService_ForgotPassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.ForgotPasswordResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.ForgotPasswordRequest'
      tags:
        - Account
  /bv/account/v1/accounts/role:change:
    post:
      summary: Change account role
      description: |-
        This API will change account role based on the access token.
        Only owner/admin have permission to change account role
      operationId: PublicAccountService_ChangeRole
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.ChangeRoleResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.ChangeRoleRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Account
  /bv/account/v1/accounts/signup:
    post:
      summary: Sign up an account
      description: |-
        This API will sign up the account and send the account confirmation code.

        ----

        Required field(s):
        - `first name`
        - `last name`
      operationId: OpenAccountService_SignUp
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.SignUpResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.SignUpRequest'
      tags:
        - Account
  /bv/account/v1/accounts/signup:confirm:
    post:
      summary: Confirm account email
      description: |-
        This API will confirm the account email with confirmation code.

        ----

        Required field(s):
        - `email`
        - `code`

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid (e.g. confirmation code not match, email is not found)
      operationId: OpenAccountService_ConfirmSignUp
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.ConfirmSignUpResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.ConfirmSignUpRequest'
      tags:
        - Account
  /bv/account/v1/accounts/signup:resend:
    post:
      summary: Resend confirmation code for sign up account
      description: |-
        This API will re-send the account email confirmation code.

        ----

        Required field(s):
        - `email`
      operationId: OpenAccountService_ResendConfirmationCode
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.ResendConfirmationCodeResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.ResendConfirmationCodeRequest'
      tags:
        - Account
  /bv/account/v1/accounts/token:refresh:
    post:
      summary: Refresh account access token
      description: |-
        This API will refresh account access token without changing token expired date.

        ----

        Required field(s):
        - `token`
      operationId: OpenAccountService_RefreshToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.RefreshTokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.RefreshTokenRequest'
      tags:
        - Account
  /bv/account/v1/accounts/token:switch-org:
    post:
      summary: Siwtch organization
      description: |-
        This API will switch anothter organization from current organization.

        ----

        Required field(s):
        - `org_id`

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
        - It'll return a `400`/`BadRequest` error if any request body is invalid.
      operationId: PublicAccountService_SwitchOrg
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/account.v1.SwitchOrgResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/account.v1.SwitchOrgRequest'
      tags:
        - Account
  /bv/analytics/v1/analytics/default-usage-charts:
    get:
      summary: Get analytics default usage charts
      description: |-
        This API is used to retrieve the default usage charts of the requested orgs and usage_type.
        The breakdown dimension of the charts is dependent to the requested `usage_type`:
        - `CDN`
          - `All`
          - `VOD`
          - `Live`
        - `Storage`
          - `All`
          - `VOD (H.264)`
          - `VOD (H.265)`
          - `Live-to-VOD`
          - `Library`
        - `Encoding`
          - `All`
          - `VOD (H.264)`
          - `VOD (H.265)`
          - `Live-to-VOD`
        - `Livestream Duration`
          - `All`
          - `Ultra Low Latency`
          - `Non Ultra Low Latency`
        - `DRM`
          - `All`

        ----

        Required field(s):
        - `start_time`
        - `end_time`
        - `time_granularity`
        - `business_org_ids`
        - `usage_type`

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_GetAnalyticsDefaultUsageCharts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.GetAnalyticsDefaultUsageChartsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: start_time
          in: query
          required: true
          type: string
          format: date-time
        - name: end_time
          in: query
          required: true
          type: string
          format: date-time
        - name: time_granularity
          in: query
          required: true
          type: string
          enum:
            - TIME_GRANULARITY_UNSPECIFIED
            - TIME_GRANULARITY_HOUR
            - TIME_GRANULARITY_DAY
            - TIME_GRANULARITY_MONTH
            - TIME_GRANULARITY_YEAR
          default: TIME_GRANULARITY_UNSPECIFIED
        - name: business_org_ids
          in: query
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: usage_type
          in: query
          required: true
          type: string
          enum:
            - USAGE_TYPE_UNSPECIFIED
            - USAGE_TYPE_CDN
            - USAGE_TYPE_STORAGE
            - USAGE_TYPE_ENCODING
            - USAGE_TYPE_LIVE_DURATION
            - USAGE_TYPE_DRM
          default: USAGE_TYPE_UNSPECIFIED
        - name: streaming_type
          in: query
          required: false
          type: string
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - RESOURCE_TYPE_LIVE
            - RESOURCE_TYPE_VOD
            - RESOURCE_TYPE_LIVE_EVENT
            - RESOURCE_TYPE_LIVE_EVENT_RECORDING
            - RESOURCE_TYPE_VOD_EVENT
          default: RESOURCE_TYPE_UNSPECIFIED
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/analytics/lives:
    get:
      summary: Get analytics live list
      description: |-
        This API is used to list all lives along with their fundamental details and performance metrics.

        ----

        Required field(s):

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_ListAnalyticsLives
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.ListAnalyticsLivesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: Current page
          in: query
          required: false
          type: integer
          format: int32
        - name: items_per_page
          description: Item size per-page
          in: query
          required: false
          type: integer
          format: int32
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/analytics/lives/{id}:
    get:
      summary: Get analytics live detail
      description: |-
        This API is used to get the details of a live.

        ----

        Required field(s):

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_GetAnalyticsLivesDetail
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.GetAnalyticsLivesDetailResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. Vod id.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/analytics/reseller-by-org-usage-charts:
    get:
      summary: Get analytics reseller by org usage charts
      description: |-
        This API is used to retrieve the usage charts of the sub-organizations under the logged-in organization.

        ----

        Required field(s):
        - `start_time`
        - `end_time`
        - `time_granularity`
        - `business_org_ids`
        - `usage_type`

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_GetAnalyticsResellerByOrgUsageCharts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.GetAnalyticsResellerByOrgUsageChartsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: start_time
          in: query
          required: true
          type: string
          format: date-time
        - name: end_time
          in: query
          required: true
          type: string
          format: date-time
        - name: time_granularity
          in: query
          required: true
          type: string
          enum:
            - TIME_GRANULARITY_UNSPECIFIED
            - TIME_GRANULARITY_HOUR
            - TIME_GRANULARITY_DAY
            - TIME_GRANULARITY_MONTH
            - TIME_GRANULARITY_YEAR
          default: TIME_GRANULARITY_UNSPECIFIED
        - name: business_org_ids
          in: query
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: usage_type
          in: query
          required: true
          type: string
          enum:
            - USAGE_TYPE_UNSPECIFIED
            - USAGE_TYPE_CDN
            - USAGE_TYPE_STORAGE
            - USAGE_TYPE_ENCODING
            - USAGE_TYPE_LIVE_DURATION
            - USAGE_TYPE_DRM
          default: USAGE_TYPE_UNSPECIFIED
        - name: streaming_type
          in: query
          required: false
          type: string
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - RESOURCE_TYPE_LIVE
            - RESOURCE_TYPE_VOD
            - RESOURCE_TYPE_LIVE_EVENT
            - RESOURCE_TYPE_LIVE_EVENT_RECORDING
            - RESOURCE_TYPE_VOD_EVENT
          default: RESOURCE_TYPE_UNSPECIFIED
        - name: org_type
          in: query
          required: false
          type: string
          enum:
            - ORGANIZATION_TYPE_UNSPECIFIED
            - ORGANIZATION_TYPE_ROOT
            - ORGANIZATION_TYPE_GENERAL_DISTRIBUTOR
            - ORGANIZATION_TYPE_RESELLER
            - ORGANIZATION_TYPE_BUSINESS
          default: ORGANIZATION_TYPE_UNSPECIFIED
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/analytics/usage-summary:
    get:
      summary: Get analytics usage summary
      description: |-
        This API is used to retrieve a summary of the usage of the requested business orgs.
        This includes storage, cdn, encoding, and other billing-related metrics.

        ----

        Required field(s):
         - `start_time`
         - `end_time`
         - `business_org_ids`

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_GetAnalyticsUsageSummary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.GetAnalyticsUsageSummaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: start_time
          in: query
          required: true
          type: string
          format: date-time
        - name: end_time
          in: query
          required: true
          type: string
          format: date-time
        - name: business_org_ids
          in: query
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: streaming_type
          in: query
          required: false
          type: string
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - RESOURCE_TYPE_LIVE
            - RESOURCE_TYPE_VOD
            - RESOURCE_TYPE_LIVE_EVENT
            - RESOURCE_TYPE_LIVE_EVENT_RECORDING
            - RESOURCE_TYPE_VOD_EVENT
          default: RESOURCE_TYPE_UNSPECIFIED
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/analytics/vods:
    get:
      summary: List analytics VODs
      description: |-
        This API is used to list all VODs along with their fundamental details and performance metrics.

        ----

        Required field(s):

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_ListAnalyticsVODs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.ListAnalyticsVODsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: Current page
          in: query
          required: false
          type: integer
          format: int32
        - name: items_per_page
          description: Item size per-page
          in: query
          required: false
          type: integer
          format: int32
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/analytics/vods/{id}:
    get:
      summary: Get analytics VODs detail
      description: |-
        This API is used to get the details of a VOD.

        ----

        Required field(s):

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_GetAnalyticsVODsDetail
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.GetAnalyticsVODsDetailResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/dashboard/business-assets-statistics:
    get:
      summary: Get dashboard business assets statistics
      description: |-
        Use this API to retrieve statistics of business assets, including VODs and lives, for the logged-in organization.

        ----

        Required field(s):
        - `start_date` in the format of rfc-3339. ex. 2019-10-12T07:20:50.52Z
        - `end_date` in the format of rfc-3339. ex. 2019-10-12T07:20:50.52Z
        - `top_events_limit` with a maximum value of 100

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_GetDashboardBusinessAssetsStatistics
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.GetDashboardBusinessAssetsStatisticsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: start_time
          in: query
          required: true
          type: string
          format: date-time
        - name: end_time
          in: query
          required: true
          type: string
          format: date-time
        - name: top_events_limit
          description: The number of top events to return. The value should be between 1 and 100.
          in: query
          required: true
          type: integer
          format: int32
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/dashboard/business-usage-summary:
    get:
      summary: Get dashboard business usage summary
      description: |-
        Use this API to retrieve the usage summary of the logged-in organization, including all types of usages
        that are used for billing calculation.

        ----

        Required field(s):


        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_GetDashboardBusinessUsageSummary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.GetDashboardBusinessUsageSummaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/dashboard/ongoing-items:
    get:
      summary: Get dashboard ongoing items information
      description: |-
        This API is used to retrieve information on ongoing VODs and lives.

        ----

        Required field(s):


        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_GetDashboardOngoingItems
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.GetDashboardOngoingItemsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/dashboard/reseller-account-summary:
    get:
      summary: Get dashboard reseller account summary
      description: |-
        Use this API to retrieve changes in sub-organizations under the org and display them in line charts.

        ----

        Required field(s):


        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_GetDashboardResellerAccountSummary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.GetDashboardResellerAccountSummaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/dashboard/reseller-top-usage-consumption:
    get:
      summary: Get dashboard reseller top usage consumption
      description: |-
        This API is used to retrieve the top usage consumption of the sub-organizations under the logged-in organization.
        The sorting is determined by the usage of CDN and the response contains usage values like CDN, storage, count of the VOD & live of each sub-organization.

        ----

        Required field(s):
        - `start_date` in the format of rfc-3339. ex. 2019-10-12T07:20:50.52Z
        - `end_date` in the format of rfc-3339. ex. 2019-10-12T07:20:50.52Z
        - `top_orgs_limit` in the format of integer, with a minium value of 1 and a maximum value of 100.

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_GetDashboardResellerTopUsageConsumption
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.GetDashboardResellerTopUsageConsumptionResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: start_time
          in: query
          required: true
          type: string
          format: date-time
        - name: end_time
          in: query
          required: true
          type: string
          format: date-time
        - name: top_orgs_limit
          description: The number of top organizations to be returned. The value should be between 1 and 100.
          in: query
          required: true
          type: integer
          format: int32
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/dashboard/reseller-usage-summary:
    get:
      summary: Get dashboard reseller usage summary
      description: |-
        This API is used to retrieve a summary of the usage of the sub-organizations under the logged-in organization.

        ----

        Required field(s):
        - `start_date` in the format of rfc-3339. ex. 2019-10-12T07:20:50.52Z
        - `end_date` in the format of rfc-3339. ex. 2019-10-12T07:20:50.52Z

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_GetDashboardResellerUsageSummary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.GetDashboardResellerUsageSummaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: start_time
          in: query
          required: true
          type: string
          format: date-time
        - name: end_time
          in: query
          required: true
          type: string
          format: date-time
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/events/reports:
    post:
      operationId: PublicAnalyticsService_CreateEventReport
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.CreateEventReportResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/analytics.v1.CreateEventReportRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/events/reports:batch-get:
    post:
      operationId: PublicAnalyticsService_BatchGetEventReports
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.BatchGetEventReportsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/analytics.v1.BatchGetEventReportsRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/performance/breakdown-dimension-time-charts:
    get:
      summary: Get analytics performance time charts by breakdown dimension
      description: |-
        This API is used to get the performance time charts by breakdown dimension.
        Country codes that are not mapped will be labeled as "COUNTRY_CODE_OTHERS".
        Device type that is not mapped will be labeled as "DEVICE_TYPE_OTHERS".
        For the request parameter devices and countries, if the value is empty, it will be treated as "all options including others".

        ----

        Required field(s):
        - `start_time`
        - `end_time`
        - `time_granularity`
        - `business_org_ids`
        - `performance_type`
        - `breakdown_dimension`

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_GetAnalyticsPerformanceByBreakdownDimensionTimeCharts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.GetAnalyticsPerformanceByBreakdownDimensionTimeChartsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: start_time
          description: page filters
          in: query
          required: true
          type: string
          format: date-time
        - name: end_time
          in: query
          required: true
          type: string
          format: date-time
        - name: time_granularity
          in: query
          required: true
          type: string
          enum:
            - TIME_GRANULARITY_UNSPECIFIED
            - TIME_GRANULARITY_HOUR
            - TIME_GRANULARITY_DAY
            - TIME_GRANULARITY_MONTH
            - TIME_GRANULARITY_YEAR
          default: TIME_GRANULARITY_UNSPECIFIED
        - name: streaming_type
          in: query
          required: false
          type: string
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - RESOURCE_TYPE_LIVE
            - RESOURCE_TYPE_VOD
            - RESOURCE_TYPE_LIVE_EVENT
            - RESOURCE_TYPE_LIVE_EVENT_RECORDING
            - RESOURCE_TYPE_VOD_EVENT
          default: RESOURCE_TYPE_UNSPECIFIED
        - name: business_org_ids
          in: query
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: devices
          description: performance filters
          in: query
          required: false
          type: array
          items:
            type: string
            enum:
              - USER_DEVICE_TYPE_UNSPECIFIED
              - USER_DEVICE_TYPE_DESKTOP
              - USER_DEVICE_TYPE_MOBILE_IOS
              - USER_DEVICE_TYPE_MOBILE_ANDROID
              - USER_DEVICE_TYPE_TABLET_IOS
              - USER_DEVICE_TYPE_TABLET_ANDROID
              - USER_DEVICE_TYPE_OTHERS
          collectionFormat: multi
        - name: countries
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: performance_type
          description: line chart filters
          in: query
          required: true
          type: string
          enum:
            - PERFORMANCE_TYPE_UNSPECIFIED
            - PERFORMANCE_TYPE_VIEWS
            - PERFORMANCE_TYPE_UNIQUE_VIEWERS
            - PERFORMANCE_TYPE_AVG_VIEWER_VIEWS
            - PERFORMANCE_TYPE_WATCH_TIME
            - PERFORMANCE_TYPE_AVG_WATCH_TIME
          default: PERFORMANCE_TYPE_UNSPECIFIED
        - name: breakdown_dimension
          in: query
          required: true
          type: string
          enum:
            - PERFORMANCE_TIME_CHART_BREAKDOWN_DIMENSION_UNSPECIFIED
            - PERFORMANCE_TIME_CHART_BREAKDOWN_DIMENSION_STREAMING_TYPE
            - PERFORMANCE_TIME_CHART_BREAKDOWN_DIMENSION_DEVICE
            - PERFORMANCE_TIME_CHART_BREAKDOWN_DIMENSION_GEOGRAPHY
          default: PERFORMANCE_TIME_CHART_BREAKDOWN_DIMENSION_UNSPECIFIED
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/performance/by-org-time-charts:
    get:
      summary: Get analytics performance time charts by org type
      description: |-
        This API is used to get analytics performance time charts by org type.
        Country codes that are not mapped will be labeled as "COUNTRY_CODE_OTHERS".
        Device type that is not mapped will be labeled as "DEVICE_TYPE_OTHERS".
        For the request parameter devices and countries, if the value is empty, it will be treated as "all options including others".

        ----

        Required field(s):
        - `start_time`
        - `end_time`
        - `time_granularity`
        - `business_org_ids`
        - `performance_type`
        - `breakdown_org_type`

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_GetAnalyticsPerformanceByOrgTimeCharts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.GetAnalyticsPerformanceByOrgTimeChartsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: start_time
          description: page filters
          in: query
          required: true
          type: string
          format: date-time
        - name: end_time
          in: query
          required: true
          type: string
          format: date-time
        - name: time_granularity
          in: query
          required: true
          type: string
          enum:
            - TIME_GRANULARITY_UNSPECIFIED
            - TIME_GRANULARITY_HOUR
            - TIME_GRANULARITY_DAY
            - TIME_GRANULARITY_MONTH
            - TIME_GRANULARITY_YEAR
          default: TIME_GRANULARITY_UNSPECIFIED
        - name: streaming_type
          in: query
          required: false
          type: string
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - RESOURCE_TYPE_LIVE
            - RESOURCE_TYPE_VOD
            - RESOURCE_TYPE_LIVE_EVENT
            - RESOURCE_TYPE_LIVE_EVENT_RECORDING
            - RESOURCE_TYPE_VOD_EVENT
          default: RESOURCE_TYPE_UNSPECIFIED
        - name: business_org_ids
          in: query
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: devices
          description: performance filters
          in: query
          required: false
          type: array
          items:
            type: string
            enum:
              - USER_DEVICE_TYPE_UNSPECIFIED
              - USER_DEVICE_TYPE_DESKTOP
              - USER_DEVICE_TYPE_MOBILE_IOS
              - USER_DEVICE_TYPE_MOBILE_ANDROID
              - USER_DEVICE_TYPE_TABLET_IOS
              - USER_DEVICE_TYPE_TABLET_ANDROID
              - USER_DEVICE_TYPE_OTHERS
          collectionFormat: multi
        - name: countries
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: performance_type
          description: line chart filters
          in: query
          required: true
          type: string
          enum:
            - PERFORMANCE_TYPE_UNSPECIFIED
            - PERFORMANCE_TYPE_VIEWS
            - PERFORMANCE_TYPE_UNIQUE_VIEWERS
            - PERFORMANCE_TYPE_AVG_VIEWER_VIEWS
            - PERFORMANCE_TYPE_WATCH_TIME
            - PERFORMANCE_TYPE_AVG_WATCH_TIME
          default: PERFORMANCE_TYPE_UNSPECIFIED
        - name: breakdown_org_type
          in: query
          required: true
          type: string
          enum:
            - ORGANIZATION_TYPE_UNSPECIFIED
            - ORGANIZATION_TYPE_ROOT
            - ORGANIZATION_TYPE_GENERAL_DISTRIBUTOR
            - ORGANIZATION_TYPE_RESELLER
            - ORGANIZATION_TYPE_BUSINESS
          default: ORGANIZATION_TYPE_UNSPECIFIED
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/performance/pie-charts:
    get:
      summary: Get analytics performance pie charts
      description: |-
        This API is used to get the performance pie charts for the given time range, including
        streaming_type_pie_chart, device_pie_chart, and region_pie_chart.
        Country codes that are not mapped will be labeled as "COUNTRY_CODE_OTHERS".
        Device type that is not mapped will be labeled as "DEVICE_TYPE_OTHERS".
        For the request parameter devices and countries, if the value is empty, it will be treated as "all options including others".

        ----

        Required field(s):
        - `start_time`
        - `end_time`
        - `business_org_ids`
        - `dimension_type`

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_GetAnalyticsPerformancePieCharts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.GetAnalyticsPerformancePieChartsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: start_time
          description: page filters
          in: query
          required: true
          type: string
          format: date-time
        - name: end_time
          in: query
          required: true
          type: string
          format: date-time
        - name: streaming_type
          in: query
          required: false
          type: string
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - RESOURCE_TYPE_LIVE
            - RESOURCE_TYPE_VOD
            - RESOURCE_TYPE_LIVE_EVENT
            - RESOURCE_TYPE_LIVE_EVENT_RECORDING
            - RESOURCE_TYPE_VOD_EVENT
          default: RESOURCE_TYPE_UNSPECIFIED
        - name: business_org_ids
          in: query
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: devices
          description: performance filters
          in: query
          required: false
          type: array
          items:
            type: string
            enum:
              - USER_DEVICE_TYPE_UNSPECIFIED
              - USER_DEVICE_TYPE_DESKTOP
              - USER_DEVICE_TYPE_MOBILE_IOS
              - USER_DEVICE_TYPE_MOBILE_ANDROID
              - USER_DEVICE_TYPE_TABLET_IOS
              - USER_DEVICE_TYPE_TABLET_ANDROID
              - USER_DEVICE_TYPE_OTHERS
          collectionFormat: multi
        - name: countries
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: dimension_type
          description: pie chart filters
          in: query
          required: true
          type: string
          enum:
            - PIE_CHART_DIMENSION_TYPE_UNSPECIFIED
            - PIE_CHART_DIMENSION_TYPE_VIEWS
            - PIE_CHART_DIMENSION_TYPE_WATCH_TIME
          default: PIE_CHART_DIMENSION_TYPE_UNSPECIFIED
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/performance/summary:
    get:
      summary: Get analytics performance summary
      description: |-
        This API is used to get the performance summary of the business.
        Country codes that are not mapped will be labeled as "COUNTRY_CODE_OTHERS".
        Device type that is not mapped will be labeled as "DEVICE_TYPE_OTHERS".
        For the request parameter devices and countries, if the value is empty, it will be treated as "all options including others".

        ----

        Required field(s):
        - `start_time`
        - `end_time`
        - `business_org_ids`

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_GetAnalyticsPerformanceSummary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.GetAnalyticsPerformanceSummaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: start_time
          description: page filters
          in: query
          required: true
          type: string
          format: date-time
        - name: end_time
          in: query
          required: true
          type: string
          format: date-time
        - name: streaming_type
          in: query
          required: false
          type: string
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - RESOURCE_TYPE_LIVE
            - RESOURCE_TYPE_VOD
            - RESOURCE_TYPE_LIVE_EVENT
            - RESOURCE_TYPE_LIVE_EVENT_RECORDING
            - RESOURCE_TYPE_VOD_EVENT
          default: RESOURCE_TYPE_UNSPECIFIED
        - name: business_org_ids
          in: query
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: devices
          description: performance filters
          in: query
          required: false
          type: array
          items:
            type: string
            enum:
              - USER_DEVICE_TYPE_UNSPECIFIED
              - USER_DEVICE_TYPE_DESKTOP
              - USER_DEVICE_TYPE_MOBILE_IOS
              - USER_DEVICE_TYPE_MOBILE_ANDROID
              - USER_DEVICE_TYPE_TABLET_IOS
              - USER_DEVICE_TYPE_TABLET_ANDROID
              - USER_DEVICE_TYPE_OTHERS
          collectionFormat: multi
        - name: countries
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/reports/cdn-usage:
    get:
      summary: Fetch cdn usage report
      description: |-
        This API is used to get the url of cdn usage report.

        ----

        Required field(s):

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `404`/`NotFound` error if the report has not generated yet.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_FetchCDNUsageReport
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.FetchCDNUsageReportResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: time
          in: query
          required: true
          type: string
          format: date-time
        - name: streaming_type
          in: query
          required: true
          type: string
          enum:
            - CDN_REPORT_STREAMING_TYPE_UNSPECIFIED
            - CDN_REPORT_STREAMING_TYPE_LIVE
            - CDN_REPORT_STREAMING_TYPE_VOD
            - CDN_REPORT_STREAMING_TYPE_LIVE_TO_VOD
          default: CDN_REPORT_STREAMING_TYPE_UNSPECIFIED
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/analytics/v1/reports/watch-time:
    get:
      summary: Fetch watching time report
      description: |-
        This API is used to get the url of watching time report.

        ----

        Required field(s):

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `404`/`NotFound` error if the report has not generated yet.
        - It'll return a `500`/`Internal Server Error` error if any internal error occurs.
      operationId: PublicAnalyticsService_FetchWatchTimeReport
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/analytics.v1.FetchWatchTimeReportResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: time
          in: query
          required: true
          type: string
          format: date-time
        - name: streaming_type
          in: query
          required: true
          type: string
          enum:
            - REPORT_STREAMING_TYPE_UNSPECIFIED
            - REPORT_STREAMING_TYPE_LIVE
            - REPORT_STREAMING_TYPE_VOD
          default: REPORT_STREAMING_TYPE_UNSPECIFIED
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Analytics
  /bv/billing/v1/billing-receivable:
    get:
      summary: Get Billing Receivable
      description: This API returns the billing receivable of the organization.
      operationId: PublicBillingService_GetBillingReceivable
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/billing.v1.GetBillingReceivableResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      tags:
        - Billing
  /bv/billing/v1/billings:
    get:
      summary: List Billings
      description: This API returns the list of billings of the organization.
      operationId: PublicBillingService_ListBillings
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/billing.v1.ListBillingsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          in: query
          required: false
          type: integer
          format: int32
        - name: items_per_page
          in: query
          required: false
          type: integer
          format: int32
        - name: start_time_gte
          description: start_time greater than or equal to this value
          in: query
          required: false
          type: string
          format: date-time
        - name: end_time_lte
          description: end_time less than or equal to this value
          in: query
          required: false
          type: string
          format: date-time
      tags:
        - Billing
  /bv/billing/v1/billings/{id}:
    get:
      summary: Get Billing
      description: This API returns the billing of the organization.
      operationId: PublicBillingService_GetBilling
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/billing.v1.GetBillingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Billing
  /bv/billing/v1/billings:list-sub-org:
    get:
      summary: List Sub Org Billings
      description: This API returns the list of billings of the billing id.
      operationId: PublicBillingService_ListSubOrgBillings
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/billing.v1.ListSubOrgBillingsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          in: query
          required: false
          type: integer
          format: int32
        - name: items_per_page
          in: query
          required: false
          type: integer
          format: int32
        - name: billing_id
          in: query
          required: false
          type: string
      tags:
        - Billing
  /bv/billing/v1/csv-reports:
    post:
      summary: Create CSV Report
      description: |-
        This API creates the CSV report of the organization and returns the report id.
        If the billing id is specified, the CSV report will be created for the billing.
      operationId: PublicBillingService_CreateCSVReport
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/billing.v1.CreateCSVReportResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/billing.v1.CreateCSVReportRequest'
      tags:
        - Billing
  /bv/billing/v1/csv-reports/{id}:fetch:
    get:
      summary: Fetch CSV Report
      description: This API fetches the CSV report of the report id.
      operationId: PublicBillingService_FetchCSVReport
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/billing.v1.FetchCSVReportResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Billing
  /bv/chatroom/v1/chatrooms:
    get:
      summary: Get a chatroom
      description: |-
        This API will get a chatroom resource with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_GetChatroom
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.GetChatroomResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
    post:
      summary: Create a chatroom
      description: |-
        This API is used to create the chatroom resource with the BV token.

        ---

        The authorization header should be the `BV token`.
      operationId: PublicChatroomService_CreateChatroom
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.CreateChatroomResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chatroom.v1.CreateChatroomRequest'
        - name: authorization
          description: This API should be invoked with the `BV token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms/{id}/tokens:
    post:
      summary: Create chatroom token
      description: |-
        This API is used to create the chatroom token with the BV token.

        ---

        The authorization header should be the `BV token`.
      operationId: PublicChatroomService_CreateChatroomToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.CreateChatroomTokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The uuid of the chatroom that was target to create the token.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              role:
                $ref: '#/definitions/chatroom.v1.CreateChatroomTokenRequest.Role'
                description: Optional. The role of the token to used. Default will use `ROLE_VIEWER` if not provided.
              device_id:
                type: string
                description: Optional. The device identitier of the token to used. Default will generate an UUID string if not provided.
              subject:
                type: string
                description: Optional. The user identitier of then token to used. Default will generate a guest UUID string if not provided.
        - name: authorization
          description: This API should be invoked with the `BV token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms/dictionaries:
    get:
      summary: List dictionaries in the chatroom
      description: |-
        This API will list dictionaries which available or enabled in the chatroom with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_ListChatroomDictionaries
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.ListChatroomDictionariesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: page_size
          description: 'Maximum value: 100. Default value: 10.'
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: |-
            A page token, received from a previous `ListChatroomDictionaries` API call. Provide this to retrieve the subsequent
            page. When paginating, all other parameters provided to `ListChatroomDictionaries` must match the call that provided
            the page token.
          in: query
          required: false
          type: string
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms/dictionaries/{id}:disable:
    post:
      summary: Disable a dictionary in the chatroom
      description: |-
        This API will disable a dictionary in the chatroom with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_DisableChatroomDictionary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.DisableChatroomDictionaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The uuid of the dictionary that targets to disable in the chatroom.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms/dictionaries/{id}:enable:
    post:
      summary: Enable a dictionary in the chatroom
      description: |-
        This API will enable a dictionary in the chatroom with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_EnableChatroomDictionary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.EnableChatroomDictionaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The uuid of the dictionary that targets to enable in the chatroom.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms/dictionaries:batch-update:
    post:
      summary: Batch update dictionaries in the chatroom
      description: |-
        This API will batch update dictionaries in the chatroom with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_BatchUpdateChatroomDictionaries
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.BatchUpdateChatroomDictionariesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chatroom.v1.BatchUpdateChatroomDictionariesRequest'
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms/messages/{id}:
    delete:
      summary: Delete a chatroom message
      description: |-
        This API will delete a message in the chatroom with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_DeleteChatroomMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.DeleteChatroomMessageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The uuid of the message that targets to delete in the chatroom.
          in: path
          required: true
          type: string
        - name: action_taker.id
          description: Output only. The uuid of the user.
          in: query
          required: false
          type: string
        - name: action_taker.device_id
          description: Output only. The device id that was used by the user.
          in: query
          required: false
          type: string
        - name: action_taker.custom_name
          description: Required. The custom name of the user.
          in: query
          required: true
          type: string
        - name: action_taker.is_admin
          description: Output only. Indicates the user whether or not is an admin.
          in: query
          required: false
          type: boolean
        - name: action_taker.blocked
          description: Output only. Indicates the user whether or not is blocked.
          in: query
          required: false
          type: boolean
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms/messages:pin:
    post:
      summary: Pin a message in the chatroom
      description: |-
        This API will pin a chatroom message with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_PinChatroomMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.PinChatroomMessageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chatroom.v1.PinChatroomMessageRequest'
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms/messages:unpin:
    post:
      summary: Unpin a message in the chatroom
      description: |-
        This API will unpin a chatroom message with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_UnpinChatroomMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.UnpinChatroomMessageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chatroom.v1.UnpinChatroomMessageRequest'
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms/polls:
    get:
      summary: List polls in the chatroom
      description: |-
        This API will list polls in the chatroom with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_ListChatroomPolls
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.ListChatroomPollsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: page_size
          description: 'Maximum value: 100. Default value: 10.'
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: |-
            A page token, received from a previous `ListChatPolls` API call. Provide this to retrieve the subsequent
            page. When paginating, all other parameters provided to `ListChatPolls` must match the call that provided
            the page token.
          in: query
          required: false
          type: string
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
    post:
      summary: Create a poll in the chatroom
      description: |-
        This API will create a poll in the chatroom with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_CreateChatroomPoll
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.CreateChatroomPollResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chatroom.v1.CreateChatroomPollRequest'
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms/polls/{id}:
    get:
      summary: Get a poll in the chatroom
      description: |-
        This API will get a poll in the chatroom with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_GetChatroomPoll
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.GetChatroomPollResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The uuid of the poll in the chatroom.
          in: path
          required: true
          type: string
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
    delete:
      summary: Delete a poll in the chatroom
      description: |-
        This API will delete a poll in the chatroom with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_DeleteChatroomPoll
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.DeleteChatroomPollResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The uuid of the poll that targets to delete in the chatroom.
          in: path
          required: true
          type: string
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms/polls/{id}:change:
    post:
      summary: Change the poll status in the chatroom
      description: |-
        This API can change the poll status in the chatroom with the chatroom token.

        The available actions listed as follows:
          - `ACTION_START`: Can be used when current status in `POLL_STATUS_QUEUED`.
          - `ACTION_CLOSE`: Can be used when current status in `POLL_STATUS_ACTIVE`.
          - `ACTION_ARCHIVE`: Can be used when current status in `POLL_STATUS_CLOSED`.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_ChangeChatroomPoll
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.ChangeChatroomPollResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              action:
                $ref: '#/definitions/chatroom.v1.ChangeChatroomPollRequest.Action'
                description: Required.
              action_taker:
                $ref: '#/definitions/chatroom.v1.ChatroomUser'
                description: Required.
            required:
              - action
              - action_taker
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms/polls/{poll.id}:
    put:
      summary: Update a poll in the chatroom
      description: |-
        This API will update a poll in the chatroom with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_UpdateChatroomPoll
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.UpdateChatroomPollResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: poll.id
          description: Optional. Immutable. Required if in update operation, otherwise will be an output only field.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              poll:
                type: object
                properties:
                  type:
                    $ref: '#/definitions/chatroom.v1.PollType'
                    description: Required.
                  status:
                    $ref: '#/definitions/chatroom.v1.PollStatus'
                    description: Output only.
                    readOnly: true
                  votes_count:
                    type: integer
                    format: int32
                    description: Output only.
                    readOnly: true
                  multi_choice:
                    $ref: '#/definitions/chatroom.v1.MultiChoicePoll'
                    description: Optional. Required if type is `POLL_TYPE_SINGLE_CHOICE` or `POLL_TYPE_MULTI_CHOICE`.
                  started_at:
                    type: string
                    format: date-time
                    description: Output only.
                    readOnly: true
                  ended_at:
                    type: string
                    format: date-time
                    description: Output only.
                    readOnly: true
                description: Required. The poll to be updated.
                title: Required. The poll to be updated.
            required:
              - type
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms/users:block:
    post:
      summary: Block a user in the chatroom
      description: |-
        This API will block a user in the chatroom with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_BlockChatroomUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.BlockChatroomUserResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chatroom.v1.BlockChatroomUserRequest'
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms/users:unblock:
    post:
      summary: Unblock a user in the chatroom
      description: |-
        This API will unblock a user in the chatroom with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_UnblockChatroomUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.UnblockChatroomUserResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chatroom.v1.UnblockChatroomUserRequest'
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms:mute:
    post:
      summary: Mute the chatroom
      description: |-
        This API will mute the chatroom with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_MuteChatroom
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.MuteChatroomResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chatroom.v1.MuteChatroomRequest'
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/chatrooms:unmute:
    post:
      summary: Unmute the chatroom
      description: |-
        This API will unmute the chatroom with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_UnmuteChatroom
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.UnmuteChatroomResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chatroom.v1.UnmuteChatroomRequest'
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/dictionaries:
    get:
      summary: List dictionaries
      description: |-
        This API will list all available dictionaries in the chatroom with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_ListDictionaries
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.ListDictionariesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: page_size
          description: 'Maximum value: 100. Default value: 10.'
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: |-
            A page token, received from a previous `ListDictionaries` API call. Provide this to retrieve the subsequent page.
            When paginating, all other parameters provided to `ListDictionaries` must match the call that provided the page
            token.
          in: query
          required: false
          type: string
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
    post:
      summary: Create a dictionary
      description: |-
        This API will create a dictionary with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_CreateDictionary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.CreateDictionaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chatroom.v1.CreateDictionaryRequest'
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/dictionaries/{id}:
    get:
      summary: Get a dictionary
      description: |-
        This API will get a dictionary with specified id with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_GetDictionary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.GetDictionaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The uuid of the dictionary.
          in: path
          required: true
          type: string
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
    delete:
      summary: Delete a dictionary
      description: |-
        This API will delete a specified dictionary with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_DeleteDictionary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.DeleteDictionaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The uuid of the dictionary to delete.
          in: path
          required: true
          type: string
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
    put:
      summary: Update a dictionary
      description: |-
        This API will update a specified dictionary with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_UpdateDictionary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.UpdateDictionaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The uuid of the dictionary to update.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Optional. The name of the dictionary to update. It will not update the name if not provided.
              description:
                type: string
                description: Optional. The description of the dictionary to update. It will not udpate the description if not provided.
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/dictionaries/{id}/patterns:
    get:
      summary: List patterns in the dictionary
      description: |-
        This API will list patterns in the specified dictionary by the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_ListDictionaryPatterns
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.ListDictionaryPatternsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The uuid of the dictionary that wants to list the patterns in it.
          in: path
          required: true
          type: string
        - name: page_size
          description: 'Maximum value: 100. Default value: 10.'
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: |-
            A page token, received from a previous `ListDictionaryPatterns` API call. Provide this to retrieve the subsequent page.
            When paginating, all other parameters provided to `ListDictionaryPatterns` must match the call that provided the page
            token.
          in: query
          required: false
          type: string
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
    post:
      summary: Create a pattern in the dictionary
      description: |-
        This API will create a pattern in the specified dictionary by the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_CreateDictionaryPattern
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.CreateDictionaryPatternResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The uuid of the dictionary that wants to create the pattern in it.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              text:
                type: string
                description: Required. The text of the pattern to create.
            required:
              - text
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/dictionaries/{id}/patterns:batch-create:
    post:
      summary: Batch create patterns in the dictionary
      description: |-
        This API will batch create patterns in the specified dictionary by the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_BatchCreateDictionaryPatterns
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.BatchCreateDictionaryPatternsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The uuid of the dictionary that wants to batch create patterns in it.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              texts:
                type: array
                items:
                  type: string
                description: Required. The texts of the pattern to batch create.
            required:
              - texts
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/chatroom/v1/patterns/{id}:
    delete:
      summary: Delete a pattern
      description: |-
        This API will delete a specified pattern with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_DeletePattern
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.DeletePatternResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The uuid of the pattern to delete.
          in: path
          required: true
          type: string
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
    put:
      summary: Update a pattern
      description: |-
        This API will update a specified pattern with the chatroom token.

        ---

        The authorization header should be the `chatroom token`.
      operationId: PublicChatroomService_UpdatePattern
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chatroom.v1.UpdatePatternResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The uuid of the pattern to update.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              text:
                type: string
                description: Required. The text to udpate.
            required:
              - text
        - name: authorization
          description: This API should be invoked with the `chatroom token`.
          in: header
          required: false
          type: string
      tags:
        - Chatroom
  /bv/cms/v1/admin/tokens:
    post:
      summary: Create an admin playback token
      description: |-
        This API will return an admin token which is used to access the live or vod and request for DRM license.
        It allows user to preview the live or vod before publishing.

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_CreateAdminPlaybackToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CreateAdminPlaybackTokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CreateAdminPlaybackTokenRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/announcements/banners:
    get:
      summary: List banners
      description: This API will get list of banners by organization type.
      operationId: PublicCMSService_ListBanners
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.ListBannersResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    post:
      summary: Create banner
      description: |-
        This API will create banner to specific organization type.
        Note: This API can only be invoked by accounts belonging to the root organization.
      operationId: PublicCMSService_CreateBanner
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CreateBannerResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CreateBannerRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/announcements/banners/{id}:
    get:
      summary: Get banner
      description: This API will get banner by announcement id.
      operationId: PublicCMSService_GetBanner
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.GetBannerResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of banner.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    put:
      summary: Update banner
      description: |-
        This API will update banner to specific organization type.

        ---

        Note: This API can only be invoked by accounts belonging to the root organization.
      operationId: PublicCMSService_UpdateBanner
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.UpdateBannerResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of banner.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              banner:
                $ref: '#/definitions/cms.v1.Banner'
                description: Required.
            required:
              - banner
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/announcements/faqs:
    get:
      summary: List FAQs
      description: This API will get list of FAQs by organization type.
      operationId: PublicCMSService_ListFAQs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.ListFAQsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    post:
      summary: Create FAQ
      description: |-
        This API will create FAQ to specific organization type.
        Note: This API can only be invoked by accounts belonging to the root organization.
      operationId: PublicCMSService_CreateFAQ
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CreateFAQResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CreateFAQRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/announcements/faqs/{id}:
    get:
      summary: Get FAQ
      description: This API will get FAQ by announcement id.
      operationId: PublicCMSService_GetFAQ
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.GetFAQResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of banner.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    put:
      summary: Update FAQ
      description: |-
        This API will update FAQ to specific organization type.

        ---

        Note: This API can only be invoked by accounts belonging to the root organization.
      operationId: PublicCMSService_UpdateFAQ
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.UpdateFAQResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of faq.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              faq:
                $ref: '#/definitions/cms.v1.FAQ'
                description: Required.
            required:
              - faq
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/announcements/tutorials:
    get:
      summary: List Tutorials
      description: This API will get list of tutorials by organization type.
      operationId: PublicCMSService_ListTutorials
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.ListTutorialsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    post:
      summary: Create Tutorial
      description: |-
        This API will create Tutorial to specific organization type.
        Note: This API can only be invoked by accounts belonging to the root organization.
      operationId: PublicCMSService_CreateTutorial
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CreateTutorialResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CreateTutorialRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/announcements/tutorials/{id}:
    get:
      summary: Get Tutorial
      description: This API will get Tutorial by announcement id.
      operationId: PublicCMSService_GetTutorial
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.GetTutorialResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of banner.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    put:
      summary: Update Tutorial
      description: |-
        This API will update Tutorial to specific organization type.

        ---

        Note: This API can only be invoked by accounts belonging to the root organization.
      operationId: PublicCMSService_UpdateTutorial
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.UpdateTutorialResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of tutorial.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              tutorial:
                $ref: '#/definitions/cms.v1.Tutorial'
                description: Required.
            required:
              - tutorial
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/cloud-storages/{id}:validate-file:
    post:
      summary: Validate file exist from cloud storage
      description: |-
        ----

        Required field(s):

        ----
      operationId: PublicCMSService_ValidateCloudStorageFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.ValidateCloudStorageFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              file_path:
                type: string
            required:
              - file_path
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/instant-encodings:
    post:
      summary: Create an instant encoding
      description: |-
        This API will create an instant encoding.

        ----
        This API allows you to quickly and easily encode audio file. By sending a POST request with the audio file source data, you can receive a response with the encoded audio file in the desired format. This can be useful for situations where real-time audio encoding is required.

        ----

        Required field(s):
        - `name`
        - `instant_profile_set_id`
        - `source`

        ----

        - It'll return a `400`/`BadRequest` error if any of the request fields are invalid.
      operationId: PublicCMSService_CreateInstantEncoding
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CreateInstantEncodingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          description: Request payload that used to create an instant encoding
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CreateInstantEncodingRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/instant-encodings/{id}:
    get:
      summary: Get an instant encoding
      description: |-
        This API will get a specific instant encoding.

        ----
        This API allows you to get the specific instant encoding data by instant encoding id

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_GetInstantEncoding
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.GetInstantEncodingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: This attribute specifies the unique id of the instant encoding
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    put:
      summary: Update an instant encoding
      description: |-
        This API can update an instant encoding.

        ----
        This API allows you to update the specific instant encoding by instant encoding id

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_UpdateInstantEncoding
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.UpdateInstantEncodingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: This attribute specifies the unique id of the instant encoding
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            example:
              expire_duration: 3600s
            properties:
              expire_duration:
                type: string
                description: This attribute indicates the TTL (Time-to-Live) of the instant encoding data, with the minimum unit being seconds. Follow the ISO 8601 standard when making RESTful requests.
            description: Request payload that used to update an instant encoding
            title: UpdateInstantEncodingRequest
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/internal/lives:check-live-quota-trigger:
    post:
      summary: Check live quota trigger
      description: |-
        This API will check the following conditions:
          - archive when live minute limit exceeds for orgs with free-trial

        ----
      operationId: CMSService_CheckLiveQuotaTrigger
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CheckLiveQuotaTriggerResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CheckLiveQuotaTriggerRequest'
      tags:
        - CMS
  /bv/cms/v1/internal/lives:check-scheduled-trigger:
    post:
      summary: Check live scheduled trigger
      description: |-
        This API will check the following conditions:
          - trigger if the live status is "Scheduled" and which `scheduled_at` is in 12 hours.

        ----
      operationId: CMSService_CheckLiveScheduledTrigger
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CheckLiveScheduledTriggerResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CheckLiveScheduledTriggerRequest'
      tags:
        - CMS
  /bv/cms/v1/internal/lives:check-simulive-auto-trigger:
    post:
      summary: Check simulive auto trigger
      description: |-
        This API will check the following conditions:
          - start if the simulive status is "Preview" and which `scheduled_at` is in 1 minutes.
          - preview if the simulive status is "Wait for Preview" and which `scheduled_at` is in 15 minutes.

        ----
      operationId: CMSService_CheckSimuliveAutoTrigger
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CheckSimuliveAutoTriggerResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CheckSimuliveAutoTriggerRequest'
      tags:
        - CMS
  /bv/cms/v1/internal/lives:check-vod-available:
    post:
      summary: Check live vod available
      description: |-
        This API will check the following conditions:
          - start the vod if the live status is "VOD Ready" and which `vod_started_time` is in 1 minute.
          - end the vod if the live status is "VOD" and which `vod_ended_time` is before 5 minutes.

        ----
      operationId: CMSService_CheckLiveVODAvailable
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CheckLiveVODAvailableResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CheckLiveVODAvailableRequest'
      tags:
        - CMS
  /bv/cms/v1/internal/meetings:check-schedule:
    post:
      summary: Check meeting schedule
      description: |-
        This API will check the following conditions:
          - start the meeting 6 hours before scheduled_started_at.
          - close the meeting 6 hours after scheduled_ended_at.

        ----
      operationId: CMSService_CheckMeetingSchedule
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CheckMeetingScheduleResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CheckMeetingScheduleRequest'
      tags:
        - CMS
  /bv/cms/v1/kkbox/instant-encodings:
    post:
      summary: Create an instant encoding with KKDRM (KKBOX only)
      description: |-
        This API will create an instant encoding.

        ----
        This API allows you to quickly and easily encode audio file. By sending a POST request with the audio file source data, you can receive a response with the encoded audio file in the desired format. This can be useful for situations where real-time audio encoding is required.

        ----

        Required field(s):
        - `name`
        - `instant_profile_set_id`
        - `source`

        ----

        - It'll return a `400`/`BadRequest` error if any of the request fields are invalid.
      operationId: PublicCMSService_CreateKKBOXInstantEncoding
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CreateKKBOXInstantEncodingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          description: Request payload that used to create an instant encoding
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CreateKKBOXInstantEncodingRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/library/files:
    get:
      summary: List files
      description: This API will return an array of `File` resources.
      operationId: PublicCMSService_ListFiles
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.ListFilesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: 'Input only. Indicates the current page to show. Default: 1'
          in: query
          required: false
          type: integer
          format: int32
        - name: items_per_page
          description: 'Input only. Indicates the number of items to show per page. Default: 10.'
          in: query
          required: false
          type: integer
          format: int32
        - name: type
          description: Optional. Filter by the type of file
          in: query
          required: false
          type: string
          enum:
            - FILE_TYPE_UNSPECIFIED
            - FILE_TYPE_VIDEO
            - FILE_TYPE_IMAGE
            - FILE_TYPE_SUBTITLE
          default: FILE_TYPE_UNSPECIFIED
        - name: filter.name
          description: Filter by the name of file
          in: query
          required: false
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/library/files/{id}:
    get:
      summary: Get a file
      description: |-
        This API will return a `File` resource.

        ----

        Required field(s):
        - `id`

        ----
      operationId: PublicCMSService_GetFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.GetFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    delete:
      summary: Delete a file
      description: |-
        This API will delete a `File` resource.

        ----

        Required field(s):
        - `id`

        ----
      operationId: PublicCMSService_DeleteFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.DeleteFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.  The unique id of the file.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/library/files/{id}:cancel-upload:
    post:
      summary: Cancel an upload file
      description: |-
        This API cancels an upload file session.

        ----

        Required field(s):
        - `id`
        - `upload_id`

        ----
      operationId: PublicCMSService_CancelUploadFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CancelUploadFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the file.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            example:
              upload_id: gV15jwcrnr0b3cS8IkVUeE6bFyh2msumKso0bgBE54CG8s0Rv1AOGg0GKbuUTH1f.Z4MLu4LXP5CdVB4Pi2MQZYq7JxXS4Dem0Tncvj8T7zMJ_rHe1gEiRxn0jfbWUWn6dSqh8.tsDI_fY9ANwMkicV6CJjkFeHJ9q_KIx_UMrQ-
            properties:
              upload_id:
                type: string
                description: Required. The upload id of the file.
            required:
              - upload_id
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/library/files/{id}:complete-upload:
    post:
      summary: Complete an upload file
      description: |-
        This API completes an upload file session and must be called to finalize the upload file.

        ----

        Required field(s):
        - `id`
        - `complete_data`

        ----
      operationId: PublicCMSService_CompleteUploadFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CompleteUploadFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the file.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            example:
              complete_data:
                checksum_sha1: pdDzow0HQgS+BeLRmgWFL6/Zccw=
                id: dwMWwZSBxtEKsVxv2IMet4M3R7F73X2UffUxY6t3xxQpUd6qBTshDQpPQ5FcQOSl.GAVgIhTIcZfEUgnqt8G4jyAx._0MMr2lzbq_VTtSUg17BHqfv6e9UkrQxHRxkaxboGmUxyQOjJRji3i4LAUTdc.uB61T4mCB1Tm2QI1jeo-
                parts:
                  - etag: '"24bf9bdcc2ef220775c3ec539ac9397e"'
                    part_number: 1
            properties:
              complete_data:
                $ref: '#/definitions/cms.v1.CompleteData'
                description: Required.
            required:
              - complete_data
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/library/files/{id}:download:
    post:
      summary: Download a file
      description: |-
        ----

        This API allows you to retrieve the download link and link expiration time for a specific file. You need to provide the id parameter to identify the desired file.

        ----

        Required field(s):
        - `id`

        ----
      operationId: PublicCMSService_DownloadFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.DownloadFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the file.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            description: Request payload used to retrieve the download information of a file.
            title: DownloadFileRequest
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/library/files:upload:
    post:
      summary: Upload a file
      description: |-
        This API will initiate a file upload session. You should call the 'complete a upload file' api to finalize the file upload after the file data has been uploaded.

        ----

        Required field(s):
        - `file`

        ----
      operationId: PublicCMSService_UploadFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.UploadFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.UploadFileRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/lives:
    get:
      summary: List lives
      description: This API will list the lives.
      operationId: PublicCMSService_ListLives
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.ListLivesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: 'Input only. Indicates the current page to shows. Default: 1.'
          in: query
          required: false
          type: integer
          format: int32
        - name: items_per_page
          description: 'Input only. Indicates the number of items to shows per page. Default: 1. Max: 100.'
          in: query
          required: false
          type: integer
          format: int32
        - name: filter.name
          description: Optional. If set, filter with the lives which names contain the given string.
          in: query
          required: false
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    post:
      summary: Create a live
      description: |-
        This API will create a live.

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
      operationId: PublicCMSService_CreateLive
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CreateLiveResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CreateLiveRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/lives/{id}:
    get:
      summary: Get a live
      description: |-
        This API will get a specific live.

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_GetLive
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.GetLiveResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the live.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    put:
      summary: Update the live
      description: |-
        This API will update the live.

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_UpdateLive
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.UpdateLiveResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the live.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            example:
              name: Amazing Live
              security:
                privacy:
                  type: SECURITY_PRIVACY_TYPE_PUBLIC
            properties:
              name:
                type: string
                description: Optional. The name of the live.
                maxLength: 100
              custom_id:
                type: string
                description: Optional. The unique custom id of the live.
                maxLength: 150
                minLength: 1
                pattern: ^[a-zA-Z0-9._-]{1,150}$
              source:
                $ref: '#/definitions/cms.v1.LiveSource'
                description: Optional. Required if `type`` is `LIVE_TYPE_SIMULIVE`. Specify the pre-recorded video source for the live.
              scheduled_at:
                type: string
                format: date-time
                description: |-
                  Optional. Only used when `type` is `LIVE_TYPE_SIMULIVE`. The live will start at the scheduled time if it is set.
                  Otherwise, start immediately.
              live_vod:
                $ref: '#/definitions/cms.v1.LiveVOD'
                description: Optional. Indicates recording the live event after the live ended if it is set.
              security:
                $ref: '#/definitions/cms.v1.Security'
                description: Required. The security settings for the live.
              cover_images:
                $ref: '#/definitions/cms.v1.LiveCoverImages'
                description: Optional. Customize the cover images on the player.
              metadata:
                $ref: '#/definitions/type.bv.v1.Metadata'
                description: Optional. The metadata of the live.
              showroom:
                $ref: '#/definitions/type.bv.v1.Showroom'
                description: Optional. Customize the preferences on showroom.
              interaction:
                $ref: '#/definitions/cms.v1.Interaction'
                description: Optional. Indicates the interaction settings.
              byo_cdn:
                $ref: '#/definitions/cms.v1.ByoCdn'
                description: Optional. The setting of bring-your-own cdn.
              player:
                $ref: '#/definitions/cms.v1.Player'
                description: Optional. The setting of player.
            required:
              - security
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/lives/{id}/dvr:
    put:
      summary: Update the DVR setting
      description: |-
        This API will update the DVR setting on the live stream.
        The changes will only apply to viewers who start playing the live stream after making the change.

        ----

        - It'll return a `400`/`BadRequest` error if DVR is disabled on the live.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_UpdateLiveDVR
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.UpdateLiveDVRResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the live.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              started_at:
                type: string
                format: date-time
                description: |-
                  Optional. Determine the live streaming position where the viewers can seek back to when the DVR is enabled in UTC+0.
                  The value will be set to current time if empty.
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/lives/{id}/interaction/chatroom/admin-names:
    put:
      summary: Update the live chatroom admin name.
      description: |-
        This API will update the live chatroom admin name.

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_UpdateLiveInteractionChatroomAdminName
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.UpdateLiveInteractionChatroomAdminNameResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the live.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Required. The admin name in chatroom.
                maxLength: 32
                minLength: 1
            required:
              - name
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/lives/{id}/interaction/chatroom/admin-names:last:
    get:
      summary: Get the chatroom admin name.
      description: |-
        This API will return the current admin name.

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_GetLiveInteractionChatroomLastAdminName
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.GetLiveInteractionChatroomLastAdminNameResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the live.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/lives/{id}/interaction/tokens:admin:
    post:
      summary: Create an admin interaction token
      description: |-
        This API will return an admin token for the specific live's chatroom and poll management.
        Return empty token if the chatroom and poll are not disabled.

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_CreateLiveAdminInteractionToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CreateLiveAdminInteractionTokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the live.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/lives/{id}/metrics:
    get:
      summary: Get live metrics.
      description: |-
        This API will return the live metrics.

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_GetLiveMetrics
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.GetLiveMetricsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the live.
          in: path
          required: true
          type: string
        - name: start_time
          description: Required. The time stamp indicating the earliest data to be returned. The time range cannot be over 8 hours.
          in: query
          required: true
          type: string
          format: date-time
        - name: end_time
          description: Required. The time stamp indicating the latest data to be returned. The time range cannot be over 8 hours.
          in: query
          required: true
          type: string
          format: date-time
        - name: types
          description: |-
            Optional. The live metrics types. It will request for all types of metrics if empty.

             - LIVE_METRIC_TYPE_NETWORK_IN: The rate of traffic coming into the streaming server. Unit: Mbps.
             - LIVE_METRIC_TYPE_FRAME_RATE: The frame rate of the input content. Unit: fps
             - LIVE_METRIC_TYPE_CONCURRENT_USER: The concurrent user of the input content. Unit: number of users
          in: query
          required: false
          type: array
          items:
            type: string
            enum:
              - LIVE_METRIC_TYPE_UNSPECIFIED
              - LIVE_METRIC_TYPE_NETWORK_IN
              - LIVE_METRIC_TYPE_FRAME_RATE
              - LIVE_METRIC_TYPE_CONCURRENT_USER
          collectionFormat: multi
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/lives/{id}:archive:
    post:
      summary: Archive the live
      description: |-
        This API will archive the live and the live cannot be used again.

        ----

        It can be called when the live status is:
        - LIVE_STATUS_WAIT_FOR_PREVIEW
        - LIVE_STATUS_PREVIEW
        - LIVE_STATUS_LIVE
        - LIVE_STATUS_CLOSED
        - LIVE_STATUS_FAIL_TO_CREATE
        - LIVE_STATUS_FAIL_TO_PREVIEW
        - LIVE_STATUS_FAIL_TO_END
        - LIVE_STATUS_FAIL_TO_VOD
        - LIVE_STATUS_FAIL_TO_CANCEL
        - LIVE_STATUS_FAIL_TO_ARCHIVE

        ----

        - It'll return a `400`/`BadRequest` error if the live status is not allowed to archive.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_ArchiveLive
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.ArchiveLiveResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the live.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/lives/{id}:cancel:
    post:
      summary: Cancel the live
      description: |-
        This API will cancel the live. The live will be archived after it is canceled.

        ----

        It can be called when the live status is:
        - LIVE_STATUS_SCHEDULED
        - LIVE_STATUS_WAIT_FOR_PREVIEW
        - LIVE_STATUS_PREVIEW
        - LIVE_STATUS_LIVE
        - LIVE_STATUS_VOD_READY
        - LIVE_STATUS_VOD

        ----

        - It'll return a `400`/`BadRequest` error if the live status is not allowed to cancel.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_CancelLive
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CancelLiveResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the live.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/lives/{id}:custom-id:
    get:
      summary: Get a live by custom id
      description: |-
        This API will get a specific live.

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_GetLiveByCustomID
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.GetLiveByCustomIDResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The custom id of the live.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/lives/{id}:end:
    post:
      summary: End the live
      description: |-
        This API will end the live. Start encoding and provide VOD for audiences if the VOD is enabled.
        Otherwise, close the live streaming and archive the live.

        ----

        It can be called when the live status is:
        - LIVE_STATUS_LIVE

        ----

        - It'll return a `400`/`BadRequest` error if the live status is not allowed to end.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_EndLive
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.EndLiveResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the live.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/lives/{id}:preview:
    post:
      summary: Preview the live
      description: |-
        This API will start the live streaming. The live will be previewable on the control room when the live status is changed to
        LIVE_STATUS_PREVIEW. It is still unavailable to the audience.

        ----

         It can be called when the live status is:
        - LIVE_STATUS_WAIT_FOR_PREVIEW

        ----

        - It'll return a `400`/`BadRequest` error if the live status is not allowed to preview.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_PreviewLive
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.PreviewLiveResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the live.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/lives/{id}:start:
    post:
      summary: Start the live
      description: |-
        This API will start the live. The live streaming will be available to the audience.

        ----

         It can be called when the live status is:
        - LIVE_STATUS_PREVIEW

        ----

        - It'll return a `400`/`BadRequest` error if the live status is not allowed to start.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_StartLive
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.StartLiveResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the live.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/meetings:
    get:
      summary: List meetings
      description: This API will list the meetings.
      operationId: PublicCMSService_ListMeetings
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.ListMeetingsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: 'Input only. Indicates the current page to show. Default: 1'
          in: query
          required: false
          type: integer
          format: int32
        - name: items_per_page
          description: 'Input only. Indicates the number of items to show per page. Default: 1. Max: 100.'
          in: query
          required: false
          type: integer
          format: int32
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    post:
      summary: Create a meeting
      description: |-
        This API will create a meeting.

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
      operationId: PublicCMSService_CreateMeeting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CreateMeetingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CreateMeetingRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/meetings/{id}:
    get:
      summary: Get a meeting
      description: |-
        This API will get a specific meeting.


        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_GetMeeting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.GetMeetingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the meeting.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    put:
      summary: Update the meeting
      description: |-
        This API will update the meeting.

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_UpdateMeeting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.UpdateMeetingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the meeting.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Optional. The name of the meeting.
              schedule:
                $ref: '#/definitions/cms.v1.MeetingSchedule'
                description: Required. The schedule time for the meeting. The meeting cannot be over 12 hours.
            required:
              - schedule
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/meetings/{id}/sessions:
    get:
      summary: Get the session info of the meeting
      description: |-
        This API will get the session info for joining the specified meeting.

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_GetMeetingSessionInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.GetMeetingSessionInfoResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the meeting.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/meetings/{id}:archive:
    post:
      summary: Archive the meeting
      description: |-
        This API will archive the meeting.

        ----

        - It'll return a `400`/`BadRequest` error if the meeting status is not allowed to archive.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_ArchiveMeeting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.ArchiveMeetingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the meeting.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/meetings/{id}:cancel:
    post:
      summary: Cancel the meeting
      description: |-
        This API will cancel the meeting.

        - It'll return a `400`/`BadRequest` error if the meeting status is not allowed to cancel.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_CancelMeeting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CancelMeetingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the meeting.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/meetings/{id}:close:
    post:
      summary: Close the meeting
      description: |-
        This API will close the meeting.

        ----

        - It'll return a `400`/`BadRequest` error if the meeting status is not allowed to close.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_CloseMeeting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CloseMeetingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the meeting.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/meetings/{id}:start:
    post:
      summary: Start the meeting
      description: |-
        This API will start the meeting.

        ----

        - It'll return a `400`/`BadRequest` error if the meeting status is not allowed to start.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_StartMeeting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.StartMeetingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the meeting.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/notifications:
    get:
      summary: List Notifications
      description: This API will return an array of `Notification` resources.
      operationId: PublicCMSService_ListNotifications
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.ListNotificationsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    put:
      summary: Batch update notifications
      description: This API will batch update `Notification` resources.
      operationId: PublicCMSService_BatchUpdateNotifications
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.BatchUpdateNotificationsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.BatchUpdateNotificationsRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/redeem-codes:
    get:
      summary: List redeem codes by live or vod id
      description: |-
        This API will list the redeem codes of a live or VOD.

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_ListRedeemCodes
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.ListRedeemCodesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of live or VOD.
          in: query
          required: true
          type: string
        - name: type
          description: Required. Indicates the resource type for the redeem codes.
          in: query
          required: true
          type: string
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - RESOURCE_TYPE_LIVE
            - RESOURCE_TYPE_VOD
            - RESOURCE_TYPE_LIVE_EVENT
            - RESOURCE_TYPE_LIVE_EVENT_RECORDING
            - RESOURCE_TYPE_VOD_EVENT
          default: RESOURCE_TYPE_UNSPECIFIED
      tags:
        - CMS
    post:
      summary: Create redeem codes
      description: |-
        This API will create redeem codes for a live or VOD.

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_BatchCreateRedeemCodes
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.BatchCreateRedeemCodesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.BatchCreateRedeemCodesRequest'
      tags:
        - CMS
  /bv/cms/v1/resources/{id}:
    get:
      summary: Get resource by id
      description: |-
        ----

        Required field(s):
        - `id`

        ----
      operationId: CMSService_GetResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.GetResourceResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of live or VOD.
          in: path
          required: true
          type: string
      tags:
        - CMS
  /bv/cms/v1/resources/{redeem_code}:redeem-code:
    get:
      summary: Get resource by redeem code
      description: |-
        ----

        Required field(s):
        - `redeem_code`

        ----
      operationId: CMSService_GetResourceByRedeemCode
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.GetResourceByRedeemCodeResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: redeem_code
          description: Required. The redeem code of live or VOD.
          in: path
          required: true
          type: string
      tags:
        - CMS
  /bv/cms/v1/resources/tokens:
    post:
      summary: Create a resource token
      description: |-
        This API will return an access token which is used to be embeded in the showroom iframe for accessing the live or vod.

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_CreateResourceToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CreateResourceTokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CreateResourceTokenRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/resources/tokens:admin:
    post:
      summary: Create admin resource token
      description: |-
        This API will return an access token which is used to be embeded in the showroom iframe for accessing the live or vod which is not published.

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_CreateAdminResourceToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CreateAdminResourceTokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CreateAdminResourceTokenRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/resources/tokens:revoke:
    post:
      summary: Revoke resource tokens
      description: |-
        This API will revoke access tokens which are used to be embeded in the showroom iframe for accessing the live or vod.

        ----
      operationId: PublicCMSService_RevokeResourceTokens
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.RevokeResourceTokensResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.RevokeResourceTokensRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/resources:batch-get:
    get:
      summary: Batch get resources
      description: |-
        ----

        Required field(s):
        - `resource_data`

        ----
      operationId: CMSService_BatchGetResources
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.BatchGetResourcesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      tags:
        - CMS
  /bv/cms/v1/tokens:
    post:
      summary: Create a playback token
      description: |-
        This API will return a token which is used to access the live or vod and request for DRM license.

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicCMSService_CreatePlaybackToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CreatePlaybackTokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CreatePlaybackTokenRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/vod-report-infos:batch-get:
    get:
      summary: Batch get vod report information by stream_infos
      description: |-
        ----

        Required field(s):
        - `stream_infos`

        ----
      operationId: CMSService_BatchGetVODReportInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.BatchGetVODReportInfoResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      tags:
        - CMS
  /bv/cms/v1/vods:
    get:
      summary: List VODs
      description: This API will return an array of `VOD` resources.
      operationId: PublicCMSService_ListVODs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.ListVODsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: 'Input only. Indicates the current page to show. Default: 1'
          in: query
          required: false
          type: integer
          format: int32
        - name: items_per_page
          description: 'Input only. Indicates the number of items to show per page. Default: 10.'
          in: query
          required: false
          type: integer
          format: int32
        - name: filter.name
          description: Filter by the name of VOD
          in: query
          required: false
          type: string
        - name: filter.status
          description: |-
            Filter by the status of VOD

             - VOD_STATUS_CREATED: VOD_STATUS_CREATED Indicates VOD job accepted.
             - VOD_STATUS_INGESTED: VOD_STATUS_INGESTED Indicates source file has been ingested to BlendVision One Service.
             - VOD_STATUS_QUEUED: VOD_STATUS_QUEUED Indicates VOD job is currently being encoded.
             - VOD_STATUS_ENCODED: VOD_STATUS_ENCODED Indicates VOD job is encoded.
             - VOD_STATUS_DEPLOYED: VOD_STATUS_DEPLOYED Indicates the streaming resource of VOD job has been public.
             - VOD_STATUS_SUCCEEDED: VOD_STATUS_SUCCEEDED Indicates VOD job is finished.
             - VOD_STATUS_FAILED: VOD_STATUS_FAILED Indicates VOD job is failed.
             - VOD_STATUS_CANCELLED: VOD_STATUS_CANCELLED Indicates VOD job is cancelled.
             - VOD_STATUS_DELETED: VOD_STATUS_DELETED Indicates VOD job is deleted.
          in: query
          required: false
          type: string
          enum:
            - VOD_STATUS_UNSPECIFIED
            - VOD_STATUS_CREATED
            - VOD_STATUS_INGESTED
            - VOD_STATUS_QUEUED
            - VOD_STATUS_ENCODED
            - VOD_STATUS_DEPLOYED
            - VOD_STATUS_SUCCEEDED
            - VOD_STATUS_FAILED
            - VOD_STATUS_CANCELLED
            - VOD_STATUS_DELETED
          default: VOD_STATUS_UNSPECIFIED
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    post:
      summary: Create a VOD
      description: |-
        This API will create a VOD form source file and specified profile set

        ----

        Required field(s):
        - `name`
        - `profile_set_id`
        - `source`
        - `queue`
        - `security`
        - `schedule`

        ----
      operationId: PublicCMSService_CreateVOD
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CreateVODResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/cms.v1.CreateVODRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/vods/{id}:
    get:
      summary: Get a VOD
      description: |-
        This API will return a `VOD` resource.

        ----

        Required field(s):
        - `id`

        ----
      operationId: PublicCMSService_GetVOD
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.GetVODResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the VOD.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    delete:
      summary: Delete a VOD
      description: |-
        This API will delete a specified VOD resource

        ----

        Required field(s):
        - `id`

        ----
      operationId: PublicCMSService_DeleteVOD
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.DeleteVODResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the VOD resource.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
    put:
      summary: Update a VOD
      description: |-
        This API will update a `VOD` resource.

        ----
        Required field(s):
        - `id`
        - `name`
        - `metadata`

        ----
      operationId: PublicCMSService_UpdateVOD
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.UpdateVODResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the VOD resource.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            example:
              cover_image: "null"
              metadata:
                labels: []
                long_description: ""
                short_description: ""
              name: modified name
              schedule:
                enable: false
                end_time: null
                start_time: null
            properties:
              name:
                type: string
                description: Required. The name of the VOD resource.
              metadata:
                $ref: '#/definitions/type.bv.v1.Metadata'
                description: Required. The metadata of the VOD resource.
              schedule:
                $ref: '#/definitions/cms.v1.Schedule'
                description: Optional. The schedule setting of the VOD resource.
              showroom:
                $ref: '#/definitions/type.bv.v1.Showroom'
                description: Optional. The showroom setting of the VOD resource.
              byo_cdn:
                $ref: '#/definitions/cms.v1.ByoCdn'
                description: Optional. The setting of bring-your-own cdn.
              player:
                $ref: '#/definitions/cms.v1.Player'
                description: Optional. The setting of player.
              chapter_setting:
                $ref: '#/definitions/cms.v1.VODChapter'
                description: Optional. The setting of player.
              cover_image:
                $ref: '#/definitions/type.bv.v1.CoverImage'
                description: Optional. The setting of cover image. Only valid when VOD is succeeded.
            required:
              - name
              - metadata
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/vods/{id}/cover-image:
    put:
      summary: '[deprecated] Update cover image of a VOD resource'
      description: |-
        ----

        Required field(s):
        - `id`
        - `type`
        - `library_id`

        ----
      operationId: PublicCMSService_UpdateVODCoverImage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.UpdateVODCoverImageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. Indicates the unique id of the VOD resource.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            example:
              library_id: 25bccac0-8a2e-4cb8-aa5e-bd7d63fb2c50
              type: COVER_IMAGE_TYPE_CUSTOMIZE
            properties:
              type:
                $ref: '#/definitions/type.bv.v1.CoverImageType'
                title: Required. Indicates current cover image type
              library_id:
                type: string
                description: Required. The unique id of library image file.
            required:
              - type
              - library_id
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/vods/{id}/status:
    get:
      summary: List a VOD's status history
      description: |-
        This API will return the status history of a VOD resource

        ----

        Required field(s):
        - `id`

        ----
      operationId: PublicCMSService_ListVODStatus
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.ListVODStatusResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the VOD resource.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/vods/{id}/subtitles:
    put:
      summary: Update subtitles of a VOD resource
      description: |-
        ----

        Required field(s):
        - `id`
        - `subtitles`

        ----
      operationId: PublicCMSService_UpdateVODSubtitles
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.UpdateVODSubtitlesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the VOD resource.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            example:
              subtitles:
                - code: eng
                  display: English
                  id: 34386ef5-209e-453f-93c7-6f48a24ad38c
                  name: english.srt
                - code: chi
                  display: Chinese
                  id: daedaa0c-6250-4637-965e-c70c24568c73
                  name: chinese.vtt
            properties:
              subtitles:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/cms.v1.SourceLibrarySubtitle'
                description: Required. The subtitles that will be added to the VOD resource.
            required:
              - subtitles
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/cms/v1/vods/{id}:cancel:
    post:
      summary: Cancel a vod
      description: |-
        This API will cancel a in-progress VOD.

        ----

        Required field(s):
        - `id`

        ----
      operationId: PublicCMSService_CancelVOD
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/cms.v1.CancelVODResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the VOD resource.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - CMS
  /bv/configuration/v1/byo-cdns:
    get:
      summary: List BYO CDN
      description: This API is used to list the `BYO CDN (Bring Your Own CDN)` settings
      operationId: PublicConfigurationService_ListByoCdns
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.ListByoCdnsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: |-
            Required. The current page in the current pagination.
            Need to assign positive number. Min: 1 Max: 100
          in: query
          required: true
          type: integer
          format: int32
        - name: items_per_page
          description: |-
            Required. The number of items per page in the current pagination.
            Need to assign positive number. Min: 1 Max: 100
          in: query
          required: true
          type: integer
          format: int32
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    post:
      summary: Create BYO CDN
      description: This API is used to configure the `BYO CDN (Bring Your Own CDN)` setting
      operationId: PublicConfigurationService_CreateByoCdn
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.CreateByoCdnResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/configuration.v1.CreateByoCdnRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configuration/v1/byo-cdns/{id}:
    get:
      summary: Get BYO CDN
      description: This API is used to get the detail of the `BYO CDN (Bring Your Own CDN)` setting
      operationId: PublicConfigurationService_GetByoCdn
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.GetByoCdnResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of byo cdn.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    delete:
      summary: Delete BYO CDN
      description: This API is used to delete the `BYO CDN (Bring Your Own CDN)` setting
      operationId: PublicConfigurationService_DeleteByoCdn
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.DeleteByoCdnResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of byo cdn.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    put:
      summary: Update BYO CDN
      description: This API is used to update the `BYO CDN (Bring Your Own CDN)` setting
      operationId: PublicConfigurationService_UpdateByoCdn
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.UpdateByoCdnResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of byo cdn.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              byo_cdn_setting:
                $ref: '#/definitions/configuration.v1.ByoCdnSetting'
                description: Required. The byo cdn setting.
            required:
              - byo_cdn_setting
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configuration/v1/cloud-storages:
    get:
      summary: List cloud storages
      description: |-
        This API will return `CloudStoage` array resources.

        **Notice:** The `/bv/configurations/v1/cloud-storages` will be deprecated soon.
        Please use `/bv/configuration/v1/cloud-storages` to list cloud storage.
      operationId: PublicConfigurationService_ListCloudStorages2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.ListCloudStoragesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: |-
            Required. The current page in the current pagination.
            Need to assign positive number. Min: 1 Max: 100
          in: query
          required: true
          type: integer
          format: int32
        - name: items_per_page
          description: |-
            Required. The number of items per page in the current pagination.
            Need to assign positive number. Min: 1 Max: 100
          in: query
          required: true
          type: integer
          format: int32
        - name: filter.name
          description: Optional. Filter by cloud storage name
          in: query
          required: false
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    post:
      summary: Create cloud storage
      description: This API will create `CloudStorage` resource.
      operationId: PublicConfigurationService_CreateCloudStorage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.CreateCloudStorageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/configuration.v1.CreateCloudStorageRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configuration/v1/cloud-storages/{id}:
    get:
      summary: Get cloud storage
      description: |-
        This API will return `CloudStorage` resource.

        Required field(s):
        - `id`

        ----

        **Notice:** The `/bv/configurations/v1/cloud-storages/{id}` will be deprecated soon.
        Please use `/bv/configuration/v1/cloud-storages/{id}` to get cloud storage.
      operationId: PublicConfigurationService_GetCloudStorage2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.GetCloudStorageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of cloud storage.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    delete:
      summary: Delete cloud storage
      description: |-
        This API will delete a `CloudStorage` resource.


        Required field(s):
        - `id`

        ----

        **Notice:** The `/bv/configurations/v1/cloud-storages/{id}` will be deprecated soon.
        Please use `/bv/configuration/v1/cloud-storages/{id}` to delete cloud storage.
      operationId: PublicConfigurationService_DeleteCloudStorage2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.DeleteCloudStorageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of cloud storage.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    put:
      summary: Update cloud storage
      description: |-
        This API will update `CloudStorage` resource.

        **Notice:** The `/bv/configurations/v1/cloud-storages/{id}` will be deprecated soon.
        Please use `/bv/configuration/v1/cloud-storages/{id}` to update cloud storage.
      operationId: PublicConfigurationService_UpdateCloudStorage2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.UpdateCloudStorageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of cloud storage.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            example:
              cloud_storage:
                aws_storage:
                  bucket_name: blendvision-one-assume-role-source1
                  external_id: 79e1c174-c1c0-4531-82d1-a9ea4373b727
                  path: blendvision-one
                  region: eu-west-1
                  user_role_arn: arn:aws:iam::038528481894:role/blendvision-one-assume-role
                name: blendvision-one-cloud-storage
                type: CLOUD_STORAGE_TYPE_AWS
            properties:
              cloud_storage:
                $ref: '#/definitions/configuration.v1.CloudStorage'
            required:
              - cloud_storage
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configuration/v1/cloud-storages/trust-policy:
    get:
      summary: Get trust policy information
      description: |-
        This API will return AWS IAM turst policy. The policy include the following information.
        - Blend vision AWS account arn.
        - Blend vision AWS role arn.
        - External ID
        You need to set this trust policy to your IAM trust policy for cloud storage.

        **Notice:** The `/bv/configurations/v1/cloud-storages/trust-policy` will be deprecated soon.
        Please use `/bv/configuration/v1/cloud-storages/trust-policy` to get trust policy.
      operationId: PublicConfigurationService_GetTrustPolicyInfo2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.GetTrustPolicyInfoResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configuration/v1/cloud-storages:validate:
    post:
      summary: |-
        Validate cloud storage
        Thsi API will validate cloud storage setting.
      description: |-
        **Notice:** The `/bv/configurations/v1/cloud-storages:validate` will be deprecated soon.
        Please use `/bv/configuration/v1/cloud-storages:validate` to validate cloud storage.
      operationId: PublicConfigurationService_ValidateCloudStorage2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.ValidateCloudStorageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/configuration.v1.ValidateCloudStorageRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configuration/v1/country-codes:
    get:
      summary: List country codes
      description: This API will return `CountryCode` array resource.
      operationId: PublicConfigurationService_ListCountryCodes
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.ListCountryCodesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configuration/v1/language-codes:
    get:
      summary: List language codes
      description: This API will return `LanguageCode` array resource.
      operationId: PublicConfigurationService_ListLanguageCodes
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.ListLanguageCodesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configuration/v1/player-settings:
    get:
      summary: List player settings
      description: This API is used to list player settings
      operationId: PublicConfigurationService_ListPlayerSettings
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.ListPlayerSettingsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: Required. The current page in the current pagination.
          in: query
          required: true
          type: integer
          format: int32
        - name: items_per_page
          description: Required. The number of items per page in the current pagination.
          in: query
          required: true
          type: integer
          format: int32
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    post:
      summary: Create player setting
      description: This API is used to create player setting
      operationId: PublicConfigurationService_CreatePlayerSetting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.CreatePlayerSettingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/configuration.v1.CreatePlayerSettingRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configuration/v1/player-settings/{id}:
    get:
      summary: Get player setting
      description: This API is used to get player setting
      operationId: PublicConfigurationService_GetPlayerSetting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.GetPlayerSettingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of player setting.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    delete:
      summary: Delete  player settings
      description: This API is used to delete player settings
      operationId: PublicConfigurationService_DeletePlayerSetting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.DeletePlayerSettingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of player setting.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    put:
      summary: Update player setting
      description: This API is used to update player setting
      operationId: PublicConfigurationService_UpdatePlayerSetting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.UpdatePlayerSettingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              player_setting:
                $ref: '#/definitions/configuration.v1.PlayerSetting'
            required:
              - player_setting
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configuration/v1/player-settings/{id}:default:
    put:
      summary: Set default player settings
      description: This API is used to set player settings as default
      operationId: PublicConfigurationService_SetDefaultPlayerSetting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.SetDefaultPlayerSettingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of player setting.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configuration/v1/player-settings:fill:
    post:
      summary: Fill system player setting by organization which has not player setting
      description: |-
        This API creates a new system player setting for an organization that does not currently have a system player setting.
        ----
      operationId: PublicConfigurationService_FillDefaultPlayerSettingByOrg
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.FillDefaultPlayerSettingByOrgResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/configuration.v1.FillDefaultPlayerSettingByOrgRequest'
      tags:
        - Configuration
  /bv/configuration/v1/profile-sets:
    get:
      summary: List profile sets
      description: This API will return `ProfileSet` array resource.
      operationId: PublicConfigurationService_ListProfileSets
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.ListProfileSetsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: |-
            Required. The current page in the current pagination.
            Need to assign positive number. Min: 1 Max: 100
          in: query
          required: true
          type: integer
          format: int32
        - name: items_per_page
          description: |-
            Required. The number of items per page in the current pagination.
            Need to assign positive number. Min: 1 Max: 100
          in: query
          required: true
          type: integer
          format: int32
        - name: filter.preset
          in: query
          required: false
          type: string
          enum:
            - PRESET_UNSPECIFIED
            - PRESET_EXCLUDE
            - PRESET_ONLY
          default: PRESET_UNSPECIFIED
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    delete:
      summary: Batch delete profile sets
      description: This API will batch delete `ProfileSet` resrouces.
      operationId: PublicConfigurationService_BatchDeleteProfileSets
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.BatchDeleteProfileSetsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: ids
          description: Required. The ids of profile set.
          in: query
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    post:
      summary: Create a profile set
      description: This API will create a `ProfileSet` resource.
      operationId: PublicConfigurationService_CreateProfileSet
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.CreateProfileSetResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/configuration.v1.CreateProfileSetRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configuration/v1/profile-sets/{id}:
    get:
      summary: Get a profile set by profile set id
      description: |-
        This API will return a `ProfileSet` resource.

        ----

        Required field(s):
        - `id`

        ----
      operationId: PublicConfigurationService_GetProfileSet
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.GetProfileSetResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of profile set.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    put:
      summary: Update a profile set
      description: This API will update `ProfileSet` resource.
      operationId: PublicConfigurationService_UpdateProfileSet
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.UpdateProfileSetResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of profile set.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            example:
              profile_ids:
                - 1024fed8-f8b9-4b54-99b2-85688296638a
                - 77a94c55-57f7-419d-8520-ee288251a748
                - e11f00a6-9989-4ffe-b685-acea84ab85dd
              profile_set:
                multiple_audio_track:
                  lang_customizes: []
                  lang_from: LANG_FROM_FIRST_TRACK
                name: test1
                protocols:
                  - PROTOCOL_DASH
                smart_abr: false
                video_codec: VIDEO_CODEC_H264
            properties:
              profile_set:
                $ref: '#/definitions/type.bv.v1.ProfileSet'
                description: Required.
              profile_ids:
                type: array
                items:
                  type: string
                description: Required. The maximum number of appended profiles is 10.
            required:
              - profile_set
              - profile_ids
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configuration/v1/profiles:
    get:
      summary: List profiles
      description: This API will return `Profile` array resource.
      operationId: PublicConfigurationService_ListProfiles
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.ListProfilesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: |-
            Required. The current page in the current pagination.
            Need to assign positive number. Min: 1 Max: 100
          in: query
          required: true
          type: integer
          format: int32
        - name: items_per_page
          description: |-
            Required. The number of items per page in the current pagination.
            Need to assign positive number. Min: 1 Max: 100
          in: query
          required: true
          type: integer
          format: int32
        - name: filter.video_codec
          description: |-
            Optional.

             - VIDEO_CODEC_H264: VIDEO_CODEC_H264 Indicates video code H.264
             - VIDEO_CODEC_H265: VIDEO_CODEC_H265 Indicates video code H.265
          in: query
          required: false
          type: string
          enum:
            - VIDEO_CODEC_UNSPECIFIED
            - VIDEO_CODEC_H264
            - VIDEO_CODEC_H265
          default: VIDEO_CODEC_UNSPECIFIED
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    delete:
      summary: Batch delete profiles
      description: This API will batch delete `Profile` resrouces.
      operationId: PublicConfigurationService_BatchDeleteProfiles
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.BatchDeleteProfilesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: ids
          description: Required. The ids of profile.
          in: query
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    post:
      summary: Create a profile
      description: The API will create `Profile` resource.
      operationId: PublicConfigurationService_CreateProfile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.CreateProfileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/configuration.v1.CreateProfileRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configuration/v1/profiles/{id}:
    get:
      summary: Get a profile by profile id
      description: |-
        This API will return a `Profile` resource.

        ----

        Required field(s):
        - `id`

        ----
      operationId: PublicConfigurationService_GetProfile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.GetProfileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of profile.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    put:
      summary: Update a profile
      description: This API will update `Profile` resource.
      operationId: PublicConfigurationService_UpdateProfile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.UpdateProfileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of profile.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            example:
              id: 7b6f9698-590f-45bd-b31e-b76ff5c2d27a
              profile:
                audio_bitrate: "24"
                b_frame: true
                codec_profile: CODEC_PROFILE_AUTO
                frame_rate: FRAME_RATE_SOURCE
                gop_size: 2
                id: e9f5ca1c-1d38-4baf-9527-96fde619f496
                level: CODEC_PROFILE_LEVEL_AUTO
                name: test
                preset: false
                segment_duration: 6
                standard: RESOLUTION_TYPE_SD
                video_bitrate: "60"
                video_codec: VIDEO_CODEC_H264
                video_height: 800
                video_width: 800
            properties:
              profile:
                $ref: '#/definitions/type.bv.v1.Profile'
                description: Required.
            required:
              - profile
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configuration/v1/system-player-settings:
    get:
      summary: List system player settings
      description: This API is used to list system player settings
      operationId: PublicConfigurationService_ListSystemPlayerSettings
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.ListSystemPlayerSettingsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: Required. The current page in the current pagination.
          in: query
          required: true
          type: integer
          format: int32
        - name: items_per_page
          description: Required. The number of items per page in the current pagination.
          in: query
          required: true
          type: integer
          format: int32
      tags:
        - Configuration
    post:
      summary: Create system player setting
      description: This API is used to create sysytem player setting
      operationId: PublicConfigurationService_CreateSystemPlayerSetting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.CreateSystemPlayerSettingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/configuration.v1.CreateSystemPlayerSettingRequest'
      tags:
        - Configuration
  /bv/configuration/v1/system-player-settings/{id}:
    get:
      summary: Get system player setting
      description: This API is used to get system player setting
      operationId: PublicConfigurationService_GetSystemPlayerSetting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.GetSystemPlayerSettingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of player setting.
          in: path
          required: true
          type: string
      tags:
        - Configuration
    put:
      summary: Update system player setting
      description: This API is used to update player setting
      operationId: PublicConfigurationService_UpdateSystemPlayerSetting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.UpdateSystemPlayerSettingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              player_setting:
                $ref: '#/definitions/configuration.v1.PlayerSetting'
            required:
              - player_setting
      tags:
        - Configuration
  /bv/configurations/v1/cloud-storages:
    get:
      summary: List cloud storages
      description: |-
        This API will return `CloudStoage` array resources.

        **Notice:** The `/bv/configurations/v1/cloud-storages` will be deprecated soon.
        Please use `/bv/configuration/v1/cloud-storages` to list cloud storage.
      operationId: PublicConfigurationService_ListCloudStorages
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.ListCloudStoragesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: |-
            Required. The current page in the current pagination.
            Need to assign positive number. Min: 1 Max: 100
          in: query
          required: true
          type: integer
          format: int32
        - name: items_per_page
          description: |-
            Required. The number of items per page in the current pagination.
            Need to assign positive number. Min: 1 Max: 100
          in: query
          required: true
          type: integer
          format: int32
        - name: filter.name
          description: Optional. Filter by cloud storage name
          in: query
          required: false
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configurations/v1/cloud-storages/{id}:
    get:
      summary: Get cloud storage
      description: |-
        This API will return `CloudStorage` resource.

        Required field(s):
        - `id`

        ----

        **Notice:** The `/bv/configurations/v1/cloud-storages/{id}` will be deprecated soon.
        Please use `/bv/configuration/v1/cloud-storages/{id}` to get cloud storage.
      operationId: PublicConfigurationService_GetCloudStorage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.GetCloudStorageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of cloud storage.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    delete:
      summary: Delete cloud storage
      description: |-
        This API will delete a `CloudStorage` resource.


        Required field(s):
        - `id`

        ----

        **Notice:** The `/bv/configurations/v1/cloud-storages/{id}` will be deprecated soon.
        Please use `/bv/configuration/v1/cloud-storages/{id}` to delete cloud storage.
      operationId: PublicConfigurationService_DeleteCloudStorage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.DeleteCloudStorageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of cloud storage.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
    put:
      summary: Update cloud storage
      description: |-
        This API will update `CloudStorage` resource.

        **Notice:** The `/bv/configurations/v1/cloud-storages/{id}` will be deprecated soon.
        Please use `/bv/configuration/v1/cloud-storages/{id}` to update cloud storage.
      operationId: PublicConfigurationService_UpdateCloudStorage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.UpdateCloudStorageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The resource identifier of cloud storage.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            example:
              cloud_storage:
                aws_storage:
                  bucket_name: blendvision-one-assume-role-source1
                  external_id: 79e1c174-c1c0-4531-82d1-a9ea4373b727
                  path: blendvision-one
                  region: eu-west-1
                  user_role_arn: arn:aws:iam::038528481894:role/blendvision-one-assume-role
                name: blendvision-one-cloud-storage
                type: CLOUD_STORAGE_TYPE_AWS
            properties:
              cloud_storage:
                $ref: '#/definitions/configuration.v1.CloudStorage'
            required:
              - cloud_storage
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configurations/v1/cloud-storages/trust-policy:
    get:
      summary: Get trust policy information
      description: |-
        This API will return AWS IAM turst policy. The policy include the following information.
        - Blend vision AWS account arn.
        - Blend vision AWS role arn.
        - External ID
        You need to set this trust policy to your IAM trust policy for cloud storage.

        **Notice:** The `/bv/configurations/v1/cloud-storages/trust-policy` will be deprecated soon.
        Please use `/bv/configuration/v1/cloud-storages/trust-policy` to get trust policy.
      operationId: PublicConfigurationService_GetTrustPolicyInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.GetTrustPolicyInfoResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/configurations/v1/cloud-storages:validate:
    post:
      summary: |-
        Validate cloud storage
        Thsi API will validate cloud storage setting.
      description: |-
        **Notice:** The `/bv/configurations/v1/cloud-storages:validate` will be deprecated soon.
        Please use `/bv/configuration/v1/cloud-storages:validate` to validate cloud storage.
      operationId: PublicConfigurationService_ValidateCloudStorage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/configuration.v1.ValidateCloudStorageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/configuration.v1.ValidateCloudStorageRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Configuration
  /bv/org/v1/groups:
    get:
      summary: List groups
      description: This API will list the groups under the organization based on the access token.
      operationId: PublicOrganizationService_ListGroups
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.ListGroupsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: 'Input only. Indicates the current page to shows. Default: 1'
          in: query
          required: false
          type: integer
          format: int32
        - name: items_per_page
          description: 'Input only. Indicates the number of items to shows per page. Default: 1. Max: 100.'
          in: query
          required: false
          type: integer
          format: int32
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
    post:
      summary: Create a group
      description: |-
        This API will create a group under the organization based on the access token.

        ----

        Required field(s):
        - `name`

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
      operationId: PublicOrganizationService_CreateGroup
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.CreateGroupResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/org.v1.CreateGroupRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
  /bv/org/v1/groups/{id}:
    get:
      summary: Get a group
      description: |-
        This API will get a specific group under the organization based on the access token.

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
        - It'll return a `400`/`BadRequest` error if any request body is invalid.
      operationId: PublicOrganizationService_GetGroup
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.GetGroupResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the group.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
    delete:
      summary: Delete a group
      description: |-
        This API will delete a specific group under the organization based on the access token.

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
        - It'll return a `400`/`BadRequest` error if any request body is invalid.
      operationId: PublicOrganizationService_DeleteGroup
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.DeleteGroupResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of group.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
    put:
      summary: Update a group
      description: |-
        This API will update a specific group under the organization based on the access token.

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `409`/`Conflict` with `ERROR_REASON_CONFLICT` error if the user list is conflict when executing
          the update operation, please retry at higher level to restart the read-modify-write sequence.
      operationId: PublicOrganizationService_UpdateGroup
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.UpdateGroupResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the group to update.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Input only. The name of the group to update. It'll not take effect if updated to an empty string.
              description:
                type: string
                description: Input only. The description of the group to update.
              before_user_ids:
                type: array
                items:
                  type: string
                description: |-
                  Input only. The user list before update means the list getting from the get group API.
                  It'll be required if `after_user_ids` is provided.
                  It's used to compare the snapshot before you got to avoid the race condition cause the dirty write.
              after_user_ids:
                type: array
                items:
                  type: string
                description: Input only. The user list to be updated in the group.
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
  /bv/org/v1/organizations:
    get:
      summary: Get an organization
      description: |-
        This API will get an organization based on the given access token.

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicOrganizationService_Get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.GetResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      tags:
        - Organization
    patch:
      summary: Update an organization
      description: |-
        This API will update an organization based on the given access token.

        ----

        Required field(s):
        - `name`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicOrganizationService_Update
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.UpdateResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/org.v1.UpdateRequest'
      tags:
        - Organization
  /bv/org/v1/organizations/{id}/plans:
    get:
      summary: List plans in an organization
      description: |-
        This API will list the plans with the specific organization `id`.

        ----

        Required field(s):
        - `id`

        ----
      operationId: PublicOrganizationService_ListPlans
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.ListPlansResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the organization.
          in: path
          required: true
          type: string
      tags:
        - Organization
  /bv/org/v1/organizations/{id}:get-info:
    get:
      summary: get org info used for other internal bv services
      operationId: OrganizationService_GetOrgInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.GetOrgInfoResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Organization
  /bv/org/v1/organizations/{license_key}:licence-key:
    get:
      summary: get org by license key
      operationId: OrganizationService_GetOrgByLicenseKey
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.GetOrgByLicenseKeyResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: license_key
          in: path
          required: true
          type: string
      tags:
        - Organization
  /bv/org/v1/organizations/accounts:
    get:
      summary: List accounts in an organization
      description: This API will list the accounts in an organization based on the access token.
      operationId: PublicOrganizationService_ListAccounts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.ListAccountsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: 'Input only. Indicates the current page to shows. Default: 1'
          in: query
          required: false
          type: integer
          format: int32
        - name: items_per_page
          description: 'Input only. Indicates the number of items to shows per page. Default: 1. Max: 100.'
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Organization
    post:
      summary: Batch add accounts to org
      operationId: PublicOrganizationService_BatchJoinOrg
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.BatchJoinOrgResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/org.v1.BatchJoinOrgRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
  /bv/org/v1/organizations/accounts/{account_id}:
    delete:
      summary: Remove account in an organization
      description: |-
        This API will remove a specific account in an organization.

        ----

        Required field(s):
        - `account_id`

        ----
      operationId: PublicOrganizationService_RemoveAccount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.RemoveAccountResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: account_id
          description: Required. The unique id of the account.
          in: path
          required: true
          type: string
      tags:
        - Organization
  /bv/org/v1/organizations/awsmp-entitlements:change:
    post:
      summary: aws marketplace entitlements change
      operationId: OrganizationService_ChangeAWSMPEntitlement
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.ChangeAWSMPEntitlementResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: action
          in: query
          required: true
          type: string
          enum:
            - AWSMP_ENTITLEMENT_UNSPECIFIED
            - AWSMP_ENTITLEMENT_ENTITLEMENT_UPDATED
          default: AWSMP_ENTITLEMENT_UNSPECIFIED
        - name: customer_id
          in: query
          required: true
          type: string
        - name: product_code
          in: query
          required: true
          type: string
      tags:
        - Organization
  /bv/org/v1/organizations/awsmp-meter-usages:batch:
    post:
      summary: aws marketplace batch meter usage
      operationId: OrganizationService_BatchAWSMPMeterUsage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.BatchAWSMPMeterUsageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      tags:
        - Organization
  /bv/org/v1/organizations/awsmp-settings:
    get:
      summary: list aws marketplace settings
      operationId: OrganizationService_ListAWSMPSettings
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.ListAWSMPSettingsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      tags:
        - Organization
    post:
      summary: set aws marketplace settings
      operationId: OrganizationService_SetAWSMPSetting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.SetAWSMPSettingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: setting.product_code
          description: Required. Immutable.
          in: query
          required: true
          type: string
        - name: setting.appended_org_id
          description: Required.
          in: query
          required: true
          type: string
        - name: setting.assume_role_arn
          description: Required.
          in: query
          required: true
          type: string
        - name: setting.assume_role_external_id
          description: Required.
          in: query
          required: true
          type: string
      tags:
        - Organization
  /bv/org/v1/organizations/awsmp-subscriptions:change:
    post:
      summary: aws marketplace subscriptions change
      operationId: OrganizationService_ChangeAWSMPSubscription
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.ChangeAWSMPSubscriptionResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: action
          in: query
          required: true
          type: string
          enum:
            - AWSMP_SUBSCRIPTION_UNSPECIFIED
            - AWSMP_SUBSCRIPTION_SUBSCRIBE_SUCCESS
            - AWSMP_SUBSCRIPTION_SUBSCRIBE_FAIL
            - AWSMP_SUBSCRIPTION_UNSUBSCRIBE_PENDING
            - AWSMP_SUBSCRIPTION_UNSUBSCRIBE_SUCCESS
          default: AWSMP_SUBSCRIPTION_UNSPECIFIED
        - name: customer_id
          in: query
          required: true
          type: string
        - name: product_code
          in: query
          required: true
          type: string
        - name: offer_id
          in: query
          required: false
          type: string
        - name: is_free_trial_term_present
          in: query
          required: false
          type: boolean
      tags:
        - Organization
  /bv/org/v1/organizations/roles:
    get:
      summary: List roles in organization
      operationId: PublicOrganizationService_ListRoles
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.ListRolesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          in: query
          required: false
          type: integer
          format: int32
        - name: items_per_page
          in: query
          required: false
          type: integer
          format: int32
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
  /bv/org/v1/organizations/tenant:fill:
    post:
      summary: Fill tenant by organization which has not tenant
      description: |-
        This API creates a new tenant for an organization that does not currently have a tenant ID.
        If the id in body is empty, will query the organization which `tenant_id` is NULL

        ----
      operationId: OrganizationService_FillTenantByOrg
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.FillTenantByOrgResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/org.v1.FillTenantByOrgRequest'
      tags:
        - Organization
  /bv/org/v1/organizations:check:
    post:
      operationId: OrganizationService_CheckExpired
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.CheckExpiredResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/org.v1.CheckExpiredRequest'
      tags:
        - Organization
  /bv/org/v1/organizations:list-appends:
    get:
      summary: List available appended organizations
      description: |-
        This API will list the available appended organizations based on the given access token.
        It's useful when editing a sub-org can be appended to.

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicOrganizationService_ListAppends
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.ListAppendsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: target_org_type
          description: |-
            Input only. It'll limit the available appended organizations based on the target organization which can be
            appended into if provided. It's useful when editing a sub-org shows the available appended organizations based on
            its organization type.
          in: query
          required: false
          type: string
          enum:
            - ORGANIZATION_TYPE_UNSPECIFIED
            - ORGANIZATION_TYPE_ROOT
            - ORGANIZATION_TYPE_GENERAL_DISTRIBUTOR
            - ORGANIZATION_TYPE_RESELLER
            - ORGANIZATION_TYPE_BUSINESS
          default: ORGANIZATION_TYPE_UNSPECIFIED
      tags:
        - Organization
  /bv/org/v1/organizations:list-hierarchical-sub-orgs:
    get:
      summary: List sub-organizations in a hierarchical structure
      description: |-
        This API will return the nested sub-organizations in a hierarchical view based on the access token.
        It's useful when display a page that needs the hierarchical view.
      operationId: PublicOrganizationService_ListHierarchicalSubOrgs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.ListHierarchicalSubOrgsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      tags:
        - Organization
  /bv/org/v1/organizations:switch-owner:
    post:
      summary: Switch owner in an organization
      description: |-
        This API will switch owner in an organization based on the access token.

        ----

        Required field(s):
        - `new_owner_id`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
        - It'll return a `400`/`InvalidArgument` error if any requested arguments is not provided.
        - It'll return a `400`/`InvalidArgument` with `ERROR_REASON_EXISTS` error if the `new_owner_id` is already switched.
      operationId: PublicOrganizationService_SwitchOwner
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.SwitchOwnerResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/org.v1.SwitchOwnerRequest'
      tags:
        - Organization
  /bv/org/v1/sub-orgs:
    get:
      summary: List sub-organizations in an organization
      description: This API will List sub-organizations in an organization based on the access token.
      operationId: PublicOrganizationService_ListSubOrg
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.ListSubOrgResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          description: 'Input only. Indicates the current page to shows. Default: 1'
          in: query
          required: false
          type: integer
          format: int32
        - name: items_per_page
          description: 'Input only. Indicates the number of items to shows per page. Default: 1. Max: 100.'
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Organization
    post:
      summary: Create a sub-organization
      description: |-
        This API will create a sub-organization under the organization based on the access token.

        ----

        Required field(s):
        - `name`
        - `parent_id`
        - `type`
        - `owner_email`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
        - It'll return a `400`/`BadRequest` error if any request body is invalid.
      operationId: PublicOrganizationService_CreateSubOrg
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.CreateSubOrgResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/org.v1.CreateSubOrgRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
  /bv/org/v1/sub-orgs/{id}:
    get:
      summary: Get a sub-organization
      description: |-
        This API will get a specific sub-organization under the organization based on the access token.

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicOrganizationService_GetSubOrgDetail
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.GetSubOrgDetailResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the organization.
          in: path
          required: true
          type: string
      tags:
        - Organization
    delete:
      summary: Delete a sub-organization
      description: |-
        This API will delete a specific sub-organization under the organization based on the access token.

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `400`/`BadRequest` with `ERROR_REASON_HAS_APPENDED_SUB_ORGS` error if the sub-organization that
          has appended organizations exists can not be removed.
      operationId: PublicOrganizationService_DeleteSubOrg
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.DeleteSubOrgResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the sub-organization.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
    patch:
      summary: Update a sub-organization
      description: |-
        This API will update a specific sub-organization under the organization based on the access token.

        ----

        Required field(s):
        - `name`
        - `parent_id`
        - `type`
        - `owner_email`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `400`/`BadRequest` with `ERROR_REASON_HAS_APPENDED_SUB_ORGS` error if update the `parent_id` to
          the sub-organization that has appended organizations exists.
      operationId: PublicOrganizationService_UpdateSubOrg
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.UpdateSubOrgResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the sub-organization.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              parent_id:
                type: string
                description: Input only. The parent organization id to update to the sub-organization.
              description:
                type: string
                description: Input only. The description to update to the sub-organization.
              plan_ids:
                type: array
                items:
                  type: string
                description: Input only. The assigned plan id to update to the sub-organization.
              billing_cycle:
                type: integer
                format: int32
                description: Input only. The billing cycle to update to the sub-organization.
              contract_valid_start_time:
                type: string
                format: date-time
                description: |-
                  Input only. The contract start day to update to the business sub-organization.
                  It's valid when the type is `ORGANIZATION_TYPE_BUSINESS`.
              contract_months:
                type: integer
                format: int32
                description: |-
                  Input only. The contract months to update to the business sub-organization.
                  It's valid when the type is `ORGANIZATION_TYPE_BUSINESS`.
                  This field is mutually exclusive to `contract_days` field, it'll get the higher priority if both are provided.
                  e.g. It'll use `contract_months` instead if both `contract_months` and `contract_days` are provided.
              contract_days:
                type: integer
                format: int32
                description: |-
                  Input only. The contract days to update to the business sub-organization.
                  It's valid when the type is `ORGANIZATION_TYPE_BUSINESS`.
                  This field is mutually exclusive to `contract_months` field, it'll get the higher priority if both are provided.
                  e.g. It'll use `contract_months` instead if both `contract_months` and `contract_days` are provided.
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
  /bv/org/v1/sub-orgs/{id}/invitations:reset:
    post:
      summary: Reset owner's invitation in a sub-organization
      description: |-
        This API will rest the owner's invitation with a specific sub-organization under the organization based on the
        access token.

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
        - It'll return a `400`/`BadRequest` error if any request body is invalid.
      operationId: PublicOrganizationService_InvitationReset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.InvitationResetResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the sub-organization.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              invitee_email:
                type: string
                description: Required. The email of the owner that wants to reset in the sub-organization.
            required:
              - invitee_email
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
  /bv/org/v1/sub-orgs/{id}/plans:
    get:
      summary: List sub-organization plans
      description: |-
        This API will list the plans with a specific sub-organization under the organization based on the access token.

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
        - It'll return a `400`/`BadRequest` error if any request body is invalid.
      operationId: PublicOrganizationService_ListSubOrgPlans
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.ListSubOrgPlansResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the sub-organization.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
  /bv/org/v1/sub-orgs/{id}:deactivate:
    post:
      summary: Deactivate a sub-organization
      description: |-
        This API will deactivate a specific sub-organization under then organization based on the access token.

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
        - It'll return a `400`/`BadRequest` error if any request body is invalid.
      operationId: PublicOrganizationService_DeactivateSubOrg
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.DeactivateSubOrgResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the sub-organization.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
  /bv/org/v1/sub-orgs/{id}:reactivate:
    post:
      summary: Re-activate a sub-organization
      description: |-
        This API will re-deactivate a specific sub-organization under the organization based on the access token.

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
        - It'll return a `400`/`BadRequest` error if any request body is invalid.
      operationId: PublicOrganizationService_ReactivateSubOrg
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.ReactivateSubOrgResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the sub-organization.
          in: path
          required: true
          type: string
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
  /bv/org/v1/sub-orgs/{id}:switch-owner:
    post:
      summary: Switch owner in a sub-organization
      description: |-
        This API will switch the owner with a specific sub-organization under the organization based on the access token.

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
        - It'll return a `400`/`BadRequest` error if any request body is invalid.
        - It'll return a `400`/`BadRequest` with `ERROR_REASON_EXISTS` error if any request body is invalid.
      operationId: PublicOrganizationService_SwitchSubOrgOwner
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.SwitchSubOrgOwnerResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the sub-organization.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_owner_email:
                type: string
                description: Required. The new owner email to switch of the sub-organization.
            required:
              - new_owner_email
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
  /bv/org/v1/sub-orgs:batch:
    post:
      summary: Batch create sub orgs
      operationId: PublicOrganizationService_BatchCreateSubOrgs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/org.v1.BatchCreateSubOrgsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/org.v1.BatchCreateSubOrgsRequest'
        - name: x-bv-org-id
          description: To invoke this API using `api_token`, you need to set the `x-bv-org-id` header to specify the organization for which you want to perform the action.
          in: header
          required: false
          type: string
      tags:
        - Organization
  /bv/playback/v1/configs/{code}:redeem-code:
    get:
      summary: Deprecated.
      operationId: OpenPlaybackService_GetConfigByCode
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/playback.v1.GetConfigByCodeResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: code
          description: Required
          in: path
          required: true
          type: string
      tags:
        - Playback
  /bv/playback/v1/contents:
    get:
      summary: Get content metadata
      description: |-
        This api is used to retrieve content metadata.
        The authorization header should be `playback token`.

        ----
        - It'll return a `401`/`Unauthenticated` error if `playback token` is invalid.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPlaybackService_GetMetadata
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/playback.v1.GetMetadataResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: authorization
          description: This API should be invoked with `playback token`.
          in: header
          required: false
          type: string
      tags:
        - Playback
  /bv/playback/v1/contents:validate:
    post:
      summary: Validate content security
      description: |-
        This api is used to validate the security of the content, including domain_control, scheduled time, and status validation.
        The authorization header should be `playback token`.

        - It'll return a `401`/`Unauthenticated` error if `playback token` is invalid.
        - It'll return a `403`/`Forbidden` error if the validation fails.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPlaybackService_ValidateContent
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/playback.v1.ValidateContentResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/playback.v1.ValidateContentRequest'
        - name: authorization
          description: This API should be invoked with `playback token`.
          in: header
          required: false
          type: string
      tags:
        - Playback
  /bv/playback/v1/licenses:validate:
    post:
      summary: Validate license
      description: |-
        This API validates the license to determine whether the features specified in the pricing plan are enabled or not.

        ----

        Required field(s):
        - `license_key`

        ----

        - It'll return a `403`/`Forbidden` error if the license key is invalid.
      operationId: OpenPlaybackService_ValidateLicense
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/playback.v1.ValidateLicenseResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/playback.v1.ValidateLicenseRequest'
      tags:
        - Playback
  /bv/playback/v1/manifests:validate:
    post:
      summary: Validate ULL Manifest
      description: |-
        This API is utilized to verify whether the manifest is externally generated or not,
        It is called only when the pricing plan prohibits the usage of a self-generated manifest.
        ----

        Required field(s):
        - `license_key`
        - `protocol`
        - `path`

        ----
      operationId: OpenPlaybackService_ValidateManifest
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/playback.v1.ValidateManifestResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/playback.v1.ValidateManifestRequest'
      tags:
        - Playback
  /bv/playback/v1/resources/chatrooms/tokens:
    post:
      summary: Create chatroom tokens by resource token
      description: |-
        This api is used to create the chatroom token by resource token.
        The authorization header should be `resource token`.

        - It'll return a `401`/`Unauthenticated` error if `resource token` is invalid.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPlaybackService_CreateChatroomToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/playback.v1.CreateChatroomTokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/playback.v1.CreateChatroomTokenRequest'
        - name: authorization
          description: This API should be invoked with `resource token`.
          in: header
          required: false
          type: string
      tags:
        - Playback
  /bv/playback/v1/resources/configs:
    get:
      summary: Get configs by resource token
      description: |-
        This api is used to retrieve the configuration information for the resource.
        The authorization header should be `resource token`.

        - It'll return a `401`/`Unauthenticated` error if `resource token` is invalid.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPlaybackService_GetResourceConfig
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/playback.v1.GetResourceConfigResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: authorization
          description: This API should be invoked with `resource token`.
          in: header
          required: false
          type: string
      tags:
        - Playback
  /bv/playback/v1/resources/interaction/tokens:
    post:
      summary: Create interaction tokens by resource token
      description: |-
        This api is used to create the interaction token by resource token.
        The authorization header should be `resource token`.

        - It'll return a `401`/`Unauthenticated` error if `resource token` is invalid.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPlaybackService_CreateInteractionToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/playback.v1.CreateInteractionTokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/playback.v1.CreateInteractionTokenRequest'
        - name: authorization
          description: This API should be invoked with `resource token`.
          in: header
          required: false
          type: string
      tags:
        - Playback
  /bv/playback/v1/resources/tokens:redeem-code:
    post:
      summary: Create resource token by redeem code
      description: |-
        This API will create resource token by redeem code.

        The customer server needs to request a `resource token` for the customer website to enable the opening of the iframe player and playback of live/vod content.

        ----

        Required field(s):
        - `redeem_code`

        ----
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: OpenPlaybackService_CreateResourceTokenByRedeemCode
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/playback.v1.CreateResourceTokenByRedeemCodeResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/playback.v1.CreateResourceTokenByRedeemCodeRequest'
      tags:
        - Playback
  /bv/playback/v1/sessions/{device_id}:
    get:
      summary: Get playback session info
      description: |-
        This api is used to retrieve session information that the player requires, such as the manifest and thumbnail_seeking_url.
        The authorization header should be `playback token`.

        - It'll return a `401`/`Unauthenticated` error if `playback token` is invalid.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPlaybackService_GetSessionInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/playback.v1.GetSessionInfoResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: device_id
          description: Required. The unique id to identify the device.
          in: path
          required: true
          type: string
        - name: authorization
          description: This API should be invoked with `playback token`.
          in: header
          required: false
          type: string
      tags:
        - Playback
  /bv/playback/v1/sessions/{device_id}:end:
    post:
      summary: End playback session
      description: This API is used to end the playback session.
      operationId: PublicPlaybackService_EndSession
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/playback.v1.EndSessionResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: device_id
          description: Required. The unique id to identify the device.
          in: path
          required: true
          type: string
        - name: authorization
          description: This API should be invoked with `playback token`.
          in: header
          required: false
          type: string
      tags:
        - Playback
  /bv/playback/v1/sessions/{device_id}:heartbeat:
    post:
      summary: Keep playback session alive
      description: |-
        This api is used to keep playback session alive for a specific device_id, it needs to be invoked every 10 seconds,
        if the session is not refreshed within that timeframe, it will expire and result in a `forbidden error`.

        - It'll return a `401`/`Unauthenticated` error if `playback token` is invalid.
        - It'll return a `403`/`Forbidden` error if the validation fails, or session is expired.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPlaybackService_Heartbeat
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/playback.v1.HeartbeatResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: device_id
          description: Required. The unique id to identify the device.
          in: path
          required: true
          type: string
        - name: authorization
          description: This API should be invoked with `playback token`.
          in: header
          required: false
          type: string
      tags:
        - Playback
  /bv/playback/v1/sessions/{device_id}:start:
    post:
      summary: Start playback session
      description: |-
        This API is used to start the playback session.

        - It'll return a `401`/`Unauthenticated` error if `resource token` is invalid.
        - It'll return a `403`/`Forbidden` error if the validation fails, or session is expired.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPlaybackService_StartSession
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/playback.v1.StartSessionResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: device_id
          description: Required. The unique id to identify the device.
          in: path
          required: true
          type: string
        - name: authorization
          description: This API should be invoked with `playback token`.
          in: header
          required: false
          type: string
      tags:
        - Playback
  /bv/playback/v1/tokens:
    post:
      summary: Create playback token by resource token
      description: |-
        This api is used to create playback token by resource token.

        ----
        - It'll return a `401`/`Unauthenticated` error if `resource token` is invalid.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPlaybackService_CreateToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/playback.v1.CreateTokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: authorization
          description: This API should be invoked with `resource token`.
          in: header
          required: false
          type: string
      tags:
        - Playback
  /bv/pricing/v1/admin/customized-plans:
    get:
      summary: Admin List Customized Plans
      description: This API lists all the customized plans.
      operationId: PublicPricingService_AdminListCustomizedPlans
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pricing.v1.AdminListCustomizedPlansResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      tags:
        - Pricing
    post:
      summary: Admin Create Customized Plan
      description: |-
        This API creates the customized plan

        ----

        Required field(s):
        - `customized_plan`
        - `customized_plan.name`

        ----

        - It'll return a `400`/`Bad Request` error if there is any parameters in request is invalid.
      operationId: PublicPricingService_AdminCreateCustomizedPlan
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pricing.v1.AdminCreateCustomizedPlanResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/pricing.v1.AdminCreateCustomizedPlanRequest'
      tags:
        - Pricing
  /bv/pricing/v1/admin/plan-group-histories:
    get:
      summary: Admin List Plan Group Histories
      description: This API returns the list of plan group histories.
      operationId: PublicPricingService_AdminListPlanGroupHistories
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pricing.v1.AdminListPlanGroupHistoriesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: name
          in: query
          required: false
          type: string
      tags:
        - Pricing
  /bv/pricing/v1/admin/plan-groups:
    put:
      summary: Admin Update Plan Group
      description: |-
        This API updates the plan group by the plan group name.

        ----

        Required field(s):
        - `plan_group`
        - `plan_group.name`

        ----

        - It'll return a `400`/`Bad Request` error if there is any parameters in request is invalid.
      operationId: PublicPricingService_AdminUpdatePlanGroup
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pricing.v1.AdminUpdatePlanGroupResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/pricing.v1.AdminUpdatePlanGroupRequest'
      tags:
        - Pricing
  /bv/pricing/v1/admin/plan-item-histories:
    get:
      summary: Admin List Plan Item Histories
      description: This API returns the list of plan item histories.
      operationId: PublicPricingService_AdminListPlanItemHistories
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pricing.v1.AdminListPlanItemHistoriesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: name
          in: query
          required: false
          type: string
      tags:
        - Pricing
  /bv/pricing/v1/admin/plan-items:
    put:
      summary: Admin Update Plan Item
      description: |-
        This API updates the plan item by the plan name.

        ----

        Required field(s):
        - `plan`
        - `plan.name`

        ----

        - It'll return a `400`/`Bad Request` error if there is any parameters in request is invalid.
      operationId: PublicPricingService_AdminUpdatePlanItem
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pricing.v1.AdminUpdatePlanItemResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/pricing.v1.AdminUpdatePlanItemRequest'
      tags:
        - Pricing
  /bv/pricing/v1/admin/plans:
    get:
      summary: Admin List Plan Groups
      description: This API returns the list of plan groups.
      operationId: PublicPricingService_AdminListPlanGroups
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pricing.v1.AdminListPlanGroupsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      tags:
        - Pricing
    post:
      summary: Admin Create Plan Group
      description: |-
        This API creates the plan group

        ----

        Required field(s):
        - `plan_group`
        - `plan_group.name`
        - `plans`

        ----

        - It'll return a `400`/`Bad Request` error if there is any parameters in request is invalid.
      operationId: PublicPricingService_AdminCreatePlanGroup
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pricing.v1.AdminCreatePlanGroupResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/pricing.v1.AdminCreatePlanGroupRequest'
      tags:
        - Pricing
  /bv/pricing/v1/plan-group-details:
    get:
      summary: List Plan Group Details
      description: This API returns the list of details of a plan group.
      operationId: PublicPricingService_ListPlanGroupDetails
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pricing.v1.ListPlanGroupDetailsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: current_page
          in: query
          required: false
          type: integer
          format: int32
        - name: items_per_page
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Pricing
  /bv/pricing/v1/plan-infos:
    get:
      summary: Get Plan Info
      description: This API returns the plan info of the organization.
      operationId: PublicPricingService_GetPlanInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pricing.v1.GetPlanInfoResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      tags:
        - Pricing
  /bv/pricing/v1/plans:change:
    post:
      summary: Change Plan
      description: |-
        This API changes the plan of the organization.

        ----

        Required field(s):
        - `plan_id`
        - `message`

        ----

        - It'll return a `400`/`Bad Request` error if there is any parameters in request is invalid.
      operationId: PublicPricingService_ChangePlan
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pricing.v1.ChangePlanResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/pricing.v1.ChangePlanRequest'
      tags:
        - Pricing
  /bv/pricing/v1/plans:custom:
    post:
      summary: Custom Plan
      description: |-
        This API requests a custom plan for the organization.

        ----

        Required field(s):
        - `message`

        ----

        - It'll return a `400`/`Bad Request` error if there is any parameters in request is invalid.
      operationId: PublicPricingService_CustomPlan
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pricing.v1.CustomPlanResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/pricing.v1.CustomPlanRequest'
      tags:
        - Pricing
  /core/auth/v2/token:
    post:
      summary: Create an access token
      description: |-
        Create an access token that can be used to access specific tenant's resources by access roles.
        An valid service token as value of header `authorization` is required.

        ----

        Required field(s):
        - `tenant_id`
        - `roles`

        ----

        Available role(s):
        - `ACCESS_ROLE_ADMIN`
        - `ACCESS_ROLE_VIEWER`
        - `ACCESS_ROLE_EVENT_ADMIN`
        - `ACCESS_ROLE_EVENT_VIEWER`
        - `ACCESS_ROLE_PAYMENT_ADMIN`
        - `ACCESS_ROLE_PAYMENT_VIEWER`
        - `ACCESS_ROLE_KEY_ADMIN`
        - `ACCESS_ROLE_KEY_VIEWER`
        - `ACCESS_ROLE_VIDEO_ADMIN`
        - `ACCESS_ROLE_VIDEO_VIEWER`
        - `ACCESS_ROLE_USAGE_ADMIN`
        - `ACCESS_ROLE_USAGE_VIEWER`

        ----

        Please request least-privilege permissions for what you're going to do only. For example:
        - If you're requesting to have full payment service access, use `roles = [ "ACCESS_ROLE_PAYMENT_ADMIN" ]`.
        - If you're trying to retrieve events, use `roles = [ "ACCESS_ROLE_EVENT_VIEWER" ]`.
      operationId: PublicAuthService_CreateAccessToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/auth.v2.CreateAccessTokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/auth.v2.CreateAccessTokenRequest'
      tags:
        - Auth
  /core/channel/v1/channels:
    get:
      summary: List live channels by tenantID
      operationId: ChannelService_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/channel.v1.ListResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      tags:
        - Channel
    post:
      summary: Create live channel
      operationId: ChannelService_Create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/channel.v1.CreateResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/channel.v1.CreateRequest'
      tags:
        - Channel
  /core/channel/v1/channels/{id}:
    get:
      summary: Get live channel information
      operationId: ChannelService_Get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/channel.v1.GetResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Channel
    delete:
      summary: Delete live channel
      description: Delete live channel. (The channel must be stopped first)
      operationId: ChannelService_Delete
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/channel.v1.DeleteResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Channel
    put:
      summary: Update live channel
      description: |
        ## Description
        - Modify a channel configuration. (The channel must be stopped first.)
        - Only supported when channel's input_type is 'INPUT_TYPE_MP4_FILE'
      operationId: ChannelService_Update
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/channel.v1.UpdateResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              input_s3_url:
                $ref: '#/definitions/channel.v1.InputS3URL'
              start_time:
                type: string
                format: date-time
      tags:
        - Channel
  /core/channel/v1/channels/{id}:start:
    post:
      summary: Start live channel
      operationId: ChannelService_Start
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/channel.v1.StartResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Channel
  /core/channel/v1/channels/{id}:status:
    get:
      summary: Get live channel status
      operationId: ChannelService_GetStatus
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/channel.v1.GetStatusResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Channel
  /core/channel/v1/channels/{id}:stop:
    post:
      summary: Stop live channel
      operationId: ChannelService_Stop
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/channel.v1.StopResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Channel
  /core/channel/v1/channels/{id}:switch-input:
    post:
      summary: Switch live channel input
      operationId: ChannelService_SwitchInput
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/channel.v1.SwitchInputResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              input:
                $ref: '#/definitions/channel.v1.ChannelInput'
      tags:
        - Channel
  /core/channel/v1/channels/usage:
    post:
      summary: Get channel usage
      operationId: ChannelService_GetChannelUsage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/channel.v1.GetChannelUsageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/channel.v1.GetChannelUsageRequest'
      tags:
        - Channel
  /core/channel/v1/recordings:
    post:
      summary: Create live recording job
      operationId: ChannelService_CreateRecording
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/channel.v1.CreateRecordingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/channel.v1.CreateRecordingRequest'
      tags:
        - Channel
  /core/channel/v1/recordings/{id}:
    get:
      summary: Get live recording information
      operationId: ChannelService_GetRecording
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/channel.v1.GetRecordingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Channel
    delete:
      summary: Cancel live recording job
      operationId: ChannelService_CancelRecordingJob
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/channel.v1.CancelRecordingJobResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Channel
  /core/channel/v1/videos:check:
    post:
      summary: Check video format
      operationId: ChannelService_CheckVideo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/channel.v1.CheckVideoResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/channel.v1.CheckVideoRequest'
      tags:
        - Channel
  /core/chat/v1/chats:
    post:
      operationId: ChatService_CreateChat
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.CreateChatResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chat.v1.CreateChatRequest'
      tags:
        - Chat
  /core/chat/v1/chats/{id}:
    get:
      operationId: ChatService_GetChat
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.GetChatResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Chat
  /core/chat/v1/chats/{id}/dictionaries:
    get:
      operationId: ChatService_ListChatDictionaries
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.ListChatDictionariesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: page_size
          description: 'Maximum value: 100. Default value: 10.'
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: |-
            A page token, received from a previous `ListChatDictionaries` API call. Provide this to retrieve the subsequent
            page. When paginating, all other parameters provided to `ListChatDictionaries` must match the call that provided
            the page token.
          in: query
          required: false
          type: string
      tags:
        - Chat
  /core/chat/v1/chats/{id}/dictionaries/{dictionary_id}:disable:
    post:
      operationId: ChatService_DisableChatDictionary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.DisableChatDictionaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: dictionary_id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
      tags:
        - Chat
  /core/chat/v1/chats/{id}/dictionaries/{dictionary_id}:enable:
    post:
      operationId: ChatService_EnableChatDictionary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.EnableChatDictionaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: dictionary_id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
      tags:
        - Chat
  /core/chat/v1/chats/{id}/dictionaries:batch-update:
    post:
      operationId: ChatService_BatchUpdateChatDictionaries
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.BatchUpdateChatDictionariesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              dictionary_ids:
                type: array
                items:
                  type: string
                description: Required.
              enabled:
                type: boolean
                description: Required.
            required:
              - dictionary_ids
              - enabled
      tags:
        - Chat
  /core/chat/v1/chats/{id}/messages/{message_id}:
    delete:
      operationId: ChatService_DeleteChatMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.DeleteChatMessageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: message_id
          description: Required.
          in: path
          required: true
          type: string
        - name: action_taker.id
          description: Output only. The id of the user.
          in: query
          required: false
          type: string
        - name: action_taker.device_id
          description: Output only. The device id of the user.
          in: query
          required: false
          type: string
        - name: action_taker.custom_name
          description: Required. The custom name of the user.
          in: query
          required: true
          type: string
        - name: action_taker.is_admin
          description: Output only. Indicates the user whether or not is an admin.
          in: query
          required: false
          type: boolean
        - name: action_taker.blocked
          description: Output only.
          in: query
          required: false
          type: boolean
      tags:
        - Chat
  /core/chat/v1/chats/{id}/messages:batch-process:
    post:
      operationId: ChatService_BatchProcessChatMessages
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.BatchProcessChatMessagesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              messages:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/chat.v1.InteractionMessage'
                description: Required.
            required:
              - messages
      tags:
        - Chat
  /core/chat/v1/chats/{id}/messages:pin:
    post:
      operationId: ChatService_PinChatMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.PinChatMessageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              pinned_message:
                $ref: '#/definitions/chat.v1.PinMessage'
                description: Required.
            required:
              - pinned_message
      tags:
        - Chat
  /core/chat/v1/chats/{id}/messages:publish:
    post:
      operationId: ChatService_PublishChatMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.PublishChatMessageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              message:
                $ref: '#/definitions/chat.v1.InteractionMessage'
                description: Required.
            required:
              - message
      tags:
        - Chat
  /core/chat/v1/chats/{id}/messages:unpin:
    post:
      operationId: ChatService_UnpinChatMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.UnpinChatMessageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              unpinned_message:
                $ref: '#/definitions/chat.v1.UnpinMessage'
                description: Required.
            required:
              - unpinned_message
      tags:
        - Chat
  /core/chat/v1/chats/{id}/polls:
    get:
      operationId: ChatService_ListChatPolls
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.ListChatPollsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: page_size
          description: 'Maximum value: 100. Default value: 10.'
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: |-
            A page token, received from a previous `ListChatPolls` API call. Provide this to retrieve the subsequent
            page. When paginating, all other parameters provided to `ListChatPolls` must match the call that provided
            the page token.
          in: query
          required: false
          type: string
      tags:
        - Chat
    post:
      operationId: ChatService_CreateChatPoll
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.CreateChatPollResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              poll:
                $ref: '#/definitions/chat.v1.Poll'
                description: Required.
            required:
              - poll
      tags:
        - Chat
  /core/chat/v1/chats/{id}/polls/{poll.id}:
    put:
      operationId: ChatService_UpdateChatPoll
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.UpdateChatPollResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: poll.id
          description: Optional. Immutable. Required if in update operation, otherwise will be an output only field.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              poll:
                type: object
                properties:
                  type:
                    $ref: '#/definitions/chat.v1.PollType'
                    description: Required.
                  status:
                    $ref: '#/definitions/chat.v1.PollStatus'
                    description: Output only.
                    readOnly: true
                  votes_count:
                    type: integer
                    format: int32
                    description: Output only.
                    readOnly: true
                  multi_choice:
                    $ref: '#/definitions/chat.v1.MultiChoicePoll'
                    description: Optional. Required if type is `POLL_TYPE_SINGLE_CHOICE` or `POLL_TYPE_MULTI_CHOICE`.
                  started_at:
                    type: string
                    format: date-time
                    description: Output only.
                    readOnly: true
                  ended_at:
                    type: string
                    format: date-time
                    description: Output only.
                    readOnly: true
                description: Required.
                title: Required.
            required:
              - type
      tags:
        - Chat
  /core/chat/v1/chats/{id}/polls/{poll_id}:
    get:
      operationId: ChatService_GetChatPoll
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.GetChatPollResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: poll_id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Chat
    delete:
      operationId: ChatService_DeleteChatPoll
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.DeleteChatPollResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: poll_id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Chat
  /core/chat/v1/chats/{id}/polls/{poll_id}:change:
    post:
      operationId: ChatService_ChangeChatPoll
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.ChangeChatPollResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: poll_id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              action:
                $ref: '#/definitions/chat.v1.ChangeChatPollRequest.Action'
                description: Required.
              action_taker:
                $ref: '#/definitions/chat.v1.ChatUser'
                description: Required.
            required:
              - action
              - action_taker
      tags:
        - Chat
  /core/chat/v1/chats/{id}/reports:
    post:
      operationId: ChatService_CreateChatReport
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.CreateChatReportResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              type:
                $ref: '#/definitions/chat.v1.ReportType'
                description: Required.
              file_name:
                type: string
                description: Optional.
              custom_id:
                type: string
                description: Optional.
              time_zone:
                type: string
                description: Optional.
            required:
              - type
      tags:
        - Chat
  /core/chat/v1/chats/{id}/token:
    post:
      operationId: ChatService_CreateChatToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.CreateChatTokenResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              type:
                $ref: '#/definitions/chat.v1.TokenType'
                description: Required.
              role:
                $ref: '#/definitions/chat.v1.TokenRole'
                description: Required.
              device_id:
                type: string
                description: Required.
              subject:
                type: string
                description: Required.
            required:
              - type
              - role
              - device_id
              - subject
      tags:
        - Chat
  /core/chat/v1/chats/{id}/users:block:
    post:
      operationId: ChatService_BlockChatUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.BlockChatUserResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              blocked_user:
                $ref: '#/definitions/chat.v1.BlockUser'
                description: Required.
            required:
              - blocked_user
      tags:
        - Chat
  /core/chat/v1/chats/{id}/users:unblock:
    post:
      operationId: ChatService_UnblockChatUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.UnblockChatUserResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              unblocked_user:
                $ref: '#/definitions/chat.v1.UnblockUser'
                description: Required.
            required:
              - unblocked_user
      tags:
        - Chat
  /core/chat/v1/chats/{id}:change-status:
    post:
      operationId: ChatService_ChangeChatStatus
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.ChangeChatStatusResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              action:
                $ref: '#/definitions/chat.v1.ChangeChatStatusRequest.Action'
                description: Required.
            required:
              - action
      tags:
        - Chat
  /core/chat/v1/chats/{id}:mute:
    post:
      operationId: ChatService_MuteChat
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.MuteChatResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              action_taker:
                $ref: '#/definitions/chat.v1.ChatUser'
                description: Required.
            required:
              - action_taker
      tags:
        - Chat
  /core/chat/v1/chats/{id}:unmute:
    post:
      operationId: ChatService_UnmuteChat
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.UnmuteChatResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              action_taker:
                $ref: '#/definitions/chat.v1.ChatUser'
                description: Required.
            required:
              - action_taker
      tags:
        - Chat
  /core/chat/v1/dictionaries:
    get:
      operationId: ChatService_ListDictionaries
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.ListDictionariesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: page_size
          description: 'Maximum value: 100. Default value: 10.'
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: |-
            A page token, received from a previous `ListDictionaries` API call. Provide this to retrieve the subsequent page.
            When paginating, all other parameters provided to `ListDictionaries` must match the call that provided the page
            token.
          in: query
          required: false
          type: string
      tags:
        - Chat
    post:
      operationId: ChatService_CreateDictionary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.CreateDictionaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/chat.v1.CreateDictionaryRequest'
      tags:
        - Chat
  /core/chat/v1/dictionaries/{id}:
    get:
      operationId: ChatService_GetDictionary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.GetDictionaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Chat
    delete:
      operationId: ChatService_DeleteDictionary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.DeleteDictionaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Chat
    put:
      operationId: ChatService_UpdateDictionary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.UpdateDictionaryResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Optional.
              description:
                type: string
                description: Optional.
      tags:
        - Chat
  /core/chat/v1/dictionaries/{id}/patterns:
    get:
      operationId: ChatService_ListDictionaryPatterns
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.ListDictionaryPatternsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: page_size
          description: 'Maximum value: 100. Default value: 10.'
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: |-
            A page token, received from a previous `ListDictionaryPatterns` API call. Provide this to retrieve the subsequent page.
            When paginating, all other parameters provided to `ListDictionaryPatterns` must match the call that provided the page
            token.
          in: query
          required: false
          type: string
      tags:
        - Chat
    post:
      operationId: ChatService_CreateDictionaryPattern
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.CreateDictionaryPatternResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              text:
                type: string
                description: Required.
            required:
              - text
      tags:
        - Chat
  /core/chat/v1/dictionaries/{id}/patterns:batch-create:
    post:
      operationId: ChatService_BatchCreateDictionaryPatterns
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.BatchCreateDictionaryPatternsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              texts:
                type: array
                items:
                  type: string
                description: Required.
            required:
              - texts
      tags:
        - Chat
  /core/chat/v1/patterns/{id}:
    delete:
      operationId: ChatService_DeletePattern
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.DeletePatternResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Chat
    put:
      operationId: ChatService_UpdatePattern
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.UpdatePatternResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              text:
                type: string
                description: Required.
            required:
              - text
      tags:
        - Chat
  /core/chat/v1/reports/{id}:
    get:
      operationId: ChatService_GetChatReport
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/chat.v1.GetChatReportResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Chat
  /core/content/v1/files:
    get:
      summary: List file
      operationId: ContentService_ListFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.ListFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: page_size
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          in: query
          required: false
          type: string
        - name: type
          in: query
          required: false
          type: string
          enum:
            - FILE_TYPE_UNSPECIFIED
            - FILE_TYPE_VIDEO
            - FILE_TYPE_IMAGE
            - FILE_TYPE_SUBTITLE
          default: FILE_TYPE_UNSPECIFIED
      tags:
        - Content
    post:
      summary: Create file
      operationId: ContentService_CreateFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.CreateFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/content.v1.CreateFileRequest'
      tags:
        - Content
  /core/content/v1/files/{id}:
    get:
      summary: Get file by id
      operationId: ContentService_GetFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.GetFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Content
    delete:
      summary: Delete file by id
      operationId: ContentService_DeleteFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.DeleteFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Content
  /core/content/v1/files/{id}:complete:
    post:
      summary: Complete file
      operationId: ContentService_CompleteFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.CompleteFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
      tags:
        - Content
  /core/content/v1/files/{id}:complete-upload:
    post:
      summary: Complete upload file
      operationId: ContentService_CompleteUploadFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.CompleteUploadFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              complete_data:
                $ref: '#/definitions/content.v1.CompleteData'
                description: Required.
            required:
              - complete_data
      tags:
        - Content
  /core/content/v1/files/{id}:download:
    post:
      summary: Download file
      operationId: ContentService_DownloadFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.DownloadFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              expire_duration:
                type: string
                description: Optional.
      tags:
        - Content
  /core/content/v1/files:batch-get:
    get:
      summary: Get files by id array
      operationId: ContentService_BatchGetFiles
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.BatchGetFilesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: ids
          description: 'The ids of the subscriptions to retrieve. Maximum length: 1000.'
          in: query
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Content
  /core/content/v1/files:cancel-upload:
    post:
      summary: Cancel upload file
      operationId: ContentService_CancelUploadFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.CancelUploadFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/content.v1.CancelUploadFileRequest'
      tags:
        - Content
  /core/content/v1/files:upload:
    post:
      summary: Upload file
      operationId: ContentService_UploadFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.UploadFileResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/content.v1.UploadFileRequest'
      tags:
        - Content
  /core/content/v1/streams:
    get:
      summary: List stream
      operationId: ContentService_ListStream
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.ListStreamResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: page_size
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          in: query
          required: false
          type: string
        - name: type
          in: query
          required: false
          type: string
          enum:
            - STREAM_TYPE_UNSPECIFIED
            - STREAM_TYPE_VOD
            - STREAM_TYPE_LIVE
          default: STREAM_TYPE_UNSPECIFIED
      tags:
        - Content
    post:
      summary: Create stream
      operationId: ContentService_CreateStream
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.CreateStreamResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/content.v1.CreateStreamRequest'
      tags:
        - Content
  /core/content/v1/streams/{id}:
    get:
      summary: Get stream by id
      operationId: ContentService_GetStream
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.GetStreamResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Content
    delete:
      summary: Delete stream by id
      operationId: ContentService_DeleteStream
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.DeleteStreamResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Content
    put:
      summary: Update stream by id
      operationId: ContentService_UpdateStream
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.UpdateStreamResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              manifests:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/type.video.v1.Manifest'
              thumbnails:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/type.video.v1.Thumbnail'
              cover_image:
                $ref: '#/definitions/type.video.v1.CoverImage'
              input_source_main:
                $ref: '#/definitions/content.v1.InputSource'
              input_source_backup:
                $ref: '#/definitions/content.v1.InputSource'
              attrs:
                type: object
                additionalProperties:
                  type: string
      tags:
        - Content
  /core/content/v1/streams:batch-get:
    get:
      summary: Get streams by id array
      operationId: ContentService_BatchGetStreams
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/content.v1.BatchGetStreamsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: ids
          description: 'The ids of the subscriptions to retrieve. Maximum length: 1000.'
          in: query
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Content
  /core/delivery/v1/deliveries:
    post:
      summary: Create delivery
      operationId: DeliveryService_Create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/delivery.v1.CreateResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/delivery.v1.CreateRequest'
      tags:
        - Delivery
  /core/delivery/v1/deliveries/{host}:host:
    get:
      summary: Get delivery by host
      operationId: DeliveryService_GetByHost
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/delivery.v1.GetByHostResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: host
          in: path
          required: true
          type: string
      tags:
        - Delivery
  /core/delivery/v1/deliveries/{id}:
    get:
      summary: Get delivery
      operationId: DeliveryService_Get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/delivery.v1.GetResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Delivery
  /core/delivery/v1/deliveries/{id}:release:
    put:
      summary: Release delivery
      operationId: DeliveryService_Release
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/delivery.v1.ReleaseResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: stream_id
          in: query
          required: false
          type: string
      tags:
        - Delivery
  /core/drm/v1/cert/fairplay:
    get:
      summary: Get FairPlay certificate
      operationId: DRMService_GetFairPlayCertificate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/drm.v1.GetFairPlayCertificateResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: credential.type
          in: query
          required: false
          type: string
          enum:
            - CREDENTIAL_TYPE_UNSPECIFIED
            - CREDENTIAL_TYPE_UPFRONT_ECDSA
          default: CREDENTIAL_TYPE_UNSPECIFIED
        - name: credential.token
          in: query
          required: false
          type: string
      tags:
        - DRM
  /core/drm/v1/license/fairplay:
    post:
      summary: Get FairPlay license
      operationId: DRMService_GetFairPlayLicense
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/drm.v1.GetFairPlayLicenseResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: credential.type
          in: query
          required: false
          type: string
          enum:
            - CREDENTIAL_TYPE_UNSPECIFIED
            - CREDENTIAL_TYPE_UPFRONT_ECDSA
          default: CREDENTIAL_TYPE_UNSPECIFIED
        - name: credential.token
          in: query
          required: false
          type: string
        - name: payload
          in: query
          required: true
          type: string
          format: byte
      tags:
        - DRM
  /core/drm/v1/license/playready:
    post:
      summary: Get PlayReady license
      operationId: DRMService_GetPlayReadyLicense
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/drm.v1.GetPlayReadyLicenseResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: credential.type
          in: query
          required: false
          type: string
          enum:
            - CREDENTIAL_TYPE_UNSPECIFIED
            - CREDENTIAL_TYPE_UPFRONT_ECDSA
          default: CREDENTIAL_TYPE_UNSPECIFIED
        - name: credential.token
          in: query
          required: false
          type: string
        - name: payload
          in: query
          required: true
          type: string
          format: byte
      tags:
        - DRM
  /core/drm/v1/license/widevine:
    post:
      summary: Get Widevine license
      operationId: DRMService_GetWidevineLicense
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/drm.v1.GetWidevineLicenseResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: credential.type
          in: query
          required: false
          type: string
          enum:
            - CREDENTIAL_TYPE_UNSPECIFIED
            - CREDENTIAL_TYPE_UPFRONT_ECDSA
          default: CREDENTIAL_TYPE_UNSPECIFIED
        - name: credential.token
          in: query
          required: false
          type: string
        - name: payload
          in: query
          required: true
          type: string
          format: byte
      tags:
        - DRM
  /core/encoding/v1/jobs:
    post:
      summary: Create encoding job
      operationId: EncodingService_CreateJob
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/encoding.v1.CreateJobResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/encoding.v1.CreateJobRequest'
      tags:
        - Encoding
  /core/encoding/v1/jobs/{id}:
    get:
      summary: Get encoding job by job id
      operationId: EncodingService_GetJob
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/encoding.v1.GetJobResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Encoding
  /core/encoding/v1/jobs/{id}:cancel:
    post:
      summary: Cancel encoding job by job id
      operationId: EncodingService_CancelJob
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/encoding.v1.CancelJobResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Encoding
  /core/encoding/v1/subtitle_embeds:
    post:
      summary: Create subtitle embed
      operationId: EncodingService_CreateSubtitleEmbed
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/encoding.v1.CreateSubtitleEmbedResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/encoding.v1.CreateSubtitleEmbedRequest'
      tags:
        - Encoding
  /core/encoding/v1/subtitle_embeds/{id}:
    get:
      summary: Get subtitle embed data by subtitle_embed id
      operationId: EncodingService_GetSubtitleEmbed
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/encoding.v1.GetSubtitleEmbedResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Encoding
  /core/event/v1/events:
    get:
      summary: List events
      operationId: PublicEventService_ListEvents
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/event.v1.ListEventsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: start_after
          description: |-
            To list all of the events that starts with the given key in the event store.
            Format: `{yyyy}/{mm}/{dd}/{hh}/{user_id}`.
            Example:
            | start_after     | description                                                                        |
            | ---             | ---                                                                                |
            | `2022/08/08`    | To list all of the events on 2022/08/08                                            |
            | `2022/08/08/10` | To list all of the events on 2022/08/08 and the time between 10:00:00 and 10:59:59 |
          in: query
          required: false
          type: string
        - name: page_size
          description: 'Maximum value: 100. Default value: 10.'
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Event
    post:
      summary: Create event
      operationId: EventService_CreateEvent
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/event.v1.CreateEventResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: event
          description: Required.
          in: body
          required: true
          schema:
            $ref: '#/definitions/event.v1.Event'
            required:
              - event
      tags:
        - Event
  /core/event/v1/events/{id}:
    get:
      summary: Get event
      operationId: PublicEventService_GetEvent
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/event.v1.GetEventResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Event
  /core/key/v1/config:
    get:
      operationId: KeyService_GetConfig
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/key.v1.GetConfigResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      tags:
        - Key
  /core/key/v1/content-keys/{id}:
    get:
      operationId: KeyService_GetContentKey
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/key.v1.GetContentKeyResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Key
  /core/key/v1/contents:
    post:
      operationId: KeyService_CreateContent
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/key.v1.CreateContentResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: content.id
          description: |-
            Required. Immutable.
            Global unique content ID for the key. Should refer to content.v1.Stream.id
          in: query
          required: true
          type: string
          format: uuid
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      tags:
        - Key
  /core/key/v1/contents/{id}:
    get:
      operationId: KeyService_GetContent
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/key.v1.GetContentResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Key
    delete:
      operationId: KeyService_DeleteContent
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/key.v1.DeleteContentResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Key
  /core/key/v1/key-pairs:
    get:
      operationId: KeyService_ListKeyPairs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/key.v1.ListKeyPairsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: page_size
          description: 'Maximum value: 100. Default value: 10.'
          in: query
          required: false
          type: integer
          format: int32
        - name: next_page_token
          in: query
          required: false
          type: string
      tags:
        - Key
    post:
      operationId: KeyService_CreateKeyPair
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/key.v1.CreateKeyPairResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: key_pair
          description: Required.
          in: body
          required: true
          schema:
            $ref: '#/definitions/key.v1.KeyPair'
            required:
              - key_pair
      tags:
        - Key
  /core/key/v1/key-pairs/{id}:
    delete:
      operationId: KeyService_DeleteKeyPair
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/key.v1.DeleteKeyPairResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Key
  /core/key/v1/key-pairs/{id}:public-key:
    get:
      operationId: KeyService_GetPublicKey
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/key.v1.GetPublicKeyResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Key
  /core/key/v1/key-pairs/{id}:sign:
    post:
      operationId: KeyService_Sign
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/key.v1.SignResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              message:
                type: string
                format: byte
                description: Required.
              signing_algorithm:
                $ref: '#/definitions/key.v1.SigningAlgorithm'
                description: Required.
            required:
              - message
              - signing_algorithm
      tags:
        - Key
  /core/key/v1/key-pairs/{id}:verify:
    post:
      operationId: KeyService_Verify
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/key.v1.VerifyResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              message:
                type: string
                format: byte
                description: Required.
              signature:
                type: string
                format: byte
                description: Required.
              signing_algorithm:
                $ref: '#/definitions/key.v1.SigningAlgorithm'
                description: Required.
            required:
              - message
              - signature
              - signing_algorithm
      tags:
        - Key
  /core/key/v1/key-pairs:generate:
    post:
      operationId: KeyService_GenerateKeyPair
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/key.v1.GenerateKeyPairResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      tags:
        - Key
  /core/payment/gmo/v1/methods:
    get:
      summary: List payment methods
      description: This API will return a list of `PaymentMethod` resources.
      operationId: PublicPaymentService_ListPaymentMethods
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.ListPaymentMethodsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: page_size
          description: 'Maximum value: 100. Default value: 10.'
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: |-
            A page token, received from a previous `ListPaymentMethods` API call. Provide this to retrieve the subsequent page.
            When paginating, all other parameters provided to `ListPaymentMethods` must match the call that provided the page
            token.
          in: query
          required: false
          type: string
        - name: user_id
          description: 'Pattern: "^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$".'
          in: query
          required: false
          type: string
          pattern: ^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$
        - name: is_default
          in: query
          required: false
          type: boolean
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/methods/{id}:
    get:
      summary: Get a payment method
      description: |-
        This API will return a `PaymentMethod` resource.

        ----

        Required field(s):
        - `id`

        ----

        It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPaymentService_GetPaymentMethod
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.GetPaymentMethodResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "404":
          description: |
            If any requested resource is not found.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - PaymentGMO
    delete:
      summary: Delete a payment method
      description: |-
        This API will delete a `PaymentMethod` resource.

        ----

        Required field(s):
        - `id`

        ----

        When a default payment method is deleted, the last created payment method will be set as default payment method.

        ----

        It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPaymentService_DeletePaymentMethod
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.DeletePaymentMethodResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "404":
          description: |
            If any requested resource is not found.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/methods:create-telecom:
    post:
      summary: Create a telecom payment method
      description: |-
        This API will create a `PaymentMethod` resource and then return a `redirect_page`. When the HTML content of
        `redirect_page` is displayed on browser, the user will be redirected to a page. Once the user finish the required
        actions (no matter it's completed or cancelled), the user will be redirected to the `return_url`.

        ----

        Required field(s):
        - `type`
        - `user_id`
        - `return_url`

        ----

        Available type(s):
        - `PAYMENT_TYPE_TELECOM_DOCOMO`
        - `PAYMENT_TYPE_TELECOM_SOFTBANK`
        - `PAYMENT_TYPE_TELECOM_AU`

        ----

        When a payment method is created and there is no other default payment method, this newly created method will be
        set as the default payment method.
      operationId: PublicPaymentService_CreateTelecomPaymentMethod
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.CreateTelecomPaymentMethodResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/payment.gmo.v1.CreateTelecomPaymentMethodRequest'
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/methods:default:
    post:
      summary: Set a default payment method
      description: |-
        This API will set a `PaymentMethod` as default payment method.

        ----

        Required field(s):
        - `id`
        - `user_id`

        ----

        Notice that there won't be any `PaymentEvent` triggered whenever a `PaymentMethod` has been updated by this API.

        ----

        It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPaymentService_DefaultPaymentMethod
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.DefaultPaymentMethodResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "404":
          description: |
            If any requested resource is not found.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/payment.gmo.v1.DefaultPaymentMethodRequest'
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/methods:manage-card:
    post:
      summary: Manage a card payment method
      description: |-
        This API will provide a customizable GMO hosted page for the user to manage credit cards. When the HTML content of
        `redirect_page` is displayed on browser, the user will be redirected to a page. Once the user finish the required
        actions on the page (no matter it's completed or cancelled), the user will then be redirected to the `return_url`.

        ----

        Required field(s):
        - `user_id`
        - `return_url`

        ----

        Here are the options you can use to customize the GMO hosted page:
        | Option                             | Description                                                   |
        |------------------------------------|---------------------------------------------------------------|
        | `security_code_required` is `true` | This will display the `security code` text field on the page. |
        | `card_add_disabled` is `true`      | This will hide the `add card` button on the page.             |
        | `card_edit_disabled` is `true`     | This will hide the `edit card` button on the page.            |
        | `card_delete_disabled` is `true`   | This will hide the `delete card` button on the page.          |

        Notice that based on the `payment.provider.gmo.linkplus_config_id` setting in the `Tenant` service, you are able to
        further customize the GMO hosted page ([learn more](https://gitlab.kkinternal.com/kks/platform/docs/-/tree/main/tenant#gmo)).
      operationId: PublicPaymentService_ManageCardPaymentMethod
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.ManageCardPaymentMethodResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/payment.gmo.v1.ManageCardPaymentMethodRequest'
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/purchases:
    get:
      summary: List purchases
      description: This API will return a list of `Purchase` resources. The results are sorted in descending order by default.
      operationId: PublicPaymentService_ListPurchases
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.ListPurchasesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: page_size
          description: 'Maximum value: 100. Default value: 10.'
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: |-
            A page token, received from a previous `ListPurchases` API call. Provide this to retrieve the subsequent page.
            When paginating, all other parameters provided to `ListPurchases` must match the call that provided the page
            token.
          in: query
          required: false
          type: string
        - name: subscription_id
          in: query
          required: false
          type: string
        - name: order_ids
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: user_id
          in: query
          required: false
          type: string
      tags:
        - PaymentGMO
    post:
      summary: Create a purchase
      description: |-
        This API will create a `Purchase` resource and then return a `redirect_page`. When the HTML content of
        `redirect_page` is displayed on browser, the user will be redirected to a page. Once the user finish the required
        actions (no matter it's completed or cancelled), the user will be redirected to the `return_url`.

        ----

        Required field(s):
        - `purchase`
        - `purchase.type`
        - `purchase.amount`
        - `return_url`

        ----

        When `with_hosted_page` is `true`, it'll use a GMO hosted page (called リンクタイプ Plus) for the user to complete
        the required actions. When `with_hosted_page` is `false`, depending on the `PaymentType` the different GMO feature
        will be used. Here are the details:
        | `PaymentType`                 | `with_hosted_page` is `true` | `with_hosted_page` is `false` |
        |-------------------------------|------------------------------|-------------------------------|
        | PAYMENT_TYPE_CREDIT_CARD      |  リンクタイプ Plus             |  x                            |
        | PAYMENT_TYPE_TELECOM_DOCOMO   |  リンクタイプ Plus             |  都度決済                      |
        | PAYMENT_TYPE_TELECOM_SOFTBANK |  リンクタイプ Plus             |  都度決済                      |
        | PAYMENT_TYPE_TELECOM_AU       |  リンクタイプ Plus             |  都度決済                      |

        Notice that based on the `payment.provider.gmo.linkplus_config_id` setting in the `Tenant` service, you are able to
        further customize the GMO hosted page ([learn more](https://gitlab.kkinternal.com/kks/platform/docs/-/tree/main/tenant#gmo)).

        ----

        When `purchase_id` is provided, it'll return a `409`/`AlreadyExists` error if the resource ID already exists,
        otherwise an unique ID will be assigned to the created resource.
      operationId: PublicPaymentService_CreatePurchase
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.CreatePurchaseResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "409":
          description: |
            If the resource already exists.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/payment.gmo.v1.CreatePurchaseRequest'
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/purchases/{id}:
    get:
      summary: Get a purchase
      description: |-
        This API will return a `Purchase` resource.

        ----

        Required field(s):
        - `id`

        ----

        It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPaymentService_GetPurchase
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.GetPurchaseResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "404":
          description: |
            If any requested resource is not found.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/purchases:batch-get:
    post:
      summary: Batch get purchases
      description: |-
        This API will return a batch of `Purchase` resources.

        ----

        Required field(s):
        - `ids`

        ----

        It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPaymentService_BatchGetPurchases
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.BatchGetPurchasesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "404":
          description: |
            If any requested resource is not found.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/payment.gmo.v1.BatchGetPurchasesRequest'
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/subscriptions:
    get:
      summary: List subscriptions
      description: This API will return a list of `Subscription` resources.
      operationId: PublicPaymentService_ListSubscriptions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.ListSubscriptionsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: page_size
          description: 'Maximum value: 100. Default value: 10.'
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: |-
            A page token, received from a previous `ListSubscriptions` API call. Provide this to retrieve the subsequent page.
            When paginating, all other parameters provided to `ListSubscriptions` must match the call that provided the page
            token.
          in: query
          required: false
          type: string
        - name: status
          description: |2-
             - SUBSCRIPTION_STATUS_PENDING: The `Subscription` is created but awaiting initial payment.
             - SUBSCRIPTION_STATUS_ACTIVE: The `Subscription` is active.
             - SUBSCRIPTION_STATUS_CANCELLED: The `Subscription` is ended due to cancellation.
             - SUBSCRIPTION_STATUS_FAILED: The `Subscription` is ended due to failed payment.
          in: query
          required: false
          type: string
          enum:
            - SUBSCRIPTION_STATUS_UNSPECIFIED
            - SUBSCRIPTION_STATUS_PENDING
            - SUBSCRIPTION_STATUS_ACTIVE
            - SUBSCRIPTION_STATUS_CANCELLED
            - SUBSCRIPTION_STATUS_FAILED
          default: SUBSCRIPTION_STATUS_UNSPECIFIED
        - name: user_id
          description: 'Pattern: "^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$".'
          in: query
          required: false
          type: string
          pattern: ^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$
      tags:
        - PaymentGMO
    post:
      summary: Create a subscription
      description: |-
        This API will create a `Subscription` resource. Whenever the resource is created, an initial payment will be
        attempted. The billing cycle is the `fixed end date` model which the subscription renewal will be triggered at the
        1st of each month and proration is supported. Depending on the period start time, the first non-trial period might
        be a prorated period.

        ----

        Required field(s):
        - `subscription`
        - `subscription.user_id`
        - `subscription.amount`

        ----

        When `subscription_id` is provided, it'll return a `409`/`AlreadyExists` error if the resource ID already exists,
        otherwise an unique ID will be assigned to the created resource.

        ----

        When `validate_only` is `true`, you can preview the `Subscription` resource without actually creating it. This is
        helpful when you just want to preview some fields, such as `subscription.curr_period_pay_amount`,
        `subscription.next_period_start_time`.
      operationId: PublicPaymentService_CreateSubscription
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.CreateSubscriptionResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "409":
          description: |
            If the resource already exists.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/payment.gmo.v1.CreateSubscriptionRequest'
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/subscriptions/{id}:
    get:
      summary: Get a subscription
      description: |-
        This API will return a `Subscription` resource.

        ----

        Required field(s):
        - `id`

        ----

        It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPaymentService_GetSubscription
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.GetSubscriptionResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "404":
          description: |
            If any requested resource is not found.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/subscriptions/{id}:advance-test-clock:
    post:
      summary: Advance the subscription test clock
      description: |-
        This API will advance the test clock of the specific `Subscription`.

        ----

        It'll return a `400`/`BadRequest` error if the given `test_clock_time` was before the test clock.

        ----

        It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPaymentService_AdvanceSubscriptionTestClock
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.AdvanceSubscriptionTestClockResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "404":
          description: |
            If any requested resource is not found.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              test_clock_time:
                type: string
                format: date-time
                description: Required.
            required:
              - test_clock_time
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/subscriptions/{id}:cancel:
    post:
      summary: Cancel a subscription
      description: |-
        This API will cancel a `Subscription`.

        ----

        If `force` is `false`, the subscription will remain active until the end of the current period. On the contrary, if
        `force` is `true`, the subscription will be cancelled immediately.

        ----

        It'll return a `400`/`BadRequest` error if a bad request occurs.

        details:
          - ERROR_REASON_SUBSCRIPTION_NOT_CANCELLABLE

        ----

        It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPaymentService_CancelSubscription
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.CancelSubscriptionResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "404":
          description: |
            If any requested resource is not found.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              force:
                type: boolean
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/subscriptions/{id}:change-price:
    post:
      summary: Change the subscription price
      description: |-
        The API will update `amount`, `tax_rate`, `tax`, `next_period_pay_amount`, `next_period_pay_tax`.

        ----

        Required field(s):
        - `id`
      operationId: PublicPaymentService_ChangeSubscriptionPrice
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.ChangeSubscriptionPriceResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              amount:
                $ref: '#/definitions/google.type.Decimal'
              tax_rate:
                $ref: '#/definitions/google.type.Decimal'
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/subscriptions/{id}:revoke-cancel:
    post:
      summary: Revoke the cancellation of subscription
      description: |-
        This API will revoke the cancellation of `Subscription`.

        ----

        It'll return a `400`/`BadRequest` error if a bad request occurs.

        details:
          - ERROR_REASON_SUBSCRIPTION_CANCELLATION_NOT_REVOCABLE

        ----

        It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPaymentService_RevokeCancelSubscription
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.RevokeCancelSubscriptionResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "404":
          description: |
            If any requested resource is not found.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/subscriptions:batch-get:
    post:
      summary: Batch get subscriptions
      description: |-
        This API will return a batch of `Subscription` resources.

        ----

        Required field(s):
        - `ids`

        ----

        It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: PublicPaymentService_BatchGetSubscriptions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.BatchGetSubscriptionsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "404":
          description: |
            If any requested resource is not found.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/payment.gmo.v1.BatchGetSubscriptionsRequest'
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/subscriptions:renew:
    post:
      summary: Renew a subscription
      description: |-
        This API will renew a `Subscription`.
        NOTE: This is designed for internal use only.
      operationId: PaymentService_RenewSubscription
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/payment.gmo.v1.RenewSubscriptionResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "404":
          description: |
            If any requested resource is not found.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: tenant_id
          description: |-
            TODO: we'll migrate to tenant delegation mechanism in the future.
            Required.
          in: query
          required: true
          type: string
        - name: subscription_id
          description: 'Required. Pattern: "^[A-Za-z0-9_-]{1,64}$".'
          in: query
          required: true
          type: string
          pattern: ^[A-Za-z0-9_-]{1,64}$
        - name: curr_period_id
          description: Required.
          in: query
          required: true
          type: string
        - name: curr_period_end_time
          description: Required.
          in: query
          required: true
          type: string
          format: date-time
      tags:
        - PaymentGMO
  /core/payment/gmo/v1/webhook:
    post:
      summary: Webhook
      description: |-
        This method provides a webhook for GMO to send notification.
        NOTE: This is designed for internal use only.
      operationId: OpenPaymentService_Webhook
      responses:
        "200":
          description: ""
          schema:
            type: string
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: form_url_encoded
          description: Required.
          in: body
          required: true
          schema:
            type: string
            required:
              - form_url_encoded
        - name: token
          description: Required.
          in: query
          required: true
          type: string
      tags:
        - PaymentGMO
  /core/stream/v1/instant-encodings:
    post:
      summary: Create instant encoding
      operationId: StreamService_CreateInstantEncoding
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.CreateInstantEncodingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/stream.v1.CreateInstantEncodingRequest'
      tags:
        - Stream
  /core/stream/v1/instant-encodings/{id}:
    get:
      summary: Get instant encoding
      operationId: StreamService_GetInstantEncoding
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.GetInstantEncodingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Stream
    put:
      summary: Update instant encoding
      operationId: StreamService_UpdateInstantEncoding
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.UpdateInstantEncodingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              expire_duration:
                type: string
                description: Optional.
      tags:
        - Stream
  /core/stream/v1/live-downloads/{id}:
    get:
      summary: Record a live stream to mp4 for download
      description: |-
        This API will record a `Live` and return a `Live_Download_Info` resource.

        ----

        Required field(s):


        ----
      operationId: StreamService_GetLiveDownload
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.GetLiveDownloadResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Stream
  /core/stream/v1/lives:
    get:
      summary: List live streams
      description: This API will list the live streams.
      operationId: StreamService_ListLives
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.ListLivesResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: status
          description: The lives will be filtered by the given status.
          in: query
          required: false
          type: string
          enum:
            - LIVE_STATUS_UNSPECIFIED
            - LIVE_STATUS_CHANNEL_CREATING
            - LIVE_STATUS_CHANNEL_CREATED
            - LIVE_STATUS_DELIVERY_DEPLOYING
            - LIVE_STATUS_DELIVERY_DEPLOYED
            - LIVE_STATUS_IDLE
            - LIVE_STATUS_STARTING
            - LIVE_STATUS_RUNNING
            - LIVE_STATUS_STOPPING
            - LIVE_STATUS_DELETE_STOPPING
            - LIVE_STATUS_READY_TO_DELETE
            - LIVE_STATUS_DELIVERY_RELEASING
            - LIVE_STATUS_CHANNEL_DELETING
            - LIVE_STATUS_CHANNEL_DELETED
            - LIVE_STATUS_SOURCE_MOVING
            - LIVE_STATUS_SOURCE_MOVED
            - LIVE_STATUS_SOURCE_FAIL_TO_MOVE
            - LIVE_STATUS_SOURCE_CHECKING
            - LIVE_STATUS_SOURCE_CHECKED
            - LIVE_STATUS_SOURCE_INVALID
            - LIVE_STATUS_FAIL_TO_LIVE
            - LIVE_STATUS_CHECK_TYPE
            - LIVE_STATUS_CHECK_DELETE
          default: LIVE_STATUS_UNSPECIFIED
        - name: page_size
          description: 'Maximum value: 100. Default value: 10.'
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: |-
            A page token, received from a previous `ListLives` API call. Provide this to retrieve the subsequent page.
            When paginating, all other parameters provided to `ListLives` must match the call that provided the page
            token.
          in: query
          required: false
          type: string
      tags:
        - Stream
    post:
      summary: Create a live stream
      description: |-
        This API will create a live stream and return `Live` resource.

        ----

        Required field(s):


        ----
      operationId: StreamService_CreateLive
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.CreateLiveResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/stream.v1.CreateLiveRequest'
      tags:
        - Stream
  /core/stream/v1/lives/{id}:
    get:
      summary: Get a live stream
      description: |-
        This API will return a `Live` resource.

        ----

        Required field(s):


        ----
      operationId: StreamService_GetLive
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.GetLiveResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Stream
    delete:
      summary: Delete a live stream
      description: |-
        This API will delete a `Live` resource.

        ----

        Required field(s):


        ----
      operationId: StreamService_DeleteLive
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.DeleteLiveResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Stream
  /core/stream/v1/lives/{id}/metrics:
    get:
      summary: Get live metrics.
      description: |-
        This API will return the live metrics.

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: StreamService_GetLiveMetrics
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.GetLiveMetricsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the live.
          in: path
          required: true
          type: string
        - name: start_time
          description: Required. The time stamp indicating the earliest data to be returned. The time range cannot be over 8 hours.
          in: query
          required: true
          type: string
          format: date-time
        - name: end_time
          description: Required. The time stamp indicating the latest data to be returned. The time range cannot be over 8 hours.
          in: query
          required: true
          type: string
          format: date-time
        - name: types
          description: |-
            Optional. The live metrics types. It will request for all types of metrics if empty.

             - LIVE_METRIC_TYPE_NETWORK_IN: The rate of traffic coming into the streaming server. Unit: Mbps.
             - LIVE_METRIC_TYPE_FRAME_RATE: The frame rate of the input content. Unit: fps
          in: query
          required: false
          type: array
          items:
            type: string
            enum:
              - LIVE_METRIC_TYPE_UNSPECIFIED
              - LIVE_METRIC_TYPE_NETWORK_IN
              - LIVE_METRIC_TYPE_FRAME_RATE
          collectionFormat: multi
      tags:
        - Stream
  /core/stream/v1/lives/{id}:record:
    post:
      summary: Record a live stream
      description: |-
        This API will record a `Live` and return a `VOD` resource.

        ----

        Required field(s):


        ----
      operationId: StreamService_RecordLive
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.RecordLiveResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              start_time:
                type: string
                format: date-time
                description: Required.
              end_time:
                type: string
                format: date-time
                description: Required.
              thumbnail_enable:
                type: boolean
                description: Required.
            required:
              - start_time
              - end_time
              - thumbnail_enable
      tags:
        - Stream
  /core/stream/v1/lives/{id}:record-live-for-download:
    post:
      summary: Record a live stream to mp4 for download
      description: |-
        This API will record a `Live` and return a `Live_Download_Info` resource.

        ----

        Required field(s):


        ----
      operationId: StreamService_RecordLiveForDownload
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.RecordLiveForDownloadResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              start_time:
                type: string
                format: date-time
                description: Required.
              end_time:
                type: string
                format: date-time
                description: Required.
              format:
                $ref: '#/definitions/stream.v1.Format'
                description: Required.
            required:
              - start_time
              - end_time
              - format
      tags:
        - Stream
  /core/stream/v1/lives/{id}:start:
    post:
      summary: Start a live stream
      description: |-
        This API will start a `Live`.

        ----

        Required field(s):


        ----
      operationId: StreamService_StartLive
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.StartLiveResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
      tags:
        - Stream
  /core/stream/v1/lives/{id}:stop:
    post:
      summary: Stop a live stream
      description: |-
        This API will stop a `Live`.

        ----

        Required field(s):


        ----
      operationId: StreamService_StopLive
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.StopLiveResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
      tags:
        - Stream
  /core/stream/v1/meetings:
    post:
      summary: Create a meeting
      description: |-
        This API will create a meeting.

        ----

        - It'll return a `400`/`BadRequest` error if any request body is invalid.
      operationId: StreamService_CreateMeeting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.CreateMeetingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/stream.v1.CreateMeetingRequest'
      tags:
        - Stream
  /core/stream/v1/meetings/{id}:
    get:
      summary: Get a meeting
      description: |-
        This API will get a specific meeting.

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: StreamService_GetMeeting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.GetMeetingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the meeting.
          in: path
          required: true
          type: string
      tags:
        - Stream
    delete:
      summary: Delete the meeting
      description: |-
        This API will delete the meeting.

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `400`/`BadRequest` error if the meeting status is not allowed to delete.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: StreamService_DeleteMeeting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.DeleteMeetingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the meeting.
          in: path
          required: true
          type: string
      tags:
        - Stream
  /core/stream/v1/meetings/{id}:close:
    post:
      summary: Close the meeting
      description: |-
        This API will close the meeting.

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `400`/`BadRequest` error if the meeting status is not allowed to close.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: StreamService_CloseMeeting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.CloseMeetingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the meeting.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
      tags:
        - Stream
  /core/stream/v1/meetings/{id}:start:
    post:
      summary: Start the meeting
      description: |-
        This API will start the meeting.

        ----

        Required field(s):
        - `id`

        ----

        - It'll return a `400`/`BadRequest` error if the meeting status is not allowed to start.
        - It'll return a `404`/`NotFound` error if any requested resource is not found.
      operationId: StreamService_StartMeeting
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.StartMeetingResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. The unique id of the meeting.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
      tags:
        - Stream
  /core/stream/v1/vods:
    post:
      summary: Create VOD stream
      description: |-
        This API will return a `VOD` resource.

        ----

        Required field(s):


        ----
      operationId: StreamService_CreateVOD
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.CreateVODResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/stream.v1.CreateVODRequest'
      tags:
        - Stream
  /core/stream/v1/vods/{id}:
    get:
      summary: Get VOD stream
      description: |-
        This API will return a `VOD` resource.

        ----

        Required field(s):
        - `id`

        ----
      operationId: StreamService_GetVOD
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.GetVODResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Stream
    delete:
      summary: Delete VOD stream
      description: |-
        This API will return a `empty` resource.

        ----

        Required field(s):
        - `id`

        ----
      operationId: StreamService_DeleteVOD
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.DeleteVODResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Stream
  /core/stream/v1/vods/{id}/subtitle_embeds:
    post:
      summary: Create subtitle embed
      description: |-
        ----

        Required field(s):


        ----
      operationId: StreamService_CreateVODSubtitleEmbed
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.CreateVODSubtitleEmbedResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required. Stream id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              subtitles:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/stream.v1.SourceLibrarySubtitle'
            required:
              - subtitles
      tags:
        - Stream
  /core/stream/v1/vods/{id}:cancel:
    post:
      summary: Cancel VOD stream
      description: |-
        This API will return a `empty` resource.

        ----

        Required field(s):
        - `id`

        ----
      operationId: StreamService_CancelVOD
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.CancelVODResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          description: Required.
          in: path
          required: true
          type: string
      tags:
        - Stream
  /core/stream/v1/vods:batch-get:
    post:
      summary: Batch get VOD streams
      description: |-
        This API will return `VOD` array resource.

        ----

        Required field(s):


        ----
      operationId: StreamService_BatchGetVODs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/stream.v1.BatchGetVODsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/stream.v1.BatchGetVODsRequest'
      tags:
        - Stream
  /core/tenant/v1/settings:
    get:
      summary: List tenant settings
      operationId: PublicTenantService_ListSettings
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tenant.v1.ListSettingsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: prefix_key
          description: |-
            prefix_key

            Required. Indicates to filter the settings that the key starting with the `prefix_key`.
          in: query
          required: true
          type: string
      tags:
        - Tenant
    post:
      summary: Set tenant settings
      operationId: PublicTenantService_SetSettings
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tenant.v1.SetSettingsResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: settings
          description: |-
            settings

            Required. `settings` is key/value pairs to be stored in tenant.

            Example:

            ```json
            {
              "payment.notification.type": {
                "value": "aws_sns",
                "enabled": true
              }
            }
            ```

            See more settings on [here](https://gitlab.kkinternal.com/kks/platform/docs/-/blob/main/tenant/README.md#settings).
          in: body
          required: true
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/tenant.v1.Setting'
            required:
              - settings
      tags:
        - Tenant
  /core/tenant/v1/tenants:
    get:
      summary: Get tenant
      operationId: TenantService_GetTenant
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tenant.v1.GetTenantResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      tags:
        - Tenant
    post:
      summary: Create tenant
      operationId: TenantService_CreateTenant
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tenant.v1.CreateTenantResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: tenant
          in: body
          required: true
          schema:
            $ref: '#/definitions/tenant.v1.Tenant'
            required:
              - tenant
      tags:
        - Tenant
  /core/tenant/v1/tenants/{id}:
    get:
      summary: Get tenant by ID
      operationId: TenantService_GetTenantByID
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tenant.v1.GetTenantByIDResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Tenant
  /core/usage/v1/storage/contents:
    get:
      summary: Get the storage usage of content by tenant id
      operationId: UsageService_GetContentStorageUsage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/usage.v1.GetContentStorageUsageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: start_time
          in: query
          required: true
          type: string
          format: date-time
        - name: end_time
          in: query
          required: true
          type: string
          format: date-time
        - name: types
          in: query
          required: true
          type: array
          items:
            type: string
            enum:
              - FILE_TYPE_UNSPECIFIED
              - FILE_TYPE_VIDEO
              - FILE_TYPE_IMAGE
              - FILE_TYPE_SUBTITLE
          collectionFormat: multi
      tags:
        - Usage
  /core/usage/v1/storage/vods:
    get:
      summary: Get the storage usage of vod by tenant id
      operationId: UsageService_GetVODStorageUsage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/usage.v1.GetVODStorageUsageResponse'
        "400":
          description: |-
            A bad request response.
            The `code` is `3` means got an invalid argument. There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto) and gRPC code on [here](https://pkg.go.dev/google.golang.org/grpc@v1.54.0/codes#Code).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "401":
          description: |-
            A unauthenticated response.
            The header `authorization` was missing or unidentified.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "403":
          description: |-
            A forbidden response.
            It means that the provided `authorization` did not have enough permission to access the resource or the API.
          schema:
            $ref: '#/definitions/google.rpc.Status'
        "500":
          description: |-
            A server error response.
            There are more HTTP status code mappings listed on [here](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          schema:
            $ref: '#/definitions/google.rpc.Status'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      parameters:
        - name: start_time
          in: query
          required: true
          type: string
          format: date-time
        - name: end_time
          in: query
          required: true
          type: string
          format: date-time
      tags:
        - Usage
definitions:
  account.v1.APIToken:
    type: object
    properties:
      id:
        type: string
        description: Output only. The resource identifier of API token.
        readOnly: true
      name:
        type: string
        description: Output only. The name of API token.
        readOnly: true
      expired_date:
        type: string
        format: date-time
        description: Output only. The expired date of token.
        readOnly: true
      token_type:
        $ref: '#/definitions/type.bv.v1.TokenType'
        title: 'Output only. The type of api token. (e.g. Basic,Bearer) Default: Bearer'
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      last_used:
        type: string
        format: date-time
        description: 'Output only: The most recent usage of the token.'
        readOnly: true
  account.v1.AWSMPCustomerLandingResponse:
    type: object
    properties:
      raw_data:
        type: string
  account.v1.AcceptInviteRequest:
    type: object
    example:
      time_zone: Asia/Taipei
      token: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbnZpdGF0aW9uX2lkIjoiM2NkNTUyYmItY2Q3Ni00NGVhLWFiZmQtMmEzNTA3MTBlZTBiIiwib3JnX2lkIjoiMWE4MWJiNWYtMzEzYy00MmVmLTg3ODktYTkwYWZlZGFkMDdmIiwiYXdzbXBfb3JnX2lkIjoiMTIzIiwiZXhwIjoxNjc5NTQ1MDEzLCJqdGkiOiI4YzNmZTRkZi0zNzU2LTRkMGQtYWM5MC1hZmY5NzU5OTg4MWUifQ.bKaMF1Pe1zpoBBNIG7ttanMFwuaBQ87uRVDzfHuuDx0W15J-f9zveL2SXJpbqlQX81mAIGzrF0kyQS5yIeK0aRJ30VpcKT5O6kUB2B2jZUgyCmgERxj_d14YgDxwZHWsQn6q8lg7FUP5zznel2kvTWjEIyn9l-1LL6d28M7909F4a5mqH_eNK1fN5n5k1ylBzl5z0Vh0b91sdBQ1qS-Xzdyt2iQn725j4mfm3XaNHm2O8uUZNv8JoI833-srvGAdhgjXFct_uC2Gg4KzlH-o6V6Pc4BTAm6_qPIegC8x5t0JLJGSGNj-4UEthXtWfuuhQD8MjhM88jxTOeMNNWi9VvJwySlWKX9UPp_RaJBeUCXAnaPxW0Lsv-zFxEzwsc3p3o8j3IsWurCfHffqbkNkRVeDAfGFo-0KOxDoVlm3T3MSlNrvgUwenDj7hcq0YIStkQPdNfsj1xMkh58nUyGuWlIl9RZZRfE3k6-4R-L1Gx4d931RO8He3WtvLR8yfggbu1EIaDJnNRa2ZLTRQfwxUgMVjz2q1BStJJSjkDKku2WFjb-sLav0fV8XXBgWosOVc_0ywS6glerkg3V90ixucYfHouoWD9H1C1i-4V-lRHpeCo4EZYb7Yndk7VaRauXLFSPFtSeMeLWvOr0TAJLmQM5tEQP2zuXxLf88W1f9850
    properties:
      token:
        type: string
        title: Required. The token of invitation
      time_zone:
        type: string
        title: |-
          Required. The time zone of organization
          Time zone is for owner of organization who is come from invitation
    required:
      - token
      - time_zone
  account.v1.AcceptInviteResponse:
    type: object
  account.v1.Account:
    type: object
    properties:
      id:
        type: string
        description: Output only. The resource identifier of account.
        readOnly: true
      email:
        type: string
        title: Required. The email of account
      password:
        type: string
        description: |-
          Required. The password of account.
          Password policy:
          Contains at least 1 number.
          Contains at least 1 special character.
          Contains at least 1 uppercase letter.
          Contains at least 1 lowercase letter.
      first_name:
        type: string
        description: Required. The first name of account.
      last_name:
        type: string
        description: Required. The last name of account.
      status:
        $ref: '#/definitions/type.bv.v1.AccountStatus'
        description: Output only. The status of account.
        readOnly: true
      default_org_id:
        type: string
        title: |-
          Output only. The default organization of account.
          The account login the console, will enter default organization workspace automatically
        readOnly: true
      account_infos:
        type: array
        items:
          type: object
          $ref: '#/definitions/account.v1.AccountInfo'
        readOnly: true
      attrs:
        type: object
        additionalProperties:
          type: string
        title: 'Output only. The attributes of account. Data struct: <key,value>'
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
    required:
      - email
      - password
      - first_name
      - last_name
  account.v1.AccountInfo:
    type: object
    properties:
      organization:
        $ref: '#/definitions/org.v1.Organization'
      role_type:
        $ref: '#/definitions/type.bv.v1.RoleType'
      groups:
        type: array
        items:
          type: object
          $ref: '#/definitions/org.v1.Group'
  account.v1.BatchCreateAccountsRequest:
    type: object
    example:
      accounts:
        - email: test@kkcompany.com
          first_name: test
          last_name: test
          need_confirm: false
          password: "12345678"
          role_type: ROLE_TYPE_OWNER
    properties:
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.APIAccount'
  account.v1.BatchCreateAccountsResponse:
    type: object
    example:
      accounts:
        - account:
            attrs: []
            created_at:
              nanos: 0
              seconds: "1685943413"
            email: test@kkcompany.com
            first_name: test
            id: 0ea4963a-6e82-4509-ba96-721642c9a83f
            last_name: test
            need_confirm: false
            password: ""
            status: ACCOUNT_STATUS_ACTIVATED
            updated_at:
              nanos: 0
              seconds: "1685943413"
          created_status: CREATED_ACCOUNT_STATUS_EXIST
    properties:
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/account.v1.BatchCreateAccountsResponse.Response'
  account.v1.BatchCreateAccountsResponse.Response:
    type: object
    properties:
      account:
        $ref: '#/definitions/type.bv.v1.APIAccount'
      created_status:
        $ref: '#/definitions/type.bv.v1.CreatedAccountStatus'
  account.v1.ChangePasswordRequest:
    type: object
    example:
      new_password: "12345678"
      previous_password: "12345678"
    properties:
      previous_password:
        type: string
        description: Required. The orgninal password.
      new_password:
        type: string
        description: Required. The new password.
    required:
      - previous_password
      - new_password
  account.v1.ChangePasswordResponse:
    type: object
  account.v1.ChangeRoleRequest:
    type: object
    example:
      account_id: 71e43937-23ca-4f6d-8f4d-e350e9319318
      role_type: ROLE_TYPE_ADMIN
    properties:
      account_id:
        type: string
        description: Required. The resource identifier of account.
      role_type:
        $ref: '#/definitions/type.bv.v1.RoleType'
        description: Required. The type of role.
    required:
      - account_id
      - role_type
  account.v1.ChangeRoleResponse:
    type: object
  account.v1.ConfirmForgotPasswordRequest:
    type: object
    example:
      confirm_code: "123456"
      email: test@kkcompany.com
      new_password: "12345678"
    properties:
      email:
        type: string
        description: Required. The email of account.
      new_password:
        type: string
        description: Required. The new password for account.
      confirm_code:
        type: string
        description: Required. The confirmation code is for verifying a forgotten password.
    required:
      - email
      - new_password
      - confirm_code
  account.v1.ConfirmForgotPasswordResponse:
    type: object
  account.v1.ConfirmSignUpRequest:
    type: object
    example:
      confirm_code: "123445"
      email: test@kkcompany.com
    properties:
      email:
        type: string
        description: Required. The email that received the confirmation email.
      confirm_code:
        type: string
        description: |-
          Required. The confrimation code.
          After signing up for the account, you will receive the confirmation code in your email inbox.
    required:
      - email
      - confirm_code
  account.v1.ConfirmSignUpResponse:
    type: object
  account.v1.CreateAPITokenRequest:
    type: object
    example:
      expired_date: "2023-06-09T02:22:51.320Z"
      name: test
    properties:
      name:
        type: string
        description: Required. The display name of api token.
      expired_date:
        type: string
        format: date-time
        description: |-
          Optional. The expired date of api token.  Format: ISO8601
          If the expiration date is empty, the API token will not expire.
    required:
      - name
  account.v1.CreateAPITokenResponse:
    type: object
    example:
      expired_date: "2023-06-09T02:22:51.320Z"
      id: 15e5910b-ef36-4288-9b14-31adb324cf7a
      token: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl91c2UiOiJhcGlfYWNjZXNzIiwiZW1haWwiOiJnYXJ5dGFuQGtrY29tcGFueS5jb20iLCJpc3MiOiJvcmJpdCIsInN1YiI6IjE3NjI5OGM2LWM1OTktNDQzNS05NjczLWU4YjYzZGJkMWFiNyIsImV4cCI6MTY4NjI3NzM3MSwianRpIjoiMzZmZmUyOWUtOTY1Ni00Yzc2LTlkMWEtN2YwMWNhOGY3NzA1In0.oK72sYjOQlpri5mDEGWtkLyycFJsDxoNDml3S93_qEsQ5x0eeRqazn-cHsJlvMscdgv9qFfL-iHgRQONQpAExQPao_ZInYr7p-S8Tk7eIq_MbarlN1z2MWEA-iPfEO2XK79V8fVbv5_XzKywMMwlUIvLQMPo29nniPhCiPL3VOwrk83pGjofpHmwpVUgCkqmNIqqrGhuuVUOk4_8PlhnOsXHstiO4kav8p-bKdj9oR6GdVWNAR0PSIqEJhvgsAvLD5BNN80jkY8Cp7aUMO2f88saKzPn0XDE1G8Jr01FujcE1CEnfaniL5xS5Gef_05eHQAn2tTykMqb0E2H3Mpz5UgftsnSV3vKb8WQ7Bk8p9KaElD0-WIiRn1pQVMFRaQ424Gg0Xzi99wyNTKMe-QaFWOuEWl8RQQFXJswjf8g5kxVbq6vLaNB9s-ZF1jsH0onUtxxjcBmRwbAUEo0WT_9KG-qehP4_KPAx0V8lrRmaWh3nYs-WGwZaeQ48C8NDam2IRZcnyS0lzte6pB4YcXDk7unYlvi230PnP3TC6T23B2A9rHAgUruPt3o2GBBxf2wo0_9Io6zUv0oe0saEIvyn1KcuWuAo68-s-e-_YxJ4xvAd0UoBpNhPjiSLiFXWmx56_z5Umk6smmG-cVD4sjk_GIjR17z2I1yeFs2PTv1IlQ
      token_type: Bearer
    properties:
      token:
        type: string
        description: Output only.
        readOnly: true
      expired_date:
        type: string
        format: date-time
        description: Output only. The expired date of token.
        readOnly: true
      token_type:
        type: string
        title: 'Output only. The type of api token. (e.g. Basic,Bearer) Default: Bearer'
        readOnly: true
      id:
        type: string
        description: Output only. The resource identifier of API token.
        readOnly: true
  account.v1.DeleteAPITokenResponse:
    type: object
  account.v1.ForgotPasswordRequest:
    type: object
    example:
      email: test@kkcompany.com
    properties:
      email:
        type: string
        description: Required. The email of account.
    required:
      - email
  account.v1.ForgotPasswordResponse:
    type: object
  account.v1.GetAPITokenResponse:
    type: object
    example:
      api_token:
        created_at: "2023-04-17T10:49:41Z"
        expired_date: null
        id: bd549ae5-e467-4fd4-ace5-5262f541d273
        last_used: null
        name: test@example.com
        token_type: TOKEN_TYPE_BEARER
    properties:
      api_token:
        $ref: '#/definitions/account.v1.APIToken'
  account.v1.GetInfoResponse:
    type: object
    example:
      account:
        account_infos:
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2022-12-05T07:30:23Z"
              description: ""
              has_sub_orgs: false
              id: 04212e7d-16ab-4996-bc3a-cf88719cd867
              license_key: ""
              name: KKS Root 1234
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_ACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_ROOT
              updated_at: "2023-05-18T11:37:21Z"
            role_type: ROLE_TYPE_ADMIN
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-20T03:46:49Z"
              description: ""
              has_sub_orgs: false
              id: 27b426ae-f120-4478-b62a-328ba6a5fe5c
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-20T01:01:35Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-20T03:42:49Z"
              description: ""
              has_sub_orgs: false
              id: 37cfa5f0-b5a2-45e7-8e07-6f129bf91a49
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-20T01:00:21Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-27T06:39:00Z"
              description: ""
              has_sub_orgs: false
              id: 38b3cac3-aeeb-4b99-8e8b-b2e1671d526b
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-21T01:00:28Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-05-15T03:58:46Z"
              description: ""
              has_sub_orgs: false
              id: 4850d55e-0187-4bb9-98e3-8f708667e33c
              license_key: ""
              name: test-free-trial
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-16T01:00:21Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-05-19T03:26:50Z"
              description: ""
              has_sub_orgs: false
              id: 4ea8f6f1-ec6f-4764-952e-2eee02bdec6d
              license_key: ""
              name: test-pricing-plan-jp-email
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_ACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-19T03:27:00Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-05-15T06:08:40Z"
              description: ""
              has_sub_orgs: false
              id: 561f5a5e-6670-4e77-9c15-a49740bc4fad
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-21T01:01:38Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-20T03:43:37Z"
              description: ""
              has_sub_orgs: false
              id: 5ded9b55-a501-4f6c-ae74-91a59a4ff0f9
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-20T01:00:27Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-05-15T06:07:50Z"
              description: ""
              has_sub_orgs: false
              id: 6687a3fa-4955-4928-aad0-c3527051690a
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-21T01:01:33Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-24T03:49:35Z"
              description: ""
              has_sub_orgs: false
              id: 74e4de81-b1c5-4dff-bcc0-5b4f1ac957e1
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-06-05T01:00:30Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2022-12-07T10:06:14Z"
              description: ""
              has_sub_orgs: false
              id: 7c8ad6ad-7f25-4cc1-a315-569804bd0757
              license_key: ""
              name: test-RS
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_ACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_RESELLER
              updated_at: "2023-05-15T06:01:26Z"
            role_type: ROLE_TYPE_ADMIN
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-20T03:45:08Z"
              description: ""
              has_sub_orgs: false
              id: 933e3e09-4224-4e36-8559-cfe32a9e8f7a
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-20T01:01:29Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-20T05:05:12Z"
              description: ""
              has_sub_orgs: false
              id: cfa186c9-0ec1-4cd1-bcfe-68786c99162f
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-20T01:03:59Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-24T03:42:40Z"
              description: ""
              has_sub_orgs: false
              id: ddfcc3d3-7f08-4e19-b18f-dc6ef608374b
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-21T01:00:22Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-24T03:49:27Z"
              description: ""
              has_sub_orgs: false
              id: edc115ec-9d62-402d-b2aa-2f31a6d37ffb
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_ACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-06-05T05:30:35Z"
            role_type: ROLE_TYPE_STAFF
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-20T04:38:13Z"
              description: ""
              has_sub_orgs: false
              id: f243463a-b924-42a8-a913-70055c100e7c
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-20T01:03:53Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2022-12-07T10:06:13Z"
              description: ""
              has_sub_orgs: false
              id: f92b3ed6-1279-4489-b735-54aff2351418
              license_key: ""
              name: test-BS
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DELETING
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-03-30T09:29:14Z"
            role_type: ROLE_TYPE_ADMIN
        attrs: {}
        created_at: "2023-01-16T07:45:19Z"
        default_org_id: 27b426ae-f120-4478-b62a-328ba6a5fe5c
        email: test@kkcompany.com
        first_name: test
        id: 176298c6-c599-4435-9673-e8b63dbd1ab7
        last_name: tan
        password: ""
        status: ACCOUNT_STATUS_ACTIVATED
        updated_at: "2023-06-06T01:56:40Z"
    properties:
      account:
        $ref: '#/definitions/account.v1.Account'
  account.v1.GetResponse:
    type: object
    example:
      account:
        account_infos:
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2022-12-05T07:30:23Z"
              description: ""
              has_sub_orgs: false
              id: 04212e7d-16ab-4996-bc3a-cf88719cd867
              license_key: ""
              name: KKS Root 1234
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_ACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_ROOT
              updated_at: "2023-05-18T11:37:21Z"
            role_type: ROLE_TYPE_ADMIN
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-20T03:46:49Z"
              description: ""
              has_sub_orgs: false
              id: 27b426ae-f120-4478-b62a-328ba6a5fe5c
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-20T01:01:35Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-20T03:42:49Z"
              description: ""
              has_sub_orgs: false
              id: 37cfa5f0-b5a2-45e7-8e07-6f129bf91a49
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-20T01:00:21Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-27T06:39:00Z"
              description: ""
              has_sub_orgs: false
              id: 38b3cac3-aeeb-4b99-8e8b-b2e1671d526b
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-21T01:00:28Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-05-15T03:58:46Z"
              description: ""
              has_sub_orgs: false
              id: 4850d55e-0187-4bb9-98e3-8f708667e33c
              license_key: ""
              name: test-free-trial
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-16T01:00:21Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-05-19T03:26:50Z"
              description: ""
              has_sub_orgs: false
              id: 4ea8f6f1-ec6f-4764-952e-2eee02bdec6d
              license_key: ""
              name: test-pricing-plan-jp-email
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_ACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-19T03:27:00Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-05-15T06:08:40Z"
              description: ""
              has_sub_orgs: false
              id: 561f5a5e-6670-4e77-9c15-a49740bc4fad
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-21T01:01:38Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-20T03:43:37Z"
              description: ""
              has_sub_orgs: false
              id: 5ded9b55-a501-4f6c-ae74-91a59a4ff0f9
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-20T01:00:27Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-05-15T06:07:50Z"
              description: ""
              has_sub_orgs: false
              id: 6687a3fa-4955-4928-aad0-c3527051690a
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-21T01:01:33Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-24T03:49:35Z"
              description: ""
              has_sub_orgs: false
              id: 74e4de81-b1c5-4dff-bcc0-5b4f1ac957e1
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-06-05T01:00:30Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2022-12-07T10:06:14Z"
              description: ""
              has_sub_orgs: false
              id: 7c8ad6ad-7f25-4cc1-a315-569804bd0757
              license_key: ""
              name: test-RS
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_ACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_RESELLER
              updated_at: "2023-05-15T06:01:26Z"
            role_type: ROLE_TYPE_ADMIN
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-20T03:45:08Z"
              description: ""
              has_sub_orgs: false
              id: 933e3e09-4224-4e36-8559-cfe32a9e8f7a
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-20T01:01:29Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-20T05:05:12Z"
              description: ""
              has_sub_orgs: false
              id: cfa186c9-0ec1-4cd1-bcfe-68786c99162f
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-20T01:03:59Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-24T03:42:40Z"
              description: ""
              has_sub_orgs: false
              id: ddfcc3d3-7f08-4e19-b18f-dc6ef608374b
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-21T01:00:22Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-24T03:49:27Z"
              description: ""
              has_sub_orgs: false
              id: edc115ec-9d62-402d-b2aa-2f31a6d37ffb
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_ACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-06-05T05:30:35Z"
            role_type: ROLE_TYPE_STAFF
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-20T04:38:13Z"
              description: ""
              has_sub_orgs: false
              id: f243463a-b924-42a8-a913-70055c100e7c
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DEACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-05-20T01:03:53Z"
            role_type: ROLE_TYPE_OWNER
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2022-12-07T10:06:13Z"
              description: ""
              has_sub_orgs: false
              id: f92b3ed6-1279-4489-b735-54aff2351418
              license_key: ""
              name: test-BS
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_DELETING
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-03-30T09:29:14Z"
            role_type: ROLE_TYPE_ADMIN
        attrs: {}
        created_at: "2023-01-16T07:45:19Z"
        default_org_id: 27b426ae-f120-4478-b62a-328ba6a5fe5c
        email: test@kkcompany.com
        first_name: test
        id: 176298c6-c599-4435-9673-e8b63dbd1ab7
        last_name: tan
        password: ""
        status: ACCOUNT_STATUS_ACTIVATED
        updated_at: "2023-06-06T01:56:40Z"
    properties:
      account:
        $ref: '#/definitions/account.v1.Account'
  account.v1.InviteRequest:
    type: object
    example:
      email: test@kkcompany.com
      inviter_id: e04aa60c-0599-4324-a8ff-d7a62a72271b
      org_id: 04212e7d-16ab-4996-bc3a-cf88719cd867
      role_type: ROLE_TYPE_ADMIN
    properties:
      email:
        type: string
        description: Required. The email of invitee.
      inviter_id:
        type: string
        description: Required. The inviter's account id.
      org_id:
        type: string
        title: Required. The resource identifier of invite organization
      role_type:
        $ref: '#/definitions/type.bv.v1.RoleType'
        description: Required. The type of role in organization.
      group_ids:
        type: array
        items:
          type: string
        description: Optional. The resource identifier of groups.
    required:
      - email
      - inviter_id
      - org_id
      - role_type
  account.v1.InviteResponse:
    type: object
  account.v1.Invitee:
    type: object
    properties:
      id:
        type: string
        description: Output only. The resource identifier of invitee.
        readOnly: true
      email:
        type: string
        description: Output only. The email of invitee.
        readOnly: true
      status:
        $ref: '#/definitions/type.bv.v1.InviteStatus'
        description: Output only. The status of invitation.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
  account.v1.ListAPITokensFilter:
    type: object
    properties:
      name:
        type: string
        title: Optional. Filter by api token name
  account.v1.ListAPITokensResponse:
    type: object
    example:
      api_tokens:
        - created_at: "2023-04-17T10:49:41Z"
          expired_date: null
          id: bd549ae5-e467-4fd4-ace5-5262f541d273
          last_used: null
          name: test@example.com
          token_type: TOKEN_TYPE_BEARER
      pagination:
        current_page: 1
        items_per_page: 100
        total_items: 13
    properties:
      api_tokens:
        type: array
        items:
          type: object
          $ref: '#/definitions/account.v1.APIToken'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  account.v1.ListInviteesResponse:
    type: object
    example:
      invitee:
        - created_at: "2023-06-05T09:12:42Z"
          email: test+1231211312@kkcompany.com
          id: 11df021c-1027-4ca3-8480-f7ffbb5f633d
          status: INVITE_STATUS_INVITING
          updated_at: "2023-06-05T09:12:42Z"
        - created_at: "2023-06-05T08:49:54Z"
          email: test+12312312@kkcompany.com
          id: 4b1f1c10-cab7-49c4-8fd6-92479c6699d8
          status: INVITE_STATUS_INVITE_SUCCESS
          updated_at: "2023-06-05T08:50:47Z"
        - created_at: "2023-04-24T03:49:27Z"
          email: test@kkcompany.com
          id: 0096dcb2-0fb4-4a80-b614-88c7f3608ad4
          status: INVITE_STATUS_INVITE_SUCCESS
          updated_at: "2023-04-24T03:49:27Z"
        - created_at: "2023-04-24T03:49:27Z"
          email: test+455115@kkcompany.com
          id: 3c50dd57-67a2-425a-a4bf-7d155e868347
          status: INVITE_STATUS_INVITE_SUCCESS
          updated_at: "2023-04-24T03:49:27Z"
      pagination:
        current_page: 1
        items_per_page: 10
        total_items: 4
    properties:
      invitee:
        type: array
        items:
          type: object
          $ref: '#/definitions/account.v1.Invitee'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  account.v1.ListResponse:
    type: object
    example:
      account:
        - account_infos:
            - groups: []
              organization:
                billing_cycle: 0
                contract_days: 0
                contract_months: 0
                contract_valid_end_time: null
                contract_valid_start_time: null
                created_at: "2023-04-24T03:49:27Z"
                description: ""
                has_sub_orgs: false
                id: edc115ec-9d62-402d-b2aa-2f31a6d37ffb
                license_key: ""
                name: test-org
                owner_email: ""
                parent_id: ""
                parent_name: ""
                status: ORGANIZATION_STATUS_ACTIVATED
                time_zone: ""
                type: ORGANIZATION_TYPE_BUSINESS
                updated_at: "2023-06-05T05:30:35Z"
              role_type: ROLE_TYPE_STAFF
          attrs: {}
          created_at: "2023-06-05T05:31:53Z"
          default_org_id: edc115ec-9d62-402d-b2aa-2f31a6d37ffb
          email: test+11231@kkcompany.com
          first_name: test
          id: 91fc7f17-9877-436f-8137-647043b83c98
          last_name: test
          password: ""
          status: ACCOUNT_STATUS_ACTIVATED
          updated_at: "2023-06-05T05:31:53Z"
        - account_infos:
            - groups: []
              organization:
                billing_cycle: 0
                contract_days: 0
                contract_months: 0
                contract_valid_end_time: null
                contract_valid_start_time: null
                created_at: "2023-04-24T03:49:27Z"
                description: ""
                has_sub_orgs: false
                id: edc115ec-9d62-402d-b2aa-2f31a6d37ffb
                license_key: ""
                name: test-org
                owner_email: ""
                parent_id: ""
                parent_name: ""
                status: ORGANIZATION_STATUS_ACTIVATED
                time_zone: ""
                type: ORGANIZATION_TYPE_BUSINESS
                updated_at: "2023-06-05T05:30:35Z"
              role_type: ROLE_TYPE_STAFF
          attrs: {}
          created_at: "2023-06-05T05:36:53Z"
          default_org_id: edc115ec-9d62-402d-b2aa-2f31a6d37ffb
          email: test+1123199@kkcompany.com
          first_name: test
          id: 0ea4963a-6e82-4509-ba96-721642c9a83f
          last_name: test
          password: ""
          status: ACCOUNT_STATUS_ACTIVATED
          updated_at: "2023-06-05T05:36:53Z"
      pagination:
        current_page: 1
        items_per_page: 10
        total_items: 6
    properties:
      account:
        type: array
        items:
          type: object
          $ref: '#/definitions/account.v1.Account'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  account.v1.LoginRequest:
    type: object
    example:
      email: test@kkcompany.com
      password: "12345678"
    properties:
      email:
        type: string
        description: Required. The email of account.
      password:
        type: string
        description: Required. The password of account.
    required:
      - email
      - password
  account.v1.LoginResponse:
    type: object
    example:
      access_token: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmlnaW5fanRpIjoiMmVhOWRmMTgtMjE3Ni00ODk3LWJmZDItNGQ1ODM2NmRiMWEzIiwidG9rZW5fdXNlIjoibG9naW5fYWNjZXNzIiwiZW1haWwiOiJnYXJ5dGFuQGtrY29tcGFueS5jb20iLCJvcmdfaWQiOiJlZGMxMTVlYy05ZDYyLTQwMmQtYjJhYS0yZjMxYTZkMzdmZmIiLCJyb2xlX3R5cGUiOiJST0xFX1RZUEVfU1RBRkYiLCJpc3MiOiJvcmJpdCIsInN1YiI6IjE3NjI5OGM2LWM1OTktNDQzNS05NjczLWU4YjYzZGJkMWFiNyIsImV4cCI6MTY4NjAxOTkyNSwiaWF0IjoxNjg2MDE2MzI1LCJqdGkiOiJjZTgxNDdmMy02Y2EwLTQyYjctYWIwMC00OTU3NDA0ZDJhZWQifQ.f-xXgHYWotitMhsrm9lnn1LwiT9aHxwb8cyeLm2GERGOU6uNIBM3HXR9KbJhIe0hIXqoAWp0ZWEtMM0-PrCZdNjxKDTs5CKUcuPPDNnAHqoeEp1Wc8zTbwrTKz8r3CEQCW4np6QSNiM_alyvzYw3NAQTz2gRxaJPnIAQh5UvR9Ua5aHle5bjfYqV-cFY21Ph3S1oZVvgT_Syw8ZGDSkZdwWTJm7vOldOKPC0Etoc_c3IhxEJMJaOxZhRJDzHYfLMOH1KXCOcY5r1fLKtFUY3ubpHPDKrukWsc_EXwGCeT1UuFwNgcoWeQR0KUOzr4y-lnu0N789X0VCheHViWoGiJodvlKXphPRZ4jQm_hMsaPaDLebroAzylOB-Q3Bf2qE0aIZNHDqQBQrA21CS3HDWf8yub7ns8GiqUb8rcnq_TYvkQyf0m31TTQHZyXg0hBSufQfEO0v3a8-ypWPhHu7mXyuc-vqEC9-v9G6GGKPfAENCkWrt2dofWfJ8rkNoP0MNVfj2qf99ixz6-xHqXMfgsAEtePMNuLGVwJDRlTWrWrRu8u6rlCVrtJ9jX4wLbD6pdWNJ0Xgs3xL-t-YvICJ69cZmmzfn8NOztuVTsksvlRNfdqQ3XMhkkrt89peJ3kwqRx1HZvJ4hlu_V2qU4VONitvU7gOI3BRVh1asogr2KIY
      expires_in: 3600
      refresh_token: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmlnaW5fanRpIjoiMmVhOWRmMTgtMjE3Ni00ODk3LWJmZDItNGQ1ODM2NmRiMWEzIiwidG9rZW5fdXNlIjoibG9naW5fcmVmcmVzaCIsImVtYWlsIjoiZ2FyeXRhbkBra2NvbXBhbnkuY29tIiwib3JnX2lkIjoiZWRjMTE1ZWMtOWQ2Mi00MDJkLWIyYWEtMmYzMWE2ZDM3ZmZiIiwicm9sZV90eXBlIjoiUk9MRV9UWVBFX1NUQUZGIiwiaXNzIjoib3JiaXQiLCJzdWIiOiIxNzYyOThjNi1jNTk5LTQ0MzUtOTY3My1lOGI2M2RiZDFhYjciLCJleHAiOjE2ODg2MTE5MjUsImlhdCI6MTY4NjAxNjMyNSwianRpIjoiY2U4MTQ3ZjMtNmNhMC00MmI3LWFiMDAtNDk1NzQwNGQyYWVkIn0.lbBOIdNx0dE5pdfdIuXFokkmEEqwNcud3iZcH5JHM4m_Lh8eGyH9zVzPcDVUCwy7GaaoXIZHn8x7ci2S778EpE5nMeZ01BeJsu0aD-PxlPOkeJJw8uHntNjhxmGw0qm5V0cjps5AUbWGw29ELmpJhT8EcTfj8fbCojAvcgLIswMqKK45flMc169YdCvMNyKpU3Op2RwX--SPuxeKxNu3ErQAVFjm9gdaAMCTt6FU-giGTECJqTD5tHnp6ZtoiOqYpCAK05TOAL3BtWGHWy0gD7t2OYDq3TmSwUGRU_p_26vwHV4oPYZUE0YA1_RNkJGTxhtewNdQEpCfTPukvx2wRNKh-HF5QCjnzCvw4yWJAusXWPnJvog5v1-jlqpdDOcGd-IS00ZbrDxuyl3OUS_Ri_9pI3r_hWZ4q-5q6H3YmmtKJ5e2XrTKaCguQ98vBgxNwcD4vhJ2lrqH3d3d6eXQcAPJCjI3Z8x3dpKBZ0gBl-DqPkS4VvXvBl-W_Ed3Vf8nSw1dmsNwJPvghx3yPfcQhypHDkpxBYZgLxckkKZmcPNGAnnCiD4SxH2oayL1QkLr8uCL4rwZOoeLa4gHOS3inOiK2u_T2Z2CQvvOimH0TcOTiOjNOqOsDuoCZEQJ81FICoCWLEj3_ZT8uQ2RWaFzVTsti-mJ4ZaqKRx6vOta0cs
      token_type: Bearer
    properties:
      access_token:
        type: string
        title: 'Output only. The access token of user. Expired time: 1 hour'
        readOnly: true
      refresh_token:
        type: string
        title: 'Output only. The refresh token of user. Expired time: 30 days'
        readOnly: true
      expires_in:
        type: integer
        format: int32
        title: Output only. The duration of access token
        readOnly: true
      token_type:
        type: string
        title: 'Output only. The type of access token. (e.g. Basic,Bearer) Default: Bearer'
        readOnly: true
  account.v1.LogoutRequest:
    type: object
  account.v1.LogoutResponse:
    type: object
  account.v1.RefreshTokenRequest:
    type: object
    example:
      token: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmlnaW5fanRpIjoiNzQ2MTc3NGYtMDU4Yy00Nzc5LTg3ODUtZmM1ZWQxMzE5NjIxIiwidG9rZW5fdXNlIjoibG9naW5fcmVmcmVzaCIsImVtYWlsIjoiZ2FyeXRhbkBra2NvbXBhbnkuY29tIiwib3JnX2lkIjoiZWRjMTE1ZWMtOWQ2Mi00MDJkLWIyYWEtMmYzMWE2ZDM3ZmZiIiwicm9sZV90eXBlIjoiUk9MRV9UWVBFX0FETUlOIiwiaXNzIjoib3JiaXQiLCJzdWIiOiIxNzYyOThjNi1jNTk5LTQ0MzUtOTY3My1lOGI2M2RiZDFhYjciLCJleHAiOjE2ODg1NTA1OTEsImlhdCI6MTY4NTk1NDk5MSwianRpIjoiMTI3ZDA4YzctYjE2My00ZWZiLTkzZTItYjcwMTViMDA0ZWUwIn0.ub2P7VvkBW1O5pkhAJVDSm8COI2L4pn6nyB5rI1Ik4yF8S2zBdIU7FdO2Q6M8h_xBeYULkg85cUIIfaU1-ur1jbiTJjux_tKu4ed7YcWqU0Z8n7JqZYN3T4Y0Xi6iLiBC0Em0yF-IJSFo5s_813LkFYWZdHhCJNaY0JhUHHUXXKVeW5d7QIQAg6RNav02JhsZn6-x3Lp97QMiqQWecICJVIEAzDcN9nFnjU1u6sOGy_VjZPMAjYkohdspTV0oChhrjFhukhNWPu_EZ7qzBd3vwAwW2T9PQVgxEI-U_tu-3XsxjmXAjlmb9OS2Xc8nY7Jkp-joAGdXP0Fx0qXPsbL1yb8tV3WrJT6jp2ifbL0w1s1Lh4HtkYiUwdFIO661c765CriSBqNOxxRDfg_UXX2MaQRBHtC7sfbYYke3JBQFUn9zNXJKwGKna-8WHK6XyyZJBjCkaE9eREvmYoWkOGG084hnLvENvmQ9FOpAYa4eB8utoyvx2dr2sxvKAjddCYMms9D2hf3vJ8FPH7R3i73fbD_-msYTZnvr7bds0tyGakZ6tgkYbOAJsk89bAm7A3h8EaRcpAFLhTB99InrqL_7iqQh6rJ0HRB7ICpIGqmE53EXs8dV7OipCcTrBKcPfq9Byx8ZbOqJuCAgtfujAgZXq6IPDe_18ou6jL2i8AC7os
    properties:
      token:
        type: string
        title: Required. The token for refresh access token
    required:
      - token
  account.v1.RefreshTokenResponse:
    type: object
    example:
      access_token: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmlnaW5fanRpIjoiNzQ2MTc3NGYtMDU4Yy00Nzc5LTg3ODUtZmM1ZWQxMzE5NjIxIiwidG9rZW5fdXNlIjoibG9naW5fYWNjZXNzIiwiZW1haWwiOiJnYXJ5dGFuQGtrY29tcGFueS5jb20iLCJvcmdfaWQiOiJlZGMxMTVlYy05ZDYyLTQwMmQtYjJhYS0yZjMxYTZkMzdmZmIiLCJyb2xlX3R5cGUiOiJST0xFX1RZUEVfQURNSU4iLCJpc3MiOiJvcmJpdCIsInN1YiI6IjE3NjI5OGM2LWM1OTktNDQzNS05NjczLWU4YjYzZGJkMWFiNyIsImV4cCI6MTY4NTk1ODkxMSwiaWF0IjoxNjg1OTU1MzExLCJqdGkiOiIyY2Q5NWMxOC02ZGRiLTQwY2EtYmMzZS04NjIxODZkMThhNGIifQ.u0zkDyS7gweXrwh_dxy0DxpG9EbhWUbf-7bAKIw3n6kLgBrtjoJnLn5t98cmF9m8jZiqCErTIIEtncmagWzjRTub-msWRENnp4b-JxOB1luxiqOCc2g2C6rGKFpkOGTFPlOolQM0T0b437vUKq9YtV9P22rl_JMCAjPJ-68sivxQI6lYSCrrMug1AZnx78eyYUSeJEgUG04wiqbapRi66mFauaCcSGVfapKyhk4Sn-gRDK5RdLZNsCSRWQY-CgiszJ0HjZVlTq-5t-gZZuHRcrdwsHe6n2VkxnboEcWGSV2slfA8817GvC0vmSiU82cpb9-ZyjaGrtCrY5kD9O8lECjepeib2i8v-88lznAa5cYumyGyjB7xN_1wvPE2BTkiUoLHczFdAcHQ_XlrRAuWlNk0mXYmKjLvD7VLNApHRJ-PG-pvcPbn2cC9Ic10-7PEP1q9PxBzY4O156rT_Zhe8H1yumrx2WOgm7arCwq_fOlSbGX4GOMl_jNWiX6NMSTtgLoo2d17zYyMXJndnzpjqUtOFoPcZFhPTsGrhi1cR4M_qNvy5nhsz2i-nxWKtAn9t88cJLTvXyZkIOa1Ubv9gKaEpF1yibV0aCrB_pYhDe-Df-FcO8ly5cPuCyjeuWbl3mptYiRrwdSnGY82kk0tAZWZVL_SHtEUGenm1bt2IwA
      expires_in: 3600
      token_type: Bearer
    properties:
      access_token:
        type: string
        description: Output only.
        readOnly: true
      expires_in:
        type: integer
        format: int32
        title: Output only. The duration of access token
        readOnly: true
      token_type:
        type: string
        title: 'Output only. The type of access token. (e.g. Basic,Bearer) Default: Bearer'
        readOnly: true
  account.v1.ResendConfirmationCodeRequest:
    type: object
    example:
      confirm_code: "123445"
      email: test@kkcompany.com
    properties:
      email:
        type: string
        description: Required. The email for which the account confirmation code needs to be re-sent.
    required:
      - email
  account.v1.ResendConfirmationCodeResponse:
    type: object
  account.v1.ResendInviteRequest:
    type: object
    example:
      email: test@kkcompany.com
      inviter_id: 176298c6-c599-4435-9673-e8b63dbd1ab7
      org_id: 04212e7d-16ab-4996-bc3a-cf88719cd867
    properties:
      org_id:
        type: string
        description: Required. The resource identifier of the organization.
      email:
        type: string
        description: Required. The email of invitee.
      inviter_id:
        type: string
        description: Required. The id of inviter.
    required:
      - org_id
      - email
      - inviter_id
  account.v1.ResendInviteResponse:
    type: object
  account.v1.SignUpRequest:
    type: object
    example:
      account:
        email: test@kkcompany.com
        first_name: test
        last_name: test
        password: '@Kk12345678'
      token: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbnZpdGF0aW9uX2lkIjoiZGYxMzQ4MzEtNzBlNi00ZDNlLTlhOGYtYmU5MzQxNTEyYTZmIiwiZW1haWwiOiJkYW5ueWNoZW5Aa2tjb21wYW55LmNvbSIsImludml0ZXJfaWQiOiJmY2I3MzZiZC03YzE5LTRlMjMtYmNiZi00MGE1YzU3ZmVjNzYiLCJpbnZpdGVyX2VtYWlsIjoicmF5Y2hvdUBra2NvbXBhbnkuY29tIiwib3JnX2lkIjoiMzhkMjRhMWUtNTc3NC00ZjZlLWIxNmYtYTMyN2QwNjU4MjMxIiwib3JnX25hbWUiOiJEYW5ueSBCdXNpbmVzcyBPcmciLCJyb2xlX3R5cGUiOiJST0xFX1RZUEVfT1dORVIiLCJleHAiOjE2NzgxNjg3NjksImp0aSI6ImM2YjUwMWU5LTAyNWYtNDk2Mi05OGMxLWRjOWYxOGMyN2NjYSJ9.UVX_BpBKgPVZipJwInbrbu5UXE2WYU6021lxVEZ8lGfXJ1_5bt2zQs5I3NZ3KsA4DeIZJlv93R5CWzNbZP9lFbH6oQAqcZzZsoJZHbEvIh6IDkc9_iFEeIJZ84123OUXBhfNhemCkudhE-H_DjQOD8iYj7qNTW4_J8SSp43wxr1NkQHlnJ4F3zgs6_oOhDSZ5lGTySFlutEYCJb3hZvJ7NB9ly-2DzwEXizg5TTkSN2KQxh4DJ9kwRlrIkD5KEyhiv9J3EL_ksdHK8RSLoR_5YN9HJpGTcWGWZnw0QlBQ_oPSVk3HE7r6tDcgrpRCtQBH41aitHB4EN05PcyBMWOmK_VoSOMGuaaYgpNprKyTuSg2AfOy39xCSg2MlWzV2SxJdxxbzrmisM7JX4v0_rFNLp1XpQjzxGDJaocg9mYIJqVfudwwnGVaQmUo0ciA7KhME46HV9ar_WtnykG_LIxTaBbAQQazy9iL7Ir_IYUoZe-u_DTfoRQzTjMFQIGngf7SH1e5NT6GbkaJ3g9sbuQIIRu4R59OX9EJJEzEcZARpquoEgVOqvbMuvKzFjXxlJfqN9f397fJIOhCLxxbeV0JRMbX53k9avjhPf4LXqQwLj11dyO66qx1FTliSB0YOMlCCt4QeSynwg8PSP7wfLsGZ4Gf8nGzrT5ZYuZq0rRI0o
    properties:
      account:
        $ref: '#/definitions/account.v1.Account'
      token:
        type: string
        description: |-
          Optional. The token of invitation.
          If the user is joining through an invitation, a token is required. Otherwise, there is no need to provide one.
      org_name:
        type: string
        description: |-
          Optional. The name of organization.
          If the user comes from the AWS Marketplace, providing the organization name is required.
    required:
      - account
  account.v1.SignUpResponse:
    type: object
    example:
      account:
        account_infos:
          - groups: []
            organization:
              billing_cycle: 0
              contract_days: 0
              contract_months: 0
              contract_valid_end_time: null
              contract_valid_start_time: null
              created_at: "2023-04-24T03:49:27Z"
              description: ""
              has_sub_orgs: false
              id: edc115ec-9d62-402d-b2aa-2f31a6d37ffb
              license_key: ""
              name: test-org
              owner_email: ""
              parent_id: ""
              parent_name: ""
              status: ORGANIZATION_STATUS_ACTIVATED
              time_zone: ""
              type: ORGANIZATION_TYPE_BUSINESS
              updated_at: "2023-06-05T05:30:35Z"
            role_type: ROLE_TYPE_ADMIN
        attrs: {}
        created_at: "2023-06-05T08:50:47Z"
        default_org_id: edc115ec-9d62-402d-b2aa-2f31a6d37ffb
        email: test@kkcompany.com
        first_name: test
        id: c192733e-cf98-497e-a439-3cb1f938b0b9
        last_name: test
        password: ""
        status: ACCOUNT_STATUS_DEACTIVATED
        updated_at: "2023-06-05T08:50:47Z"
    properties:
      account:
        $ref: '#/definitions/account.v1.Account'
  account.v1.SwitchOrgRequest:
    type: object
    example:
      org_id: edc115ec-9d62-402d-b2aa-2f31a6d37ffb
    properties:
      org_id:
        type: string
        description: Required. The resource identifier of the organization.
    required:
      - org_id
  account.v1.SwitchOrgResponse:
    type: object
    example:
      access_token: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmlnaW5fanRpIjoiMmVhOWRmMTgtMjE3Ni00ODk3LWJmZDItNGQ1ODM2NmRiMWEzIiwidG9rZW5fdXNlIjoibG9naW5fYWNjZXNzIiwiZW1haWwiOiJnYXJ5dGFuQGtrY29tcGFueS5jb20iLCJvcmdfaWQiOiJlZGMxMTVlYy05ZDYyLTQwMmQtYjJhYS0yZjMxYTZkMzdmZmIiLCJyb2xlX3R5cGUiOiJST0xFX1RZUEVfU1RBRkYiLCJpc3MiOiJvcmJpdCIsInN1YiI6IjE3NjI5OGM2LWM1OTktNDQzNS05NjczLWU4YjYzZGJkMWFiNyIsImV4cCI6MTY4NjAxOTkyNSwiaWF0IjoxNjg2MDE2MzI1LCJqdGkiOiJjZTgxNDdmMy02Y2EwLTQyYjctYWIwMC00OTU3NDA0ZDJhZWQifQ.f-xXgHYWotitMhsrm9lnn1LwiT9aHxwb8cyeLm2GERGOU6uNIBM3HXR9KbJhIe0hIXqoAWp0ZWEtMM0-PrCZdNjxKDTs5CKUcuPPDNnAHqoeEp1Wc8zTbwrTKz8r3CEQCW4np6QSNiM_alyvzYw3NAQTz2gRxaJPnIAQh5UvR9Ua5aHle5bjfYqV-cFY21Ph3S1oZVvgT_Syw8ZGDSkZdwWTJm7vOldOKPC0Etoc_c3IhxEJMJaOxZhRJDzHYfLMOH1KXCOcY5r1fLKtFUY3ubpHPDKrukWsc_EXwGCeT1UuFwNgcoWeQR0KUOzr4y-lnu0N789X0VCheHViWoGiJodvlKXphPRZ4jQm_hMsaPaDLebroAzylOB-Q3Bf2qE0aIZNHDqQBQrA21CS3HDWf8yub7ns8GiqUb8rcnq_TYvkQyf0m31TTQHZyXg0hBSufQfEO0v3a8-ypWPhHu7mXyuc-vqEC9-v9G6GGKPfAENCkWrt2dofWfJ8rkNoP0MNVfj2qf99ixz6-xHqXMfgsAEtePMNuLGVwJDRlTWrWrRu8u6rlCVrtJ9jX4wLbD6pdWNJ0Xgs3xL-t-YvICJ69cZmmzfn8NOztuVTsksvlRNfdqQ3XMhkkrt89peJ3kwqRx1HZvJ4hlu_V2qU4VONitvU7gOI3BRVh1asogr2KIY
      refresh_token: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmlnaW5fanRpIjoiMmVhOWRmMTgtMjE3Ni00ODk3LWJmZDItNGQ1ODM2NmRiMWEzIiwidG9rZW5fdXNlIjoibG9naW5fcmVmcmVzaCIsImVtYWlsIjoiZ2FyeXRhbkBra2NvbXBhbnkuY29tIiwib3JnX2lkIjoiZWRjMTE1ZWMtOWQ2Mi00MDJkLWIyYWEtMmYzMWE2ZDM3ZmZiIiwicm9sZV90eXBlIjoiUk9MRV9UWVBFX1NUQUZGIiwiaXNzIjoib3JiaXQiLCJzdWIiOiIxNzYyOThjNi1jNTk5LTQ0MzUtOTY3My1lOGI2M2RiZDFhYjciLCJleHAiOjE2ODg2MTE5MjUsImlhdCI6MTY4NjAxNjMyNSwianRpIjoiY2U4MTQ3ZjMtNmNhMC00MmI3LWFiMDAtNDk1NzQwNGQyYWVkIn0.lbBOIdNx0dE5pdfdIuXFokkmEEqwNcud3iZcH5JHM4m_Lh8eGyH9zVzPcDVUCwy7GaaoXIZHn8x7ci2S778EpE5nMeZ01BeJsu0aD-PxlPOkeJJw8uHntNjhxmGw0qm5V0cjps5AUbWGw29ELmpJhT8EcTfj8fbCojAvcgLIswMqKK45flMc169YdCvMNyKpU3Op2RwX--SPuxeKxNu3ErQAVFjm9gdaAMCTt6FU-giGTECJqTD5tHnp6ZtoiOqYpCAK05TOAL3BtWGHWy0gD7t2OYDq3TmSwUGRU_p_26vwHV4oPYZUE0YA1_RNkJGTxhtewNdQEpCfTPukvx2wRNKh-HF5QCjnzCvw4yWJAusXWPnJvog5v1-jlqpdDOcGd-IS00ZbrDxuyl3OUS_Ri_9pI3r_hWZ4q-5q6H3YmmtKJ5e2XrTKaCguQ98vBgxNwcD4vhJ2lrqH3d3d6eXQcAPJCjI3Z8x3dpKBZ0gBl-DqPkS4VvXvBl-W_Ed3Vf8nSw1dmsNwJPvghx3yPfcQhypHDkpxBYZgLxckkKZmcPNGAnnCiD4SxH2oayL1QkLr8uCL4rwZOoeLa4gHOS3inOiK2u_T2Z2CQvvOimH0TcOTiOjNOqOsDuoCZEQJ81FICoCWLEj3_ZT8uQ2RWaFzVTsti-mJ4ZaqKRx6vOta0cs
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
  account.v1.UpdateGroupRequest:
    type: object
    example:
      account_id: 71e43937-23ca-4f6d-8f4d-e350e9319318
      group_ids:
        - 8c307538-5c7f-4949-bdef-c7c3f995f957
        - 3082087c-982a-433a-ac9f-db4ff4bea779
    properties:
      account_id:
        type: string
        description: Required. The resource identifier of account.
      group_ids:
        type: array
        items:
          type: string
        description: Required. The identifier of group.
    required:
      - account_id
      - group_ids
  account.v1.UpdateGroupResponse:
    type: object
  account.v1.UpdateRequest:
    type: object
    example:
      first_name: test
      last_name: test
    properties:
      first_name:
        type: string
        title: Required. The updated first name of account
      last_name:
        type: string
        title: Required. The updated last name of account
    required:
      - first_name
      - last_name
  account.v1.UpdateResponse:
    type: object
  analytics.v1.AnalyticsByKeyChart:
    type: object
    properties:
      key:
        type: string
      time_chart:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.TimeChartPoint'
  analytics.v1.AnalyticsByOrgChart:
    type: object
    properties:
      org_name:
        type: string
      org_id:
        type: string
      time_chart:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.TimeChartPoint'
  analytics.v1.AnalyticsDefaultChart:
    type: object
    properties:
      key:
        $ref: '#/definitions/analytics.v1.AnalyticsDefaultChartKey'
      time_chart:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.TimeChartPoint'
  analytics.v1.AnalyticsDefaultChartKey:
    type: string
    enum:
      - ANALYTICS_DEFAULT_CHART_KEY_UNSPECIFIED
      - ANALYTICS_DEFAULT_CHART_KEY_CDN_VOD
      - ANALYTICS_DEFAULT_CHART_KEY_CDN_LIVE
      - ANALYTICS_DEFAULT_CHART_KEY_STORAGE_VOD_H265
      - ANALYTICS_DEFAULT_CHART_KEY_STORAGE_VOD_H264
      - ANALYTICS_DEFAULT_CHART_KEY_STORAGE_LIVE_TO_VOD
      - ANALYTICS_DEFAULT_CHART_KEY_STORAGE_LIBRARY
      - ANALYTICS_DEFAULT_CHART_KEY_ENCODING_VOD_H265
      - ANALYTICS_DEFAULT_CHART_KEY_ENCODING_VOD_H264
      - ANALYTICS_DEFAULT_CHART_KEY_ENCODING_LIVE_TO_VOD
      - ANALYTICS_DEFAULT_CHART_KEY_LIVE_DURATION_ULL
      - ANALYTICS_DEFAULT_CHART_KEY_LIVE_DURATION_NON_ULL
      - ANALYTICS_DEFAULT_CHART_KEY_DRM_ALL
    default: ANALYTICS_DEFAULT_CHART_KEY_UNSPECIFIED
  analytics.v1.BarChartItem:
    type: object
    properties:
      name:
        type: string
      value:
        $ref: '#/definitions/google.type.Decimal'
  analytics.v1.BatchCreateLiveDailyCDNUsageResponse:
    type: object
  analytics.v1.BatchGetEventReportsRequest:
    type: object
    properties:
      reports:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.EventReport'
  analytics.v1.BatchGetEventReportsResponse:
    type: object
    properties:
      reports:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.EventReport'
  analytics.v1.BillableAmountGbs:
    type: object
    properties:
      consumption_gbs:
        $ref: '#/definitions/google.type.Decimal'
      billable_gbs:
        $ref: '#/definitions/google.type.Decimal'
      coefficient:
        $ref: '#/definitions/google.type.Decimal'
  analytics.v1.BillableAmountHours:
    type: object
    properties:
      consumption_hours:
        $ref: '#/definitions/google.type.Decimal'
      billable_hours:
        $ref: '#/definitions/google.type.Decimal'
      coefficient:
        $ref: '#/definitions/google.type.Decimal'
  analytics.v1.BillableAmountTimes:
    type: object
    properties:
      consumption_times:
        $ref: '#/definitions/google.type.Decimal'
      billable_times:
        $ref: '#/definitions/google.type.Decimal'
      coefficient:
        $ref: '#/definitions/google.type.Decimal'
  analytics.v1.CDNReportStreamingType:
    type: string
    enum:
      - CDN_REPORT_STREAMING_TYPE_UNSPECIFIED
      - CDN_REPORT_STREAMING_TYPE_LIVE
      - CDN_REPORT_STREAMING_TYPE_VOD
      - CDN_REPORT_STREAMING_TYPE_LIVE_TO_VOD
    default: CDN_REPORT_STREAMING_TYPE_UNSPECIFIED
  analytics.v1.CreateEventReportRequest:
    type: object
    properties:
      id:
        type: string
        description: Required. The uuid of the event that wants to create the report.
      type:
        $ref: '#/definitions/analytics.v1.EventType'
        description: Required. The type of the event that wants to create the report.
      dimensions:
        type: array
        items:
          $ref: '#/definitions/analytics.v1.ReportDimension'
        description: Required. Indicates the created event report must include those dimensions.
    required:
      - id
      - type
      - dimensions
  analytics.v1.CreateEventReportResponse:
    type: object
    properties:
      reports:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.EventReport'
  analytics.v1.DashboardAssetsStatisticsByStreamTypeAccumulatedData:
    type: object
    properties:
      count:
        $ref: '#/definitions/google.type.Decimal'
      view_count:
        $ref: '#/definitions/google.type.Decimal'
      watch_time_hours:
        $ref: '#/definitions/google.type.Decimal'
      unique_user_count:
        $ref: '#/definitions/google.type.Decimal'
  analytics.v1.DashboardAssetsStatisticsByStreamTypeTopViewLive:
    type: object
    properties:
      name:
        type: string
      view_count:
        $ref: '#/definitions/google.type.Decimal'
      avg_watch_time_hours:
        $ref: '#/definitions/google.type.Decimal'
      max_concurrent_user_count:
        $ref: '#/definitions/google.type.Decimal'
  analytics.v1.DashboardAssetsStatisticsByStreamTypeTopViewVOD:
    type: object
    properties:
      name:
        type: string
      view_count:
        $ref: '#/definitions/google.type.Decimal'
      avg_watch_time_hours:
        $ref: '#/definitions/google.type.Decimal'
  analytics.v1.DashboardAssetsStatisticsLive:
    type: object
    properties:
      accumulated_data:
        $ref: '#/definitions/analytics.v1.DashboardAssetsStatisticsByStreamTypeAccumulatedData'
      top_views:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.DashboardAssetsStatisticsByStreamTypeTopViewLive'
  analytics.v1.DashboardAssetsStatisticsVOD:
    type: object
    properties:
      accumulated_data:
        $ref: '#/definitions/analytics.v1.DashboardAssetsStatisticsByStreamTypeAccumulatedData'
      top_views:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.DashboardAssetsStatisticsByStreamTypeTopViewVOD'
  analytics.v1.DashboardBusinessAssetsStatistics:
    type: object
    properties:
      live:
        $ref: '#/definitions/analytics.v1.DashboardAssetsStatisticsLive'
      vod:
        $ref: '#/definitions/analytics.v1.DashboardAssetsStatisticsVOD'
  analytics.v1.DashboardBusinessUsageSummary:
    type: object
    properties:
      storage:
        $ref: '#/definitions/analytics.v1.DashboardBusinessUsageSummaryStorage'
      cdn:
        $ref: '#/definitions/analytics.v1.DashboardBusinessUsageSummaryCDN'
      live_hour:
        $ref: '#/definitions/analytics.v1.DashboardBusinessUsageSummaryLiveHour'
      drm:
        $ref: '#/definitions/analytics.v1.DashboardBusinessUsageSummaryDRM'
      billing_start_time:
        type: string
        format: date-time
      billing_end_time:
        type: string
        format: date-time
  analytics.v1.DashboardBusinessUsageSummaryCDN:
    type: object
    properties:
      vod:
        $ref: '#/definitions/analytics.v1.DashboardBusinessUsageSummaryCDNVOD'
      live:
        $ref: '#/definitions/analytics.v1.DashboardBusinessUsageSummaryCDNLive'
      billable_quota_gbs:
        $ref: '#/definitions/google.type.Decimal'
      last_update_time:
        type: string
        format: date-time
        readOnly: true
  analytics.v1.DashboardBusinessUsageSummaryCDNLive:
    type: object
    properties:
      live:
        $ref: '#/definitions/analytics.v1.BillableAmountGbs'
  analytics.v1.DashboardBusinessUsageSummaryCDNVOD:
    type: object
    properties:
      vod:
        $ref: '#/definitions/analytics.v1.BillableAmountGbs'
  analytics.v1.DashboardBusinessUsageSummaryDRM:
    type: object
    properties:
      drm:
        $ref: '#/definitions/analytics.v1.BillableAmountTimes'
      billable_quota_times:
        $ref: '#/definitions/google.type.Decimal'
  analytics.v1.DashboardBusinessUsageSummaryLiveHour:
    type: object
    properties:
      live_base:
        $ref: '#/definitions/analytics.v1.BillableAmountHours'
      live_resolution_4k:
        $ref: '#/definitions/analytics.v1.BillableAmountHours'
      live_ull:
        $ref: '#/definitions/analytics.v1.BillableAmountHours'
      billable_quota_hours:
        $ref: '#/definitions/google.type.Decimal'
  analytics.v1.DashboardBusinessUsageSummaryStorage:
    type: object
    properties:
      encoding:
        $ref: '#/definitions/analytics.v1.DashboardBusinessUsageSummaryStorageEncoding'
      pure_storage:
        $ref: '#/definitions/analytics.v1.DashboardBusinessUsageSummaryStoragePureStorage'
      billable_quota_storage_gbs:
        $ref: '#/definitions/google.type.Decimal'
      billable_quota_encoding_gbs:
        $ref: '#/definitions/google.type.Decimal'
      last_update_time:
        type: string
        format: date-time
        readOnly: true
  analytics.v1.DashboardBusinessUsageSummaryStorageEncoding:
    type: object
    properties:
      encoding_vod_base:
        $ref: '#/definitions/analytics.v1.BillableAmountGbs'
      encoding_vod_pte:
        $ref: '#/definitions/analytics.v1.BillableAmountGbs'
      encoding_vod_faster_queue:
        $ref: '#/definitions/analytics.v1.BillableAmountGbs'
      encoding_vod_h265:
        $ref: '#/definitions/analytics.v1.BillableAmountGbs'
      encoding_live2vod_base:
        $ref: '#/definitions/analytics.v1.BillableAmountGbs'
  analytics.v1.DashboardBusinessUsageSummaryStoragePureStorage:
    type: object
    properties:
      history_vod:
        $ref: '#/definitions/analytics.v1.BillableAmountGbs'
      library_video:
        $ref: '#/definitions/analytics.v1.BillableAmountGbs'
  analytics.v1.DashboardResellerAccountSummary:
    type: object
    properties:
      sub_org_status:
        $ref: '#/definitions/analytics.v1.DashboardResellerAccountSummarySubOrgStatus'
      plan_summary:
        $ref: '#/definitions/analytics.v1.DashboardResellerAccountSummaryPlanSummary'
      last_update_time:
        type: string
        format: date-time
        readOnly: true
  analytics.v1.DashboardResellerAccountSummaryPlanSummary:
    type: object
    properties:
      top_selling_plans_chart:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.BarChartItem'
  analytics.v1.DashboardResellerAccountSummarySubOrgStatus:
    type: object
    properties:
      active_count:
        $ref: '#/definitions/google.type.Decimal'
      verifying_count:
        $ref: '#/definitions/google.type.Decimal'
      failed_to_verify_count:
        $ref: '#/definitions/google.type.Decimal'
      deactivated_count:
        $ref: '#/definitions/google.type.Decimal'
      active_orgs_time_chart:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.TimeChartPoint'
  analytics.v1.DashboardResellerTopUsageConsumption:
    type: object
    properties:
      last_update_time:
        type: string
        format: date-time
        readOnly: true
      list:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.DashboardResellerTopUsageConsumptionListItem'
  analytics.v1.DashboardResellerTopUsageConsumptionListItem:
    type: object
    properties:
      org_name:
        type: string
      cdn_gbs:
        $ref: '#/definitions/google.type.Decimal'
      storage_gbs:
        $ref: '#/definitions/google.type.Decimal'
      encoding_gbs:
        $ref: '#/definitions/google.type.Decimal'
      drm_count:
        $ref: '#/definitions/google.type.Decimal'
      live_event_count:
        $ref: '#/definitions/google.type.Decimal'
      vod_count:
        $ref: '#/definitions/google.type.Decimal'
  analytics.v1.DashboardResellerUsageSummary:
    type: object
    properties:
      cdn:
        $ref: '#/definitions/analytics.v1.DashboardResellerUsageSummaryOverall'
      storage:
        $ref: '#/definitions/analytics.v1.DashboardResellerUsageSummaryOverall'
      live_hour:
        $ref: '#/definitions/analytics.v1.DashboardResellerUsageSummaryLiveHour'
      drm:
        $ref: '#/definitions/analytics.v1.DashboardResellerUsageSummaryDRM'
      encoding:
        $ref: '#/definitions/analytics.v1.DashboardResellerUsageSummaryEncoding'
  analytics.v1.DashboardResellerUsageSummaryDRM:
    type: object
    properties:
      request_times:
        $ref: '#/definitions/google.type.Decimal'
      usage_time_chart:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.TimeChartPoint'
  analytics.v1.DashboardResellerUsageSummaryEncoding:
    type: object
    properties:
      faster_queue:
        $ref: '#/definitions/analytics.v1.DashboardResellerUsageSummaryEncodingFasterQueue'
      standard_queue:
        $ref: '#/definitions/analytics.v1.DashboardResellerUsageSummaryEncodingStandardQueue'
  analytics.v1.DashboardResellerUsageSummaryEncodingFasterQueue:
    type: object
    properties:
      encoding_vod_h264_gbs:
        $ref: '#/definitions/google.type.Decimal'
      encoding_vod_h265_gbs:
        $ref: '#/definitions/google.type.Decimal'
  analytics.v1.DashboardResellerUsageSummaryEncodingStandardQueue:
    type: object
    properties:
      encoding_h264_gbs:
        $ref: '#/definitions/google.type.Decimal'
      encoding_h265_gbs:
        $ref: '#/definitions/google.type.Decimal'
      encoding_live_to_vod_gbs:
        $ref: '#/definitions/google.type.Decimal'
  analytics.v1.DashboardResellerUsageSummaryLiveHour:
    type: object
    properties:
      live_base_hours:
        $ref: '#/definitions/google.type.Decimal'
        description: deprecated. use live_total_hours instead.
      live_resolution_4k_hours:
        $ref: '#/definitions/google.type.Decimal'
      live_ull_hours:
        $ref: '#/definitions/google.type.Decimal'
      live_total_hours:
        $ref: '#/definitions/google.type.Decimal'
  analytics.v1.DashboardResellerUsageSummaryOverall:
    type: object
    properties:
      total_gbs:
        $ref: '#/definitions/google.type.Decimal'
      usage_time_chart:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.TimeChartPoint'
  analytics.v1.EventReport:
    type: object
    properties:
      id:
        type: string
        description: Required. The uuid of the report.
      dimension:
        $ref: '#/definitions/analytics.v1.ReportDimension'
        description: Required. The dimension of the report.
      status:
        $ref: '#/definitions/analytics.v1.EventReportStatus'
        description: Output only. The current status of the report.
        readOnly: true
      uri:
        type: string
        description: Output only. The download URI of the report.
        readOnly: true
      error_info:
        $ref: '#/definitions/google.rpc.ErrorInfo'
        description: Output only. The information will be shown if the report is facing an unexpected error.
        readOnly: true
    required:
      - id
      - dimension
  analytics.v1.EventReportStatus:
    type: string
    enum:
      - EVENT_REPORT_STATUS_UNSPECIFIED
      - EVENT_REPORT_STATUS_RUNNING
      - EVENT_REPORT_STATUS_SUCCEEDED
      - EVENT_REPORT_STATUS_FAILED
    default: EVENT_REPORT_STATUS_UNSPECIFIED
    description: Output only.
    readOnly: true
  analytics.v1.EventType:
    type: string
    enum:
      - EVENT_TYPE_UNSPECIFIED
      - EVENT_TYPE_LIVE
      - EVENT_TYPE_VOD
    default: EVENT_TYPE_UNSPECIFIED
  analytics.v1.FetchCDNUsageReportResponse:
    type: object
    properties:
      url:
        type: string
        readOnly: true
  analytics.v1.FetchWatchTimeReportResponse:
    type: object
    properties:
      url:
        type: string
        readOnly: true
  analytics.v1.GetAnalyticsDefaultUsageChartsResponse:
    type: object
    properties:
      charts:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.AnalyticsDefaultChart'
      last_update_time:
        type: string
        format: date-time
        readOnly: true
  analytics.v1.GetAnalyticsLivesDetailResponse:
    type: object
    properties:
      live:
        $ref: '#/definitions/analytics.v1.LiveItemDetail'
        readOnly: true
  analytics.v1.GetAnalyticsPerformanceByBreakdownDimensionTimeChartsResponse:
    type: object
    properties:
      charts:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.AnalyticsByKeyChart'
      last_update_time:
        type: string
        format: date-time
        readOnly: true
  analytics.v1.GetAnalyticsPerformanceByOrgTimeChartsResponse:
    type: object
    properties:
      by_org_charts:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.AnalyticsByOrgChart'
      last_update_time:
        type: string
        format: date-time
        readOnly: true
  analytics.v1.GetAnalyticsPerformancePieChartsResponse:
    type: object
    properties:
      streaming_type_pie_chart:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.PieChartItem'
      device_pie_chart:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.PieChartItem'
      region_pie_chart:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.PieChartItem'
      last_update_time:
        type: string
        format: date-time
        readOnly: true
  analytics.v1.GetAnalyticsPerformanceSummaryResponse:
    type: object
    properties:
      views:
        $ref: '#/definitions/google.type.Decimal'
      unique_viewers:
        $ref: '#/definitions/google.type.Decimal'
      avg_viewer_views:
        $ref: '#/definitions/google.type.Decimal'
      watch_time_hours:
        $ref: '#/definitions/google.type.Decimal'
      avg_watch_time_hours:
        $ref: '#/definitions/google.type.Decimal'
      last_update_time:
        type: string
        format: date-time
        readOnly: true
  analytics.v1.GetAnalyticsResellerByOrgUsageChartsResponse:
    type: object
    properties:
      by_org_charts:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.AnalyticsByOrgChart'
      last_update_time:
        type: string
        format: date-time
        readOnly: true
  analytics.v1.GetAnalyticsUsageSummaryResponse:
    type: object
    properties:
      cdn_gbs:
        $ref: '#/definitions/google.type.Decimal'
      storage_gbs:
        $ref: '#/definitions/google.type.Decimal'
      encoding_gbs:
        $ref: '#/definitions/google.type.Decimal'
      live_duration_hours:
        $ref: '#/definitions/google.type.Decimal'
      drm_times:
        $ref: '#/definitions/google.type.Decimal'
      last_update_time:
        type: string
        format: date-time
        readOnly: true
  analytics.v1.GetAnalyticsVODsDetailResponse:
    type: object
    properties:
      vod:
        $ref: '#/definitions/analytics.v1.VODItemDetail'
        readOnly: true
  analytics.v1.GetDashboardBusinessAssetsStatisticsResponse:
    type: object
    properties:
      assets_statistics:
        $ref: '#/definitions/analytics.v1.DashboardBusinessAssetsStatistics'
      last_update_time:
        type: string
        format: date-time
        readOnly: true
  analytics.v1.GetDashboardBusinessUsageSummaryResponse:
    type: object
    properties:
      usage_summary:
        $ref: '#/definitions/analytics.v1.DashboardBusinessUsageSummary'
      last_update_time:
        type: string
        format: date-time
        readOnly: true
  analytics.v1.GetDashboardOngoingItemsResponse:
    type: object
    properties:
      ongoing_live:
        $ref: '#/definitions/analytics.v1.OngoingLive'
      ongoing_encoding:
        $ref: '#/definitions/analytics.v1.OngoingEncoding'
      last_update_time:
        type: string
        format: date-time
        readOnly: true
  analytics.v1.GetDashboardResellerAccountSummaryResponse:
    type: object
    properties:
      account_summary:
        $ref: '#/definitions/analytics.v1.DashboardResellerAccountSummary'
  analytics.v1.GetDashboardResellerTopUsageConsumptionResponse:
    type: object
    properties:
      top_usage_consumption:
        $ref: '#/definitions/analytics.v1.DashboardResellerTopUsageConsumption'
  analytics.v1.GetDashboardResellerUsageSummaryResponse:
    type: object
    properties:
      usage_summary:
        $ref: '#/definitions/analytics.v1.DashboardResellerUsageSummary'
      last_update_time:
        type: string
        format: date-time
        readOnly: true
  analytics.v1.ListAnalyticsLivesResponse:
    type: object
    properties:
      lives:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.LiveItem'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  analytics.v1.ListAnalyticsVODsResponse:
    type: object
    properties:
      vods:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.VODItem'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  analytics.v1.LiveDailyCDNUsage:
    type: object
    properties:
      live_event_id:
        type: string
      org_id:
        type: string
      date:
        type: string
        format: date-time
      usage:
        type: string
        format: int64
      live_event_name:
        type: string
        readOnly: true
      live_event_created_at:
        type: string
        format: date-time
        readOnly: true
  analytics.v1.LiveItem:
    type: object
    properties:
      id:
        type: string
        readOnly: true
      name:
        type: string
        readOnly: true
      duration_secs:
        $ref: '#/definitions/google.type.Decimal'
        readOnly: true
      max_concurrent_viewers:
        $ref: '#/definitions/google.type.Decimal'
        readOnly: true
      views:
        $ref: '#/definitions/google.type.Decimal'
        readOnly: true
      watch_time_hours:
        $ref: '#/definitions/google.type.Decimal'
        readOnly: true
      created_at:
        type: string
        format: date-time
        readOnly: true
      updated_at:
        type: string
        format: date-time
        readOnly: true
      download_url:
        type: string
        description: Deprecated.
        readOnly: true
      available_reports:
        type: array
        items:
          $ref: '#/definitions/analytics.v1.ReportDimension'
        readOnly: true
  analytics.v1.LiveItemDetail:
    type: object
    properties:
      id:
        type: string
        readOnly: true
      name:
        type: string
        readOnly: true
      type:
        $ref: '#/definitions/cms.v1.LiveType'
        readOnly: true
      broadcast_mode:
        $ref: '#/definitions/cms.v1.BroadcastMode'
        readOnly: true
      duration_secs:
        $ref: '#/definitions/google.type.Decimal'
        readOnly: true
      live_start_time:
        type: string
        format: date-time
        readOnly: true
      live_end_time:
        type: string
        format: date-time
        readOnly: true
      live2vod_start_time:
        type: string
        format: date-time
        readOnly: true
      live2vod_end_time:
        type: string
        format: date-time
        readOnly: true
      live_views:
        $ref: '#/definitions/google.type.Decimal'
        readOnly: true
      live2vod_views:
        $ref: '#/definitions/google.type.Decimal'
        readOnly: true
      live_watch_time_hours:
        $ref: '#/definitions/google.type.Decimal'
        readOnly: true
      live2vod_watch_time_hours:
        $ref: '#/definitions/google.type.Decimal'
        readOnly: true
  analytics.v1.OngoingEncoding:
    type: object
    properties:
      standard_queue_count:
        type: integer
        format: int32
      faster_queue_count:
        type: integer
        format: int32
  analytics.v1.OngoingLive:
    type: object
    properties:
      idle_count:
        type: integer
        format: int32
      active_count:
        type: integer
        format: int32
  analytics.v1.PerformanceTimeChartBreakdownDimension:
    type: string
    enum:
      - PERFORMANCE_TIME_CHART_BREAKDOWN_DIMENSION_UNSPECIFIED
      - PERFORMANCE_TIME_CHART_BREAKDOWN_DIMENSION_STREAMING_TYPE
      - PERFORMANCE_TIME_CHART_BREAKDOWN_DIMENSION_DEVICE
      - PERFORMANCE_TIME_CHART_BREAKDOWN_DIMENSION_GEOGRAPHY
    default: PERFORMANCE_TIME_CHART_BREAKDOWN_DIMENSION_UNSPECIFIED
  analytics.v1.PerformanceType:
    type: string
    enum:
      - PERFORMANCE_TYPE_UNSPECIFIED
      - PERFORMANCE_TYPE_VIEWS
      - PERFORMANCE_TYPE_UNIQUE_VIEWERS
      - PERFORMANCE_TYPE_AVG_VIEWER_VIEWS
      - PERFORMANCE_TYPE_WATCH_TIME
      - PERFORMANCE_TYPE_AVG_WATCH_TIME
    default: PERFORMANCE_TYPE_UNSPECIFIED
  analytics.v1.PieChartDimensionType:
    type: string
    enum:
      - PIE_CHART_DIMENSION_TYPE_UNSPECIFIED
      - PIE_CHART_DIMENSION_TYPE_VIEWS
      - PIE_CHART_DIMENSION_TYPE_WATCH_TIME
    default: PIE_CHART_DIMENSION_TYPE_UNSPECIFIED
  analytics.v1.PieChartItem:
    type: object
    properties:
      key:
        type: string
      value:
        $ref: '#/definitions/google.type.Decimal'
  analytics.v1.ReportDimension:
    type: string
    enum:
      - REPORT_DIMENSION_UNSPECIFIED
      - REPORT_DIMENSION_CHAT_HISTORIES
      - REPORT_DIMENSION_POLL_SUMMARIES
      - REPORT_DIMENSION_POLL_VOTES
    default: REPORT_DIMENSION_UNSPECIFIED
  analytics.v1.ReportStreamingType:
    type: string
    enum:
      - REPORT_STREAMING_TYPE_UNSPECIFIED
      - REPORT_STREAMING_TYPE_LIVE
      - REPORT_STREAMING_TYPE_VOD
    default: REPORT_STREAMING_TYPE_UNSPECIFIED
  analytics.v1.SearchLiveCDNUsagesResponse:
    type: object
    properties:
      live_daily_cdn_usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/analytics.v1.LiveDailyCDNUsage'
  analytics.v1.TimeChartPoint:
    type: object
    properties:
      time:
        type: string
        format: date-time
      value:
        $ref: '#/definitions/google.type.Decimal'
  analytics.v1.TimeGranularity:
    type: string
    enum:
      - TIME_GRANULARITY_UNSPECIFIED
      - TIME_GRANULARITY_HOUR
      - TIME_GRANULARITY_DAY
      - TIME_GRANULARITY_MONTH
      - TIME_GRANULARITY_YEAR
    default: TIME_GRANULARITY_UNSPECIFIED
  analytics.v1.TriggerCDNUsageReportResponse:
    type: object
  analytics.v1.TriggerGetLiveDailyCDNUsageResponse:
    type: object
  analytics.v1.TriggerWatchTimeReportResponse:
    type: object
  analytics.v1.UsageType:
    type: string
    enum:
      - USAGE_TYPE_UNSPECIFIED
      - USAGE_TYPE_CDN
      - USAGE_TYPE_STORAGE
      - USAGE_TYPE_ENCODING
      - USAGE_TYPE_LIVE_DURATION
      - USAGE_TYPE_DRM
    default: USAGE_TYPE_UNSPECIFIED
  analytics.v1.UserDeviceType:
    type: string
    enum:
      - USER_DEVICE_TYPE_UNSPECIFIED
      - USER_DEVICE_TYPE_DESKTOP
      - USER_DEVICE_TYPE_MOBILE_IOS
      - USER_DEVICE_TYPE_MOBILE_ANDROID
      - USER_DEVICE_TYPE_TABLET_IOS
      - USER_DEVICE_TYPE_TABLET_ANDROID
      - USER_DEVICE_TYPE_OTHERS
    default: USER_DEVICE_TYPE_UNSPECIFIED
  analytics.v1.VODItem:
    type: object
    properties:
      id:
        type: string
        readOnly: true
      title:
        type: string
        readOnly: true
      duration_secs:
        $ref: '#/definitions/google.type.Decimal'
        readOnly: true
      created_at:
        type: string
        format: date-time
        readOnly: true
      updated_at:
        type: string
        format: date-time
        readOnly: true
      views:
        $ref: '#/definitions/google.type.Decimal'
        readOnly: true
      cover_image:
        $ref: '#/definitions/type.bv.v1.CoverImage'
        readOnly: true
      watch_time_hours:
        $ref: '#/definitions/google.type.Decimal'
        readOnly: true
  analytics.v1.VODItemDetail:
    type: object
    properties:
      id:
        type: string
        readOnly: true
      title:
        type: string
        readOnly: true
      duration_secs:
        $ref: '#/definitions/google.type.Decimal'
        readOnly: true
      created_at:
        type: string
        format: date-time
        readOnly: true
      updated_at:
        type: string
        format: date-time
        readOnly: true
      views:
        $ref: '#/definitions/google.type.Decimal'
        readOnly: true
      watch_time_hours:
        $ref: '#/definitions/google.type.Decimal'
        readOnly: true
  auth.v2.AccessRole:
    type: string
    enum:
      - ACCESS_ROLE_UNSPECIFIED
      - ACCESS_ROLE_ADMIN
      - ACCESS_ROLE_VIEWER
      - ACCESS_ROLE_EVENT_ADMIN
      - ACCESS_ROLE_EVENT_VIEWER
      - ACCESS_ROLE_PAYMENT_ADMIN
      - ACCESS_ROLE_PAYMENT_VIEWER
      - ACCESS_ROLE_KEY_ADMIN
      - ACCESS_ROLE_KEY_VIEWER
      - ACCESS_ROLE_VIDEO_ADMIN
      - ACCESS_ROLE_VIDEO_VIEWER
      - ACCESS_ROLE_USAGE_ADMIN
      - ACCESS_ROLE_USAGE_VIEWER
      - ACCESS_ROLE_CHAT_ADMIN
      - ACCESS_ROLE_CHAT_VIEWER
    default: ACCESS_ROLE_UNSPECIFIED
  auth.v2.CreateAccessTokenRequest:
    type: object
    properties:
      tenant_id:
        type: string
        description: Required.
      roles:
        type: array
        items:
          $ref: '#/definitions/auth.v2.AccessRole'
        description: Required.
    required:
      - tenant_id
      - roles
  auth.v2.CreateAccessTokenResponse:
    type: object
    properties:
      token:
        type: string
  auth.v2.CreateServiceTokenResponse:
    type: object
    properties:
      token:
        type: string
  auth.v2.ServiceRole:
    type: string
    enum:
      - SERVICE_ROLE_UNSPECIFIED
      - SERVICE_ROLE_PLATFORM_ADMIN
      - SERVICE_ROLE_PLATFORM_SERVICE
      - SERVICE_ROLE_PLATFORM_SPEKE
      - SERVICE_ROLE_PLATFORM_STREAM_METRICS
      - SERVICE_ROLE_TENANT_GROUP_ADMIN
    default: SERVICE_ROLE_UNSPECIFIED
  billing.v1.AsyncWriteBillingHistoryResponse:
    type: object
  billing.v1.Billing:
    type: object
    properties:
      id:
        type: string
      org_id:
        type: string
      org_name:
        type: string
      org_type:
        $ref: '#/definitions/type.bv.v1.OrganizationType'
      parent_org_name:
        type: string
      parent_org_type:
        $ref: '#/definitions/type.bv.v1.OrganizationType'
      org_time_zone:
        type: string
      currency_code:
        type: string
      total_price:
        $ref: '#/definitions/google.type.Decimal'
      subscription_price:
        $ref: '#/definitions/google.type.Decimal'
      overage_price:
        $ref: '#/definitions/google.type.Decimal'
      additional_price:
        $ref: '#/definitions/google.type.Decimal'
      start_time:
        type: string
        format: date-time
      end_time:
        type: string
        format: date-time
      plans:
        type: array
        items:
          type: object
          $ref: '#/definitions/billing.v1.BillingPlan'
      storage:
        $ref: '#/definitions/billing.v1.UsagePriceInfo'
      encoding:
        $ref: '#/definitions/billing.v1.UsagePriceInfo'
      live:
        $ref: '#/definitions/billing.v1.UsagePriceInfo'
      drm:
        $ref: '#/definitions/billing.v1.UsagePriceInfo'
      cdn:
        $ref: '#/definitions/billing.v1.UsagePriceInfo'
      premium_support_price:
        $ref: '#/definitions/billing.v1.UsagePriceInfo'
      live_support_price:
        $ref: '#/definitions/billing.v1.UsagePriceInfo'
      video_library_usage_info:
        $ref: '#/definitions/billing.v1.UsageInfo'
      history_vod_usage_info:
        $ref: '#/definitions/billing.v1.UsageInfo'
      encoding_base_usage_info:
        $ref: '#/definitions/billing.v1.UsageInfo'
      encoding_pte_usage_info:
        $ref: '#/definitions/billing.v1.UsageInfo'
      encoding_faster_usage_info:
        $ref: '#/definitions/billing.v1.UsageInfo'
      encoding_h265_usage_info:
        $ref: '#/definitions/billing.v1.UsageInfo'
      encoding_live_to_vod_usage_info:
        $ref: '#/definitions/billing.v1.UsageInfo'
      cdn_base_usage_info:
        $ref: '#/definitions/billing.v1.UsageInfo'
      cdn_others_usage_info:
        $ref: '#/definitions/billing.v1.UsageInfo'
      live_base_usage_info:
        $ref: '#/definitions/billing.v1.UsageInfo'
      live_4k_usage_info:
        $ref: '#/definitions/billing.v1.UsageInfo'
      live_ull_usage_info:
        $ref: '#/definitions/billing.v1.UsageInfo'
      live_support_histories:
        type: array
        items:
          type: object
          $ref: '#/definitions/billing.v1.LiveSupportHistory'
      drm_usage_info:
        $ref: '#/definitions/billing.v1.UsageInfo'
      update_time:
        type: string
        format: date-time
  billing.v1.BillingPlan:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      count:
        type: string
        format: int64
      price:
        $ref: '#/definitions/google.type.Decimal'
      unit_price:
        $ref: '#/definitions/google.type.Decimal'
  billing.v1.CSVReportStatus:
    type: string
    enum:
      - CSV_REPORT_STATUS_UNSPECIFIED
      - CSV_REPORT_STATUS_RUNNING
      - CSV_REPORT_STATUS_SUCCEEDED
    default: CSV_REPORT_STATUS_UNSPECIFIED
  billing.v1.CreateCSVReportRequest:
    type: object
    properties:
      billing_id:
        type: string
  billing.v1.CreateCSVReportResponse:
    type: object
    properties:
      id:
        type: string
  billing.v1.FetchCSVReportResponse:
    type: object
    properties:
      id:
        type: string
      uri:
        type: string
      status:
        $ref: '#/definitions/billing.v1.CSVReportStatus'
        description: If the status is CSV_REPORT_STATUS_RUNNING, the report is creating.
  billing.v1.GetBillingReceivableResponse:
    type: object
    properties:
      billing_receivable_price:
        $ref: '#/definitions/google.type.Decimal'
      start_time:
        type: string
        format: date-time
      end_time:
        type: string
        format: date-time
  billing.v1.GetBillingResponse:
    type: object
    properties:
      billing:
        $ref: '#/definitions/billing.v1.Billing'
  billing.v1.ListBillingsResponse:
    type: object
    properties:
      billings:
        type: array
        items:
          type: object
          $ref: '#/definitions/billing.v1.Billing'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  billing.v1.ListSubOrgBillingsResponse:
    type: object
    properties:
      billings:
        type: array
        items:
          type: object
          $ref: '#/definitions/billing.v1.Billing'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  billing.v1.LiveSupportHistory:
    type: object
    properties:
      start_time:
        type: string
        format: date-time
      end_time:
        type: string
        format: date-time
      hour_count:
        $ref: '#/definitions/google.type.Decimal'
      unit_price:
        $ref: '#/definitions/google.type.Decimal'
      price:
        $ref: '#/definitions/google.type.Decimal'
  billing.v1.UsageInfo:
    type: object
    properties:
      real_usage:
        $ref: '#/definitions/google.type.Decimal'
      rate:
        $ref: '#/definitions/google.type.Decimal'
      usage:
        $ref: '#/definitions/google.type.Decimal'
  billing.v1.UsagePriceInfo:
    type: object
    properties:
      usage:
        $ref: '#/definitions/google.type.Decimal'
      price:
        $ref: '#/definitions/google.type.Decimal'
      quota:
        $ref: '#/definitions/google.type.Decimal'
      overage_usage:
        $ref: '#/definitions/google.type.Decimal'
      unit_price:
        $ref: '#/definitions/google.type.Decimal'
  billing.v1.WriteBillingHistoryRequest:
    type: object
    properties:
      org_ids:
        type: array
        items:
          type: string
      process_time:
        type: string
        format: date-time
      write_start_time:
        type: string
        format: date-time
  billing.v1.WriteBillingHistoryResponse:
    type: object
  channel.v1.AudioCodec:
    type: object
    properties:
      codec:
        type: string
      bitrate:
        type: integer
        format: int64
  channel.v1.CancelRecordingJobResponse:
    type: object
  channel.v1.CatchupRecord:
    type: object
    properties:
      title_id:
        type: string
      time:
        $ref: '#/definitions/channel.v1.TimeSlot'
  channel.v1.Channel:
    type: object
    properties:
      id:
        type: string
      config:
        $ref: '#/definitions/channel.v1.ChannelConfig'
      ingest_url:
        $ref: '#/definitions/channel.v1.IngestURL'
      output_url:
        $ref: '#/definitions/channel.v1.OutputURL'
      security:
        $ref: '#/definitions/channel.v1.Security'
      output_info:
        $ref: '#/definitions/channel.v1.OutputInfo'
        description: Output only. The information for channel use.
        readOnly: true
      resource_id:
        $ref: '#/definitions/channel.v1.ResourceID'
        description: Output only. The resource id of the channel.
        readOnly: true
  channel.v1.ChannelConfig:
    type: object
    properties:
      profiles:
        type: array
        items:
          type: object
          $ref: '#/definitions/channel.v1.Profile'
      drm_enable:
        type: boolean
      content_id:
        type: string
      backup_stream:
        type: boolean
      input_type:
        $ref: '#/definitions/channel.v1.InputType'
      input_s3_url:
        $ref: '#/definitions/channel.v1.InputS3URL'
      start_time:
        type: string
        format: date-time
      latency:
        $ref: '#/definitions/channel.v1.LatencyType'
        description: Required. Immutable. Determines what kind of channel to create.
    required:
      - latency
  channel.v1.ChannelInput:
    type: string
    enum:
      - CHANNEL_INPUT_UNSPECIFIED
      - CHANNEL_INPUT_MAIN
      - CHANNEL_INPUT_TEASER
    default: CHANNEL_INPUT_UNSPECIFIED
  channel.v1.ChannelStatus:
    type: string
    enum:
      - CHANNEL_STATUS_UNSPECIFIED
      - CHANNEL_STATUS_CREATING
      - CHANNEL_STATUS_MODIFYING
      - CHANNEL_STATUS_DELETING
      - CHANNEL_STATUS_DELETED
      - CHANNEL_STATUS_STARTING
      - CHANNEL_STATUS_RUNNING
      - CHANNEL_STATUS_STOPPING
      - CHANNEL_STATUS_IDLE
      - CHANNEL_STATUS_CREATE_ERROR
      - CHANNEL_STATUS_DELETE_ERROR
      - CHANNEL_STATUS_START_ERROR
      - CHANNEL_STATUS_STOP_ERROR
      - CHANNEL_STATUS_MODIFY_ERROR
    default: CHANNEL_STATUS_UNSPECIFIED
  channel.v1.ChannelUsage:
    type: object
    properties:
      tenant_id:
        type: string
      life_time:
        $ref: '#/definitions/channel.v1.TimeSlot'
      running_time_slots:
        type: array
        items:
          type: object
          $ref: '#/definitions/channel.v1.TimeSlot'
      catchups:
        type: array
        items:
          type: object
          $ref: '#/definitions/channel.v1.CatchupRecord'
    required:
      - tenant_id
  channel.v1.CheckVideoRequest:
    type: object
    properties:
      s3_uri:
        type: string
  channel.v1.CheckVideoResponse:
    type: object
    properties:
      duration:
        type: string
  channel.v1.CreateRecordingRequest:
    type: object
    properties:
      channel_id:
        type: string
      config:
        $ref: '#/definitions/channel.v1.RecordingConfig'
  channel.v1.CreateRecordingResponse:
    type: object
    properties:
      recording:
        $ref: '#/definitions/channel.v1.Recording'
  channel.v1.CreateRequest:
    type: object
    properties:
      config:
        $ref: '#/definitions/channel.v1.ChannelConfig'
  channel.v1.CreateResponse:
    type: object
    properties:
      channel:
        $ref: '#/definitions/channel.v1.Channel'
  channel.v1.DeleteResponse:
    type: object
    properties:
      channel_status:
        $ref: '#/definitions/channel.v1.ChannelStatus'
  channel.v1.GetChannelUsageRequest:
    type: object
    properties:
      id:
        type: string
      time_range:
        $ref: '#/definitions/channel.v1.TimeSlot'
    required:
      - id
      - time_range
  channel.v1.GetChannelUsageResponse:
    type: object
    properties:
      id:
        type: string
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/channel.v1.ChannelUsage'
    required:
      - id
  channel.v1.GetRecordingResponse:
    type: object
    properties:
      recording:
        $ref: '#/definitions/channel.v1.Recording'
  channel.v1.GetResponse:
    type: object
    properties:
      channel:
        $ref: '#/definitions/channel.v1.Channel'
  channel.v1.GetStatusResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/channel.v1.ChannelStatus'
      error_detail:
        type: string
  channel.v1.IngestURL:
    type: object
    properties:
      main:
        type: string
      backup:
        type: string
  channel.v1.InputS3URL:
    type: object
    properties:
      teaser:
        type: string
      main:
        type: string
  channel.v1.InputType:
    type: string
    enum:
      - INPUT_TYPE_UNSPECIFIED
      - INPUT_TYPE_RTMP_PUSH
      - INPUT_TYPE_MP4_FILE
      - INPUT_TYPE_WHIP
      - INPUT_TYPE_WEBRTC
    default: INPUT_TYPE_UNSPECIFIED
    description: |2-
       - INPUT_TYPE_WHIP: WebRTC-HTTP Ingestion Protocol.
       - INPUT_TYPE_WEBRTC: WebRTC.
  channel.v1.LatencyType:
    type: string
    enum:
      - LATENCY_TYPE_UNSPECIFIED
      - LATENCY_TYPE_NORMAL
      - LATENCY_TYPE_LOW_LATENCY
      - LATENCY_TYPE_ULTRA_LOW_LATENCY
      - LATENCY_TYPE_REAL_TIME
      - LATENCY_TYPE_VIDEO_CONFERENCE
    default: LATENCY_TYPE_UNSPECIFIED
    description: |2-
       - LATENCY_TYPE_NORMAL: Latency is 15 ~ 30 seconds. Segment size is 4 seconds.
       - LATENCY_TYPE_LOW_LATENCY: Latency is 10 ~ 15 seconds. Segment size is 2 seconds.
       - LATENCY_TYPE_ULTRA_LOW_LATENCY: Latency is less than ~ 3 seconds. Segment size is 4 seconds. Use D3 channel.
       - LATENCY_TYPE_REAL_TIME: Latency is less than 1 second. Use WebRTC channel.
       - LATENCY_TYPE_VIDEO_CONFERENCE: Video conference channel.
  channel.v1.ListResponse:
    type: object
    properties:
      ids:
        type: array
        items:
          type: string
  channel.v1.Mp4Detail:
    type: object
    properties:
      duration:
        type: integer
        format: int64
      file_size:
        type: integer
        format: int64
      height:
        type: integer
        format: int64
      width:
        type: integer
        format: int64
  channel.v1.OutputInfo:
    type: object
    properties:
      conference_id:
        type: string
        description: Output only. The id of the conference.
        readOnly: true
      conference_alias:
        type: string
        description: Output only. The alias of the conference.
        readOnly: true
      client_access_token:
        type: string
        description: Output only. The client access token for the conference.
        readOnly: true
  channel.v1.OutputItem:
    type: object
    properties:
      all:
        type: string
      start_over:
        type: string
      main:
        type: string
      backup:
        type: string
  channel.v1.OutputPath:
    type: object
    properties:
      hls:
        $ref: '#/definitions/channel.v1.OutputItem'
      dash:
        $ref: '#/definitions/channel.v1.OutputItem'
      thumbnail:
        $ref: '#/definitions/channel.v1.ThumbnailItem'
      mp4:
        $ref: '#/definitions/channel.v1.OutputItem'
  channel.v1.OutputURL:
    type: object
    properties:
      hls:
        $ref: '#/definitions/channel.v1.OutputItem'
      dash:
        $ref: '#/definitions/channel.v1.OutputItem'
      whep:
        $ref: '#/definitions/channel.v1.OutputItem'
  channel.v1.Profile:
    type: object
    properties:
      video_codec:
        $ref: '#/definitions/channel.v1.VideoCodec'
      audio_codec:
        $ref: '#/definitions/channel.v1.AudioCodec'
  channel.v1.Recording:
    type: object
    properties:
      id:
        type: string
      channel_id:
        type: string
      config:
        $ref: '#/definitions/channel.v1.RecordingConfig'
      output_path:
        $ref: '#/definitions/channel.v1.OutputPath'
      status:
        $ref: '#/definitions/channel.v1.RecordingStatus'
      error_detail:
        type: string
      mp4_detail:
        $ref: '#/definitions/channel.v1.Mp4Detail'
  channel.v1.RecordingConfig:
    type: object
    properties:
      capture_start_time:
        type: string
        format: date-time
      capture_end_time:
        type: string
        format: date-time
      frame_accurate_enable:
        type: boolean
      thumbnail_enable:
        type: boolean
      formats:
        type: array
        items:
          $ref: '#/definitions/stream.v1.Format'
  channel.v1.RecordingStatus:
    type: string
    enum:
      - RECORDING_STATUS_UNSPECIFIED
      - RECORDING_STATUS_SCHEDULING
      - RECORDING_STATUS_SCHEDULED
      - RECORDING_STATUS_CAPTURING
      - RECORDING_STATUS_DONE
      - RECORDING_STATUS_SCHEDULE_ERROR
      - RECORDING_STATUS_CAPTURE_ERROR
    default: RECORDING_STATUS_UNSPECIFIED
  channel.v1.ResourceID:
    type: object
    properties:
      medialive_channel_id:
        type: string
        description: Output only. The AWS MediaLive ID of the channel. Empty if it is not the MediaLive channel.
        readOnly: true
      d3_channel_id:
        type: string
        description: Output only. The D3 ID of the channel. Empty if it is not the D3 channel.
        readOnly: true
  channel.v1.Security:
    type: object
    properties:
      stream_key:
        type: string
      token:
        type: string
  channel.v1.StartResponse:
    type: object
    properties:
      channel_status:
        $ref: '#/definitions/channel.v1.ChannelStatus'
  channel.v1.StopResponse:
    type: object
    properties:
      channel_status:
        $ref: '#/definitions/channel.v1.ChannelStatus'
  channel.v1.SwitchInputResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/channel.v1.ChannelStatus'
      input:
        $ref: '#/definitions/channel.v1.ChannelInput'
  channel.v1.ThumbnailItem:
    type: object
    properties:
      default:
        type: string
  channel.v1.TimeSlot:
    type: object
    properties:
      start:
        type: string
        format: date-time
      end:
        type: string
        format: date-time
  channel.v1.UpdateResponse:
    type: object
    properties:
      channel:
        $ref: '#/definitions/channel.v1.Channel'
  channel.v1.VideoCodec:
    type: object
    properties:
      codec:
        type: string
      height:
        type: integer
        format: int64
      width:
        type: integer
        format: int64
      bitrate:
        type: integer
        format: int64
  chat.v1.BatchCreateDictionaryPatternsResponse:
    type: object
    properties:
      patterns:
        type: array
        items:
          type: object
          $ref: '#/definitions/chat.v1.Pattern'
  chat.v1.BatchProcessChatMessagesResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/chat.v1.BatchProcessChatMessagesResponse.Result'
  chat.v1.BatchProcessChatMessagesResponse.Result:
    type: object
    properties:
      message:
        $ref: '#/definitions/chat.v1.InteractionMessage'
      processed:
        type: boolean
      filtered:
        type: boolean
  chat.v1.BatchUpdateChatDictionariesResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/chat.v1.BatchUpdateChatDictionariesResponse.Result'
        description: The list of the batch update results.
  chat.v1.BatchUpdateChatDictionariesResponse.Result:
    type: object
    properties:
      dictionary:
        $ref: '#/definitions/chat.v1.Dictionary'
      enabled:
        type: boolean
  chat.v1.BlockChatUserResponse:
    type: object
  chat.v1.BlockUser:
    type: object
    properties:
      id:
        type: string
        description: Required. The uuid of the blocked user.
      device_id:
        type: string
        description: Required. The device id of the blocked user.
      custom_name:
        type: string
        description: Required. The custom name of the blocked user.
      blocked:
        type: boolean
        description: Output only. Indicates whether or not the user was blocked.
        readOnly: true
      action_taker:
        $ref: '#/definitions/chat.v1.ChatUser'
        description: Required. The user who blocked the user.
    required:
      - id
      - device_id
      - custom_name
      - action_taker
  chat.v1.ChangeChatPollRequest.Action:
    type: string
    enum:
      - ACTION_UNSPECIFIED
      - ACTION_START
      - ACTION_CLOSE
      - ACTION_ARCHIVE
    default: ACTION_UNSPECIFIED
  chat.v1.ChangeChatPollResponse:
    type: object
  chat.v1.ChangeChatStatusRequest.Action:
    type: string
    enum:
      - ACTION_UNSPECIFIED
      - ACTION_ACTIVE
      - ACTION_INACTIVE
    default: ACTION_UNSPECIFIED
  chat.v1.ChangeChatStatusResponse:
    type: object
  chat.v1.Chat:
    type: object
    properties:
      id:
        type: string
        description: Output only.
        readOnly: true
      muted:
        type: boolean
        description: Output only. Indicates the chat whether or not in muted.
        readOnly: true
      status:
        $ref: '#/definitions/chat.v1.ChatStatus'
        description: Output only. Indicates the chat status.
        readOnly: true
      blocked_users:
        type: array
        items:
          type: object
          $ref: '#/definitions/chat.v1.BlockUser'
        description: Output only. Indicates the blocked users of the chat.
        readOnly: true
      pinned_messages:
        type: array
        items:
          type: object
          $ref: '#/definitions/chat.v1.PinMessage'
        description: Output only.
        readOnly: true
      active_poll:
        $ref: '#/definitions/chat.v1.Poll'
        description: Output only.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
  chat.v1.ChatStatus:
    type: string
    enum:
      - CHAT_STATUS_UNSPECIFIED
      - CHAT_STATUS_ACTIVE
      - CHAT_STATUS_INACTIVE
    default: CHAT_STATUS_UNSPECIFIED
    description: Output only.
    readOnly: true
  chat.v1.ChatUser:
    type: object
    properties:
      id:
        type: string
        description: Output only. The id of the user.
        readOnly: true
      device_id:
        type: string
        description: Output only. The device id of the user.
        readOnly: true
      custom_name:
        type: string
        description: Required. The custom name of the user.
      is_admin:
        type: boolean
        description: Output only. Indicates the user whether or not is an admin.
        readOnly: true
      blocked:
        type: boolean
        description: Output only.
        readOnly: true
    required:
      - custom_name
  chat.v1.CreateChatPollResponse:
    type: object
    properties:
      poll:
        $ref: '#/definitions/chat.v1.Poll'
  chat.v1.CreateChatReportResponse:
    type: object
    properties:
      id:
        type: string
  chat.v1.CreateChatRequest:
    type: object
  chat.v1.CreateChatResponse:
    type: object
    properties:
      chat:
        $ref: '#/definitions/chat.v1.Chat'
  chat.v1.CreateChatTokenResponse:
    type: object
    properties:
      endpoint:
        type: string
      authorizer:
        type: string
      token:
        type: string
      signature:
        type: string
      topic:
        $ref: '#/definitions/chat.v1.CreateChatTokenResponse.Topic'
  chat.v1.CreateChatTokenResponse.Topic:
    type: object
    properties:
      pub:
        type: string
      sub:
        type: string
  chat.v1.CreateDictionaryPatternResponse:
    type: object
    properties:
      pattern:
        $ref: '#/definitions/chat.v1.Pattern'
  chat.v1.CreateDictionaryRequest:
    type: object
    properties:
      name:
        type: string
        description: Required.
      description:
        type: string
        description: Optional.
    required:
      - name
  chat.v1.CreateDictionaryResponse:
    type: object
    properties:
      dictionary:
        $ref: '#/definitions/chat.v1.Dictionary'
  chat.v1.DeleteChatMessageResponse:
    type: object
  chat.v1.DeleteChatPollResponse:
    type: object
  chat.v1.DeleteDictionaryResponse:
    type: object
  chat.v1.DeleteMessage:
    type: object
    properties:
      id:
        type: string
  chat.v1.DeletePatternResponse:
    type: object
  chat.v1.Dictionary:
    type: object
    properties:
      id:
        type: string
        description: Output only.
        readOnly: true
      name:
        type: string
        description: Output only.
        readOnly: true
      description:
        type: string
        description: Output only.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
  chat.v1.DisableChatDictionaryResponse:
    type: object
  chat.v1.EnableChatDictionaryResponse:
    type: object
  chat.v1.GetChatPollResponse:
    type: object
    properties:
      poll:
        $ref: '#/definitions/chat.v1.Poll'
  chat.v1.GetChatReportResponse:
    type: object
    properties:
      id:
        type: string
      uri:
        type: string
      status:
        $ref: '#/definitions/chat.v1.ReportStatus'
  chat.v1.GetChatResponse:
    type: object
    properties:
      chat:
        $ref: '#/definitions/chat.v1.Chat'
  chat.v1.GetDictionaryResponse:
    type: object
    properties:
      dictionary:
        $ref: '#/definitions/chat.v1.Dictionary'
  chat.v1.InteractionMessage:
    type: object
    properties:
      id:
        type: string
        description: Optional. Immutable. The uuid of the message. It will generate an UUID string if not provided.
      user:
        $ref: '#/definitions/chat.v1.ChatUser'
        description: Required.
      type:
        $ref: '#/definitions/chat.v1.InteractionType'
        description: Required.
      text_message:
        $ref: '#/definitions/chat.v1.TextMessage'
        description: Optional. Required if `type` is `INTERACTION_TYPE_TEXT`.
      pin_unpin_message:
        $ref: '#/definitions/chat.v1.PinMessage'
        description: Optional. Required if `type` is `INTERACTION_TYPE_PIN_MESSAGE` or `INTERACTION_TYPE_UNPIN_MESSAGE`.
      block_unblock_user:
        $ref: '#/definitions/chat.v1.BlockUser'
        description: Optional. Required if `type` is `INTERACTION_TYPE_BLOCK_USER` or `INTERACTION_TYPE_UNBLOCK_USER`.
      delete_message:
        $ref: '#/definitions/chat.v1.DeleteMessage'
        description: Optional. Required if `type` is `INTERACTION_TYPE_DELETE_MESSAGE`.
      poll:
        $ref: '#/definitions/chat.v1.Poll'
        description: |-
          Optional. Required if `type` is `INTERACTION_TYPE_POLL_STARTED`, `INTERACTION_TYPE_POLL_CLOSED`,
          `INTERACTION_TYPE_POLL_ARCHIVED` or `INTERACTION_TYPE_POLL_UPDATE`.
      vote:
        $ref: '#/definitions/chat.v1.Vote'
        description: Optional. Required if `type` is `INTERACTION_TYPE_POLL_USER_VOTE`.
      created_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
    required:
      - user
      - type
  chat.v1.InteractionType:
    type: string
    enum:
      - INTERACTION_TYPE_UNSPECIFIED
      - INTERACTION_TYPE_TEXT
      - INTERACTION_TYPE_MUTE
      - INTERACTION_TYPE_UNMUTE
      - INTERACTION_TYPE_PIN_MESSAGE
      - INTERACTION_TYPE_UNPIN_MESSAGE
      - INTERACTION_TYPE_DELETE_MESSAGE
      - INTERACTION_TYPE_BLOCK_USER
      - INTERACTION_TYPE_UNBLOCK_USER
      - INTERACTION_TYPE_POLL_STARTED
      - INTERACTION_TYPE_POLL_CLOSED
      - INTERACTION_TYPE_POLL_ARCHIVED
      - INTERACTION_TYPE_POLL_UPDATE
      - INTERACTION_TYPE_POLL_USER_VOTE
    default: INTERACTION_TYPE_UNSPECIFIED
  chat.v1.ListChatDictionariesResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/chat.v1.ListChatDictionariesResponse.Result'
      next_page_token:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
          subsequent pages.
  chat.v1.ListChatDictionariesResponse.Result:
    type: object
    properties:
      dictionary:
        $ref: '#/definitions/chat.v1.Dictionary'
      enabled:
        type: boolean
  chat.v1.ListChatPollsResponse:
    type: object
    properties:
      polls:
        type: array
        items:
          type: object
          $ref: '#/definitions/chat.v1.Poll'
      next_page_token:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
          subsequent pages.
  chat.v1.ListDictionariesResponse:
    type: object
    properties:
      dictionaries:
        type: array
        items:
          type: object
          $ref: '#/definitions/chat.v1.Dictionary'
      next_page_token:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
          subsequent pages.
  chat.v1.ListDictionaryPatternsResponse:
    type: object
    properties:
      patterns:
        type: array
        items:
          type: object
          $ref: '#/definitions/chat.v1.Pattern'
      next_page_token:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
          subsequent pages.
  chat.v1.MultiChoiceOption:
    type: object
    properties:
      id:
        type: string
        description: Optional. Immutable. Required if in update operation, otherwise will be an output only field.
      text:
        type: string
        description: Required.
      corrected:
        type: boolean
        description: Required.
      votes_count:
        type: integer
        format: int32
        description: Output only.
        readOnly: true
    required:
      - text
      - corrected
  chat.v1.MultiChoicePoll:
    type: object
    properties:
      question:
        type: string
        description: Required.
      options:
        type: array
        items:
          type: object
          $ref: '#/definitions/chat.v1.MultiChoiceOption'
        description: Required.
    required:
      - question
      - options
  chat.v1.MuteChatResponse:
    type: object
  chat.v1.Pattern:
    type: object
    properties:
      id:
        type: string
        description: Output only.
        readOnly: true
      text:
        type: string
        description: Output only.
        readOnly: true
  chat.v1.PinChatMessageResponse:
    type: object
  chat.v1.PinMessage:
    type: object
    properties:
      message:
        $ref: '#/definitions/chat.v1.PinMessage.Message'
        description: Required.
      action_taker:
        $ref: '#/definitions/chat.v1.ChatUser'
        description: Required.
    required:
      - message
      - action_taker
  chat.v1.PinMessage.Message:
    type: object
    properties:
      id:
        type: string
        description: Required.
      text:
        type: string
        description: Required.
      sender:
        $ref: '#/definitions/chat.v1.PinMessage.Sender'
        description: Required.
    required:
      - id
      - text
      - sender
  chat.v1.PinMessage.Sender:
    type: object
    properties:
      id:
        type: string
        description: Required. The uuid of the user who sends the message.
      device_id:
        type: string
        description: Required. The device id of the user who sends the message.
      custom_name:
        type: string
        description: Required. The custom name of the user who sends the message.
    required:
      - id
      - device_id
      - custom_name
  chat.v1.Poll:
    type: object
    properties:
      id:
        type: string
        description: Optional. Immutable. Required if in update operation, otherwise will be an output only field.
      type:
        $ref: '#/definitions/chat.v1.PollType'
        description: Required.
      status:
        $ref: '#/definitions/chat.v1.PollStatus'
        description: Output only.
        readOnly: true
      votes_count:
        type: integer
        format: int32
        description: Output only.
        readOnly: true
      multi_choice:
        $ref: '#/definitions/chat.v1.MultiChoicePoll'
        description: Optional. Required if type is `POLL_TYPE_SINGLE_CHOICE` or `POLL_TYPE_MULTI_CHOICE`.
      started_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      ended_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
    required:
      - type
  chat.v1.PollStatus:
    type: string
    enum:
      - POLL_STATUS_UNSPECIFIED
      - POLL_STATUS_QUEUED
      - POLL_STATUS_ACTIVE
      - POLL_STATUS_CLOSED
      - POLL_STATUS_ARCHIVED
    default: POLL_STATUS_UNSPECIFIED
    description: Output only.
    readOnly: true
  chat.v1.PollType:
    type: string
    enum:
      - POLL_TYPE_UNSPECIFIED
      - POLL_TYPE_SINGLE_CHOICE
      - POLL_TYPE_MULTI_CHOICE
    default: POLL_TYPE_UNSPECIFIED
  chat.v1.PublishChatMessageResponse:
    type: object
    properties:
      message:
        $ref: '#/definitions/chat.v1.InteractionMessage'
  chat.v1.ReportStatus:
    type: string
    enum:
      - REPORT_STATUS_UNSPECIFIED
      - REPORT_STATUS_RUNNING
      - REPORT_STATUS_SUCCEEDED
      - REPORT_STATUS_FAILED
    default: REPORT_STATUS_UNSPECIFIED
    description: Output only.
    readOnly: true
  chat.v1.ReportType:
    type: string
    enum:
      - REPORT_TYPE_UNSPECIFIED
      - REPORT_TYPE_CHAT_HISTORIES
      - REPORT_TYPE_POLL_SUMMARIES
      - REPORT_TYPE_POLL_VOTES
    default: REPORT_TYPE_UNSPECIFIED
  chat.v1.TextMessage:
    type: object
    properties:
      text:
        type: string
        description: Required.
      filtered:
        type: boolean
        description: Output only.
        readOnly: true
      filter_hit_result:
        $ref: '#/definitions/chat.v1.TextMessage.FilterHitResult'
        description: Output only.
        readOnly: true
    required:
      - text
  chat.v1.TextMessage.FilterHitResult:
    type: object
    properties:
      pattern_id:
        type: string
        description: Output only.
        readOnly: true
      pattern_text:
        type: string
        description: Output only.
        readOnly: true
      dictionary_id:
        type: string
        description: Output only.
        readOnly: true
      dictionary_name:
        type: string
        description: Output only.
        readOnly: true
    description: Output only.
    readOnly: true
  chat.v1.TokenRole:
    type: string
    enum:
      - TOKEN_ROLE_UNSPECIFIED
      - TOKEN_ROLE_VIEWER
      - TOKEN_ROLE_ADMIN
    default: TOKEN_ROLE_UNSPECIFIED
  chat.v1.TokenType:
    type: string
    enum:
      - TOKEN_TYPE_UNSPECIFIED
      - TOKEN_TYPE_CHAT
    default: TOKEN_TYPE_UNSPECIFIED
  chat.v1.UnblockChatUserResponse:
    type: object
  chat.v1.UnblockUser:
    type: object
    properties:
      id:
        type: string
        description: Required. The uuid of the unblocked user.
      action_taker:
        $ref: '#/definitions/chat.v1.ChatUser'
        description: Required. The user who unblocked the user.
    required:
      - id
      - action_taker
  chat.v1.UnmuteChatResponse:
    type: object
  chat.v1.UnpinChatMessageResponse:
    type: object
  chat.v1.UnpinMessage:
    type: object
    properties:
      message:
        $ref: '#/definitions/chat.v1.UnpinMessage.Message'
        description: Required.
      action_taker:
        $ref: '#/definitions/chat.v1.ChatUser'
        description: Required.
    required:
      - message
      - action_taker
  chat.v1.UnpinMessage.Message:
    type: object
    properties:
      id:
        type: string
        description: Required.
    required:
      - id
  chat.v1.UpdateChatPollResponse:
    type: object
    properties:
      poll:
        $ref: '#/definitions/chat.v1.Poll'
  chat.v1.UpdateDictionaryResponse:
    type: object
    properties:
      dictionary:
        $ref: '#/definitions/chat.v1.Dictionary'
  chat.v1.UpdatePatternResponse:
    type: object
    properties:
      pattern:
        $ref: '#/definitions/chat.v1.Pattern'
  chat.v1.Vote:
    type: object
    properties:
      poll:
        $ref: '#/definitions/chat.v1.Vote.VotePoll'
        description: Required.
    required:
      - poll
  chat.v1.Vote.VoteMultiChoiceOption:
    type: object
    properties:
      id:
        type: string
        description: Required.
    required:
      - id
  chat.v1.Vote.VoteMultiChoicePoll:
    type: object
    properties:
      options:
        type: array
        items:
          type: object
          $ref: '#/definitions/chat.v1.Vote.VoteMultiChoiceOption'
  chat.v1.Vote.VotePoll:
    type: object
    properties:
      id:
        type: string
        description: Required.
      type:
        $ref: '#/definitions/chat.v1.PollType'
        description: Required.
      multi_choice:
        $ref: '#/definitions/chat.v1.Vote.VoteMultiChoicePoll'
        description: Optional. Required if type is `POLL_TYPE_SINGLE_CHOICE` or `POLL_TYPE_MULTI_CHOICE`.
    required:
      - id
      - type
  chatroom.v1.BatchCreateDictionaryPatternsResponse:
    type: object
    properties:
      patterns:
        type: array
        items:
          type: object
          $ref: '#/definitions/chatroom.v1.Pattern'
  chatroom.v1.BatchUpdateChatroomDictionariesRequest:
    type: object
    properties:
      ids:
        type: array
        items:
          type: string
        description: Required. The list of uuid of the dictionaries that targets to udpate in the chatroom.
      enabled:
        type: boolean
        description: Required. Indicates whether or not to enabled all of the dictionaries in the chatroom.
    required:
      - ids
      - enabled
  chatroom.v1.BatchUpdateChatroomDictionariesResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/chatroom.v1.BatchUpdateChatroomDictionariesResponse.Result'
        description: The list of the batch update results.
  chatroom.v1.BatchUpdateChatroomDictionariesResponse.Result:
    type: object
    properties:
      dictionary:
        $ref: '#/definitions/chatroom.v1.Dictionary'
        description: The dictionary resource.
      enabled:
        type: boolean
        description: Indicates the dictionary whether or not enabled in the chatroom.
  chatroom.v1.BlockChatroomUserRequest:
    type: object
    properties:
      blocked_user:
        $ref: '#/definitions/chatroom.v1.BlockUser'
        description: Required.
    required:
      - blocked_user
  chatroom.v1.BlockChatroomUserResponse:
    type: object
  chatroom.v1.BlockUser:
    type: object
    properties:
      id:
        type: string
        description: Required. The uuid of the blocked user.
      device_id:
        type: string
        description: Required. The device id of the blocked user.
      custom_name:
        type: string
        description: Required. The custom name of the blocked user.
      blocked:
        type: boolean
        description: Output only. Indicates whether or not the user was blocked.
        readOnly: true
      action_taker:
        $ref: '#/definitions/chatroom.v1.ChatroomUser'
        description: Required. The user who blocked the user.
    required:
      - id
      - device_id
      - custom_name
      - action_taker
  chatroom.v1.ChangeChatroomPollRequest.Action:
    type: string
    enum:
      - ACTION_UNSPECIFIED
      - ACTION_START
      - ACTION_CLOSE
      - ACTION_ARCHIVE
    default: ACTION_UNSPECIFIED
  chatroom.v1.ChangeChatroomPollResponse:
    type: object
  chatroom.v1.Chatroom:
    type: object
    properties:
      id:
        type: string
        description: Output only. The uuid of the chatroom.
        readOnly: true
      muted:
        type: boolean
        description: Output only. Indicates the chatroom whether or not is muted.
        readOnly: true
      blocked_users:
        type: array
        items:
          type: object
          $ref: '#/definitions/chatroom.v1.BlockUser'
        description: Output only. List the blocked users in the chatroom.
        readOnly: true
      pinned_messages:
        type: array
        items:
          type: object
          $ref: '#/definitions/chatroom.v1.PinMessage'
        description: Output only. List the pinned messages in the chatroom.
        readOnly: true
      active_poll:
        $ref: '#/definitions/chatroom.v1.Poll'
        description: Output only. It'll be available when there is an active poll in the chatroom.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the chatroom that was created.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the chatroom that was last updated.
        readOnly: true
  chatroom.v1.ChatroomUser:
    type: object
    properties:
      id:
        type: string
        description: Output only. The uuid of the user.
        readOnly: true
      device_id:
        type: string
        description: Output only. The device id that was used by the user.
        readOnly: true
      custom_name:
        type: string
        description: Required. The custom name of the user.
      is_admin:
        type: boolean
        description: Output only. Indicates the user whether or not is an admin.
        readOnly: true
      blocked:
        type: boolean
        description: Output only. Indicates the user whether or not is blocked.
        readOnly: true
    required:
      - custom_name
  chatroom.v1.CreateChatroomPollRequest:
    type: object
    properties:
      poll:
        $ref: '#/definitions/chatroom.v1.Poll'
        description: Required.
    required:
      - poll
  chatroom.v1.CreateChatroomPollResponse:
    type: object
    properties:
      poll:
        $ref: '#/definitions/chatroom.v1.Poll'
  chatroom.v1.CreateChatroomRequest:
    type: object
  chatroom.v1.CreateChatroomResponse:
    type: object
    properties:
      chatroom:
        $ref: '#/definitions/chatroom.v1.Chatroom'
  chatroom.v1.CreateChatroomTokenRequest.Role:
    type: string
    enum:
      - ROLE_UNSPECIFIED
      - ROLE_VIEWER
      - ROLE_ADMIN
    default: ROLE_UNSPECIFIED
  chatroom.v1.CreateChatroomTokenResponse:
    type: object
    properties:
      endpoint:
        type: string
        description: The endpoint of the chatroom to connect.
      authorizer:
        type: string
        description: The authorizer of the chatroom to authorize while connecting.
      token:
        type: string
        description: The chatroom token is used while connecting to the chatroom, also the token is needed when invoking chatroom APIs.
      signature:
        type: string
        description: The signature of the token.
      chat:
        $ref: '#/definitions/chatroom.v1.CreateChatroomTokenResponse.Topic'
        description: The chatroom topics.
  chatroom.v1.CreateChatroomTokenResponse.Topic:
    type: object
    properties:
      pub:
        type: string
        description: The publish topic for sending the messages to other clients.
      sub:
        type: string
        description: The subscribe topic for receiving messages from other clients.
  chatroom.v1.CreateDictionaryPatternResponse:
    type: object
    properties:
      pattern:
        $ref: '#/definitions/chatroom.v1.Pattern'
  chatroom.v1.CreateDictionaryRequest:
    type: object
    properties:
      name:
        type: string
        description: Required. The name of the dictionary to create.
      description:
        type: string
        description: Optional. The description of the dictionary to create.
    required:
      - name
  chatroom.v1.CreateDictionaryResponse:
    type: object
    properties:
      dictionary:
        $ref: '#/definitions/chatroom.v1.Dictionary'
  chatroom.v1.DeleteChatroomMessageResponse:
    type: object
  chatroom.v1.DeleteChatroomPollResponse:
    type: object
  chatroom.v1.DeleteDictionaryResponse:
    type: object
  chatroom.v1.DeleteMessage:
    type: object
    properties:
      id:
        type: string
  chatroom.v1.DeletePatternResponse:
    type: object
  chatroom.v1.Dictionary:
    type: object
    properties:
      id:
        type: string
        description: Output only. The uuid of the dictionary.
        readOnly: true
      name:
        type: string
        description: Output only. The name of the dictionary.
        readOnly: true
      description:
        type: string
        description: Output only. The description of the dictionary.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the dictionary that was created.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the dictionary that was last updated.
        readOnly: true
  chatroom.v1.DisableChatroomDictionaryResponse:
    type: object
  chatroom.v1.EnableChatroomDictionaryResponse:
    type: object
  chatroom.v1.GetChatroomPollResponse:
    type: object
    properties:
      poll:
        $ref: '#/definitions/chatroom.v1.Poll'
  chatroom.v1.GetChatroomResponse:
    type: object
    properties:
      chatroom:
        $ref: '#/definitions/chatroom.v1.Chatroom'
  chatroom.v1.GetDictionaryResponse:
    type: object
    properties:
      dictionary:
        $ref: '#/definitions/chatroom.v1.Dictionary'
  chatroom.v1.InteractionMessage:
    type: object
    properties:
      id:
        type: string
        description: Optional. Immutable. The uuid of the message. It will generate an UUID string if not provided.
      user:
        $ref: '#/definitions/chatroom.v1.ChatroomUser'
        description: Required. The user of the message that was sent by.
      type:
        $ref: '#/definitions/chatroom.v1.InteractionType'
        description: Required. The type of the message.
      text_message:
        $ref: '#/definitions/chatroom.v1.TextMessage'
        description: Optional. Required if `type` is `INTERACTION_TYPE_TEXT`.
      pin_unpin_message:
        $ref: '#/definitions/chatroom.v1.PinMessage'
        description: Optional. Required if `type` is `INTERACTION_TYPE_PIN_MESSAGE` or `INTERACTION_TYPE_UNPIN_MESSAGE`.
      block_unblock_user:
        $ref: '#/definitions/chatroom.v1.BlockUser'
        description: Optional. Required if `type` is `INTERACTION_TYPE_BLOCK_USER` or `INTERACTION_TYPE_UNBLOCK_USER`.
      delete_message:
        $ref: '#/definitions/chatroom.v1.DeleteMessage'
        description: Optional. Required if `type` is `INTERACTION_TYPE_DELETE_MESSAGE`.
      poll:
        $ref: '#/definitions/chatroom.v1.Poll'
        description: |-
          Optional. Required if `type` is `INTERACTION_TYPE_POLL_STARTED`, `INTERACTION_TYPE_POLL_CLOSED`,
          `INTERACTION_TYPE_POLL_ARCHIVED` or `INTERACTION_TYPE_POLL_UPDATE`.
      vote:
        $ref: '#/definitions/chatroom.v1.Vote'
        description: Optional. Required if `type` is `INTERACTION_TYPE_POLL_USER_VOTE`.
      created_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the message that was created.
        readOnly: true
    required:
      - user
      - type
  chatroom.v1.InteractionType:
    type: string
    enum:
      - INTERACTION_TYPE_UNSPECIFIED
      - INTERACTION_TYPE_TEXT
      - INTERACTION_TYPE_MUTE
      - INTERACTION_TYPE_UNMUTE
      - INTERACTION_TYPE_PIN_MESSAGE
      - INTERACTION_TYPE_UNPIN_MESSAGE
      - INTERACTION_TYPE_DELETE_MESSAGE
      - INTERACTION_TYPE_BLOCK_USER
      - INTERACTION_TYPE_UNBLOCK_USER
      - INTERACTION_TYPE_POLL_STARTED
      - INTERACTION_TYPE_POLL_CLOSED
      - INTERACTION_TYPE_POLL_ARCHIVED
      - INTERACTION_TYPE_POLL_UPDATE
      - INTERACTION_TYPE_POLL_USER_VOTE
    default: INTERACTION_TYPE_UNSPECIFIED
  chatroom.v1.ListChatroomDictionariesResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/chatroom.v1.ListChatroomDictionariesResponse.Result'
        description: The list of the dictionary results.
      next_page_token:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
          subsequent pages.
  chatroom.v1.ListChatroomDictionariesResponse.Result:
    type: object
    properties:
      dictionary:
        $ref: '#/definitions/chatroom.v1.Dictionary'
        description: The dictionary resource.
      enabled:
        type: boolean
        description: Indicates the dictionary whether or not enabled in the chatroom.
  chatroom.v1.ListChatroomPollsResponse:
    type: object
    properties:
      polls:
        type: array
        items:
          type: object
          $ref: '#/definitions/chatroom.v1.Poll'
      next_page_token:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
          subsequent pages.
  chatroom.v1.ListDictionariesResponse:
    type: object
    properties:
      dictionaries:
        type: array
        items:
          type: object
          $ref: '#/definitions/chatroom.v1.Dictionary'
      next_page_token:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
          subsequent pages.
  chatroom.v1.ListDictionaryPatternsResponse:
    type: object
    properties:
      patterns:
        type: array
        items:
          type: object
          $ref: '#/definitions/chatroom.v1.Pattern'
      next_page_token:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
          subsequent pages.
  chatroom.v1.MultiChoiceOption:
    type: object
    properties:
      id:
        type: string
        description: Optional. Immutable. Required if in update operation, otherwise will be an output only field.
      text:
        type: string
        description: Required.
      corrected:
        type: boolean
        description: Required.
      votes_count:
        type: integer
        format: int32
        description: Output only.
        readOnly: true
    required:
      - text
      - corrected
  chatroom.v1.MultiChoicePoll:
    type: object
    properties:
      question:
        type: string
        description: Required.
      options:
        type: array
        items:
          type: object
          $ref: '#/definitions/chatroom.v1.MultiChoiceOption'
        description: Required.
    required:
      - question
      - options
  chatroom.v1.MuteChatroomRequest:
    type: object
    properties:
      action_taker:
        $ref: '#/definitions/chatroom.v1.ChatroomUser'
        description: Required.
    required:
      - action_taker
  chatroom.v1.MuteChatroomResponse:
    type: object
  chatroom.v1.Pattern:
    type: object
    properties:
      id:
        type: string
        description: Output only. The uuid of the pattern.
        readOnly: true
      text:
        type: string
        description: Output only. The text of the pattern.
        readOnly: true
  chatroom.v1.PinChatroomMessageRequest:
    type: object
    properties:
      pinned_message:
        $ref: '#/definitions/chatroom.v1.PinMessage'
        description: Required.
    required:
      - pinned_message
  chatroom.v1.PinChatroomMessageResponse:
    type: object
  chatroom.v1.PinMessage:
    type: object
    properties:
      message:
        $ref: '#/definitions/chatroom.v1.PinMessage.Message'
        description: Required. The message to pinned.
      action_taker:
        $ref: '#/definitions/chatroom.v1.ChatroomUser'
        description: Required. The user who pinned the message.
    required:
      - message
      - action_taker
  chatroom.v1.PinMessage.Message:
    type: object
    properties:
      id:
        type: string
        description: Required. The uuid of the message to pinned.
      text:
        type: string
        description: Required. The text of the message to pinned.
      sender:
        $ref: '#/definitions/chatroom.v1.PinMessage.Sender'
        description: Required. The user who sends the message.
    required:
      - id
      - text
      - sender
  chatroom.v1.PinMessage.Sender:
    type: object
    properties:
      id:
        type: string
        description: Required. The uuid of the user who sends the message.
      device_id:
        type: string
        description: Required. The device id of the user who sends the message.
      custom_name:
        type: string
        description: Required. The custom name of the user who sends the message.
    required:
      - id
      - device_id
      - custom_name
  chatroom.v1.Poll:
    type: object
    properties:
      id:
        type: string
        description: Optional. Immutable. Required if in update operation, otherwise will be an output only field.
      type:
        $ref: '#/definitions/chatroom.v1.PollType'
        description: Required.
      status:
        $ref: '#/definitions/chatroom.v1.PollStatus'
        description: Output only.
        readOnly: true
      votes_count:
        type: integer
        format: int32
        description: Output only.
        readOnly: true
      multi_choice:
        $ref: '#/definitions/chatroom.v1.MultiChoicePoll'
        description: Optional. Required if type is `POLL_TYPE_SINGLE_CHOICE` or `POLL_TYPE_MULTI_CHOICE`.
      started_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      ended_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
    required:
      - type
  chatroom.v1.PollStatus:
    type: string
    enum:
      - POLL_STATUS_UNSPECIFIED
      - POLL_STATUS_QUEUED
      - POLL_STATUS_ACTIVE
      - POLL_STATUS_CLOSED
      - POLL_STATUS_ARCHIVED
    default: POLL_STATUS_UNSPECIFIED
    description: Output only.
    readOnly: true
  chatroom.v1.PollType:
    type: string
    enum:
      - POLL_TYPE_UNSPECIFIED
      - POLL_TYPE_SINGLE_CHOICE
      - POLL_TYPE_MULTI_CHOICE
    default: POLL_TYPE_UNSPECIFIED
  chatroom.v1.TextMessage:
    type: object
    properties:
      text:
        type: string
        description: Required. The text of the message.
      filtered:
        type: boolean
        description: Output only. Indicates whether or not the text message was filtered.
        readOnly: true
      filter_hit_result:
        $ref: '#/definitions/chatroom.v1.TextMessage.FilterHitResult'
        description: Output only. Show the filter result when the text message was filtered.
        readOnly: true
    required:
      - text
  chatroom.v1.TextMessage.FilterHitResult:
    type: object
    properties:
      pattern_id:
        type: string
        description: Output only. The uuid of the pattern that was hit when filtering the message.
        readOnly: true
      pattern_text:
        type: string
        description: Output only. The text of the pattern that was hit when filtering the message.
        readOnly: true
      dictionary_id:
        type: string
        description: Output only. The uuid of the dictionary that was hit when filtering the message.
        readOnly: true
      dictionary_name:
        type: string
        description: Output only. The name of the dictionary that was hit when filtering the message.
        readOnly: true
    description: Output only.
    readOnly: true
  chatroom.v1.UnblockChatroomUserRequest:
    type: object
    properties:
      unblocked_user:
        $ref: '#/definitions/chatroom.v1.UnblockUser'
        description: Required.
    required:
      - unblocked_user
  chatroom.v1.UnblockChatroomUserResponse:
    type: object
  chatroom.v1.UnblockUser:
    type: object
    properties:
      id:
        type: string
        description: Required. The uuid of the unblocked user.
      action_taker:
        $ref: '#/definitions/chatroom.v1.ChatroomUser'
        description: Required. The user who unblocked the user.
    required:
      - id
      - action_taker
  chatroom.v1.UnmuteChatroomRequest:
    type: object
    properties:
      action_taker:
        $ref: '#/definitions/chatroom.v1.ChatroomUser'
        description: Required.
    required:
      - action_taker
  chatroom.v1.UnmuteChatroomResponse:
    type: object
  chatroom.v1.UnpinChatroomMessageRequest:
    type: object
    properties:
      unpinned_message:
        $ref: '#/definitions/chatroom.v1.UnpinMessage'
        description: Required.
    required:
      - unpinned_message
  chatroom.v1.UnpinChatroomMessageResponse:
    type: object
  chatroom.v1.UnpinMessage:
    type: object
    properties:
      message:
        $ref: '#/definitions/chatroom.v1.UnpinMessage.Message'
        description: Required. The message to unpinned.
      action_taker:
        $ref: '#/definitions/chatroom.v1.ChatroomUser'
        description: Required. The user who unpinned the message.
    required:
      - message
      - action_taker
  chatroom.v1.UnpinMessage.Message:
    type: object
    properties:
      id:
        type: string
        description: Required. The uuid of the message to unpinned.
    required:
      - id
  chatroom.v1.UpdateChatroomPollResponse:
    type: object
    properties:
      poll:
        $ref: '#/definitions/chatroom.v1.Poll'
  chatroom.v1.UpdateDictionaryResponse:
    type: object
    properties:
      dictionary:
        $ref: '#/definitions/chatroom.v1.Dictionary'
  chatroom.v1.UpdatePatternResponse:
    type: object
    properties:
      pattern:
        $ref: '#/definitions/chatroom.v1.Pattern'
  chatroom.v1.Vote:
    type: object
    properties:
      poll:
        $ref: '#/definitions/chatroom.v1.Vote.VotePoll'
        description: Required.
    required:
      - poll
  chatroom.v1.Vote.VoteMultiChoiceOption:
    type: object
    properties:
      id:
        type: string
        description: Required.
    required:
      - id
  chatroom.v1.Vote.VoteMultiChoicePoll:
    type: object
    properties:
      options:
        type: array
        items:
          type: object
          $ref: '#/definitions/chatroom.v1.Vote.VoteMultiChoiceOption'
  chatroom.v1.Vote.VotePoll:
    type: object
    properties:
      id:
        type: string
        description: Required.
      type:
        $ref: '#/definitions/chatroom.v1.PollType'
        description: Required.
      multi_choice:
        $ref: '#/definitions/chatroom.v1.Vote.VoteMultiChoicePoll'
        description: Optional. Required if type is `POLL_TYPE_SINGLE_CHOICE` or `POLL_TYPE_MULTI_CHOICE`.
    required:
      - id
      - type
  cms.v1.ArchiveLiveResponse:
    type: object
  cms.v1.ArchiveMeetingResponse:
    type: object
  cms.v1.Banner:
    type: object
    properties:
      id:
        type: string
        description: Output only. The resource identifier of banner.
        readOnly: true
      type:
        $ref: '#/definitions/cms.v1.BannerType'
        description: Required. The type of banner.
      sequence:
        type: integer
        format: int32
        description: 'Required. The sequence of banner. Range: 1-5.'
      org_type:
        $ref: '#/definitions/type.bv.v1.OrganizationType'
        description: Required. The type of organization.
      start_time:
        type: string
        format: date-time
        description: Required. The start time of the banner, which will be availabled on the console.
      end_time:
        type: string
        format: date-time
        description: Required. The end time of the banner, which will be disabled on the console.
      contents:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.BannerContent'
    required:
      - type
      - sequence
      - org_type
      - start_time
      - contents
  cms.v1.BannerContent:
    type: object
    properties:
      title:
        type: string
        description: Required. The title of banner.
      content:
        type: string
        description: Required. The content of banner.
      language_type:
        $ref: '#/definitions/type.bv.v1.LanguageType'
        description: Required. The language of banner.
      url:
        type: string
        description: Optional. The url of banner.
      created_at:
        type: string
        format: date-time
        title: Output only
        readOnly: true
      updated_at:
        type: string
        format: date-time
        title: Output only
        readOnly: true
      library_id:
        type: string
        description: Required. The library id of image.
      image_url:
        type: string
        description: Output only The url of banner image.
        readOnly: true
    required:
      - title
      - content
      - language_type
      - library_id
  cms.v1.BannerType:
    type: string
    enum:
      - BANNER_TYPE_UNSPECIFIED
      - BANNER_TYPE_WELCOME
      - BANNER_TYPE_RELEASE
      - BANNER_TYPE_MAINTENANCE
      - BANNER_TYPE_NOTICE
      - BANNER_TYPE_FEATURE
    default: BANNER_TYPE_UNSPECIFIED
  cms.v1.BatchCreateRedeemCodesRequest:
    type: object
    properties:
      id:
        type: string
        description: Required. The unique id of live or VOD.
      type:
        $ref: '#/definitions/type.bv.v1.ResourceType'
        description: Required. Indicates the resource type for the redeem codes.
      amount:
        type: integer
        format: int32
        description: |-
          Required. Specify the amount of the redeem codes to be created. Min: 1. Max: 1000.
          The total amount of the redeem codes (including the existing ones) must not exceed 1000.
    required:
      - id
      - type
      - amount
  cms.v1.BatchCreateRedeemCodesResponse:
    type: object
    properties:
      redeem_codes:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.RedeemCode'
  cms.v1.BatchGetResourcesResponse:
    type: object
    properties:
      resources:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.ResourceWithRefData'
  cms.v1.BatchGetVODReportInfoResponse:
    type: object
    properties:
      vod_report_infos:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.VODReportInfo'
  cms.v1.BatchUpdateNotificationsRequest:
    type: object
    properties:
      ids:
        type: array
        items:
          type: string
        description: Required. The unique identities of notifications.
      read:
        type: boolean
        description: Optional. Toggle notification read status.
    required:
      - ids
  cms.v1.BatchUpdateNotificationsResponse:
    type: object
  cms.v1.BroadcastMode:
    type: string
    enum:
      - BROADCAST_MODE_UNSPECIFIED
      - BROADCAST_MODE_TRADITIONAL_LIVE
      - BROADCAST_MODE_PLAYBACK
      - BROADCAST_MODE_DVR
    default: BROADCAST_MODE_UNSPECIFIED
    description: |2-
       - BROADCAST_MODE_TRADITIONAL_LIVE: Traditional live which only broadcasts current live stream. There's no progress bar on the player.
       - BROADCAST_MODE_PLAYBACK: Pre-recorded VOD.
       - BROADCAST_MODE_DVR: Live streaming with DVR which allows viewers pause, rewind, and continue during the live stream.
  cms.v1.ByoCdn:
    type: object
    properties:
      enabled:
        type: boolean
        description: Optional. Enable BYO(Bring-your-own) CDN or not.
      byo_cdn_setting_id:
        type: string
        description: Optional. The id of BYO CDN host that you set in the general settings, it's necessary when byo cdn is enabled.
      configs:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.ByoCdnConfiguration'
        description: Output only. The preconfigured BYO CDN configurations for AWS distribution.
        readOnly: true
  cms.v1.ByoCdnConfiguration:
    type: object
    properties:
      type:
        $ref: '#/definitions/cms.v1.CdnConfigType'
        title: Required. The type of cdn configuration
      origin:
        type: string
        title: Required. The origin user need to set in the distribution
      cache_behavior_prefix:
        type: string
        title: Required. The cache behavior prefix user need to set in the distribution
  cms.v1.CancelLiveResponse:
    type: object
  cms.v1.CancelMeetingResponse:
    type: object
  cms.v1.CancelUploadFileResponse:
    type: object
  cms.v1.CancelVODResponse:
    type: object
  cms.v1.CdnConfigType:
    type: string
    enum:
      - CDN_CONFIG_TYPE_UNSPECIFIED
      - CDN_CONFIG_TYPE_LIVE_HLS
      - CDN_CONFIG_TYPE_LIVE_DASH
      - CDN_CONFIG_TYPE_VOD
    default: CDN_CONFIG_TYPE_UNSPECIFIED
  cms.v1.Chapter:
    type: object
    properties:
      title:
        type: string
      timestamp:
        type: string
        format: int64
    required:
      - title
      - timestamp
  cms.v1.Chatroom:
    type: object
    properties:
      live:
        $ref: '#/definitions/type.bv.v1.Chatroom'
        title: |-
          Optional. Enable chatroom for
          - RESOURCE_TYPE_LIVE && LIVE_STATUS_LIVE
      vod:
        $ref: '#/definitions/type.bv.v1.Chatroom'
        title: |-
          Optional. Enable chatroom for
          - RESOURCE_TYPE_LIVE && LIVE_STATUS_VOD
  cms.v1.CheckLiveQuotaTriggerRequest:
    type: object
  cms.v1.CheckLiveQuotaTriggerResponse:
    type: object
  cms.v1.CheckLiveScheduledTriggerRequest:
    type: object
  cms.v1.CheckLiveScheduledTriggerResponse:
    type: object
  cms.v1.CheckLiveVODAvailableRequest:
    type: object
  cms.v1.CheckLiveVODAvailableResponse:
    type: object
  cms.v1.CheckMeetingScheduleRequest:
    type: object
  cms.v1.CheckMeetingScheduleResponse:
    type: object
  cms.v1.CheckSimuliveAutoTriggerRequest:
    type: object
  cms.v1.CheckSimuliveAutoTriggerResponse:
    type: object
  cms.v1.CloseMeetingResponse:
    type: object
  cms.v1.CompleteData:
    type: object
    properties:
      id:
        type: string
        description: Required. The upload id of the file.
      checksum_sha1:
        type: string
        description: |-
          Required.
          base64-encoded, 160-bit SHA-1 digest of the original file content.
      parts:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.CompletePart'
        description: Required.
    required:
      - id
      - checksum_sha1
      - parts
  cms.v1.CompletePart:
    type: object
    properties:
      part_number:
        type: integer
        format: int32
        description: This attribute represents the sequential number assigned to each part of the file.
      etag:
        type: string
        description: The response's ETag header value after uploading a file data part to a presigned URL.
  cms.v1.CompleteUploadFileResponse:
    type: object
    example:
      file:
        attrs: {}
        created_at: "2023-05-26T06:29:22Z"
        id: 4ea008f7-8073-4b0f-9e39-c5698550131e
        name: bbb.mp4
        size: "92797819"
        source: FILE_SOURCE_UPLOAD_IN_LIBRARY
        type: FILE_TYPE_VIDEO
        updated_at: "2023-05-26T06:29:22Z"
        uri: ""
    properties:
      file:
        $ref: '#/definitions/cms.v1.File'
  cms.v1.CreateAdminPlaybackTokenRequest:
    type: object
    properties:
      resource_id:
        type: string
        description: Required. The unique id of live or VOD.
      resource_type:
        $ref: '#/definitions/type.bv.v1.ResourceType'
        title: |-
          Required. Indicates the resource type is live or VOD.
          Available values: `RESOURCE_TYPE_LIVE_EVENT`, `RESOURCE_TYPE_VOD_EVENT`
      customer_id:
        type: string
        description: Required. The customer ID for identifying who is playing the resource.
    required:
      - resource_id
      - resource_type
      - customer_id
  cms.v1.CreateAdminPlaybackTokenResponse:
    type: object
    properties:
      token:
        type: string
        description: Output only. The access token for live or VOD.
        readOnly: true
  cms.v1.CreateAdminResourceTokenRequest:
    type: object
    properties:
      resource_id:
        type: string
        description: Required. The unique id of live or VOD.
      resource_type:
        $ref: '#/definitions/type.bv.v1.ResourceType'
        title: |-
          Required. Indicates the resource type is live or VOD.
          Available values: `RESOURCE_TYPE_LIVE_EVENT`, `RESOURCE_TYPE_VOD_EVENT`
    required:
      - resource_id
      - resource_type
  cms.v1.CreateAdminResourceTokenResponse:
    type: object
    properties:
      token:
        type: string
        description: Output only. The access token for live or VOD.
        readOnly: true
  cms.v1.CreateBannerRequest:
    type: object
    properties:
      banner:
        $ref: '#/definitions/cms.v1.Banner'
    required:
      - banner
  cms.v1.CreateBannerResponse:
    type: object
    properties:
      banner:
        $ref: '#/definitions/cms.v1.Banner'
  cms.v1.CreateFAQRequest:
    type: object
    properties:
      faq:
        $ref: '#/definitions/cms.v1.FAQ'
    required:
      - faq
  cms.v1.CreateFAQResponse:
    type: object
    properties:
      faq:
        $ref: '#/definitions/cms.v1.FAQ'
  cms.v1.CreateInstantEncodingRequest:
    type: object
    example:
      expire_duration: 3600s
      instant_profile_set_id: 147fb07a-ab51-42bf-a4df-da3b703ca812
      name: creep
      protection:
        type: PROTECTION_TYPE_DRM
      source:
        cloud_storage:
          file_path: wav_24_441.wav
          id: dc12068f-9dc4-4025-8534-80aa697cc316
        type: SOURCE_TYPE_CLOUD_STORAGE
    properties:
      name:
        type: string
        description: This attribute specifies the display name of the instant encoding
      source:
        $ref: '#/definitions/cms.v1.Source'
        description: This attribute specifies the location of the source file that will be encoded
      instant_profile_set_id:
        type: string
        description: This attribute specifies the id of instant profile set
      protection:
        $ref: '#/definitions/cms.v1.Protection'
        description: This attribute indicates whether to add DRM protection to the content or not.
      expire_duration:
        type: string
        description: This attribute indicates the TTL (Time-to-Live) of the instant encoding data, with the minimum unit being seconds. Follow the ISO 8601 standard when making RESTful requests.
    description: Request payload that used to create an instant encoding
    title: CreateInstantEncodingRequest
    required:
      - name
      - source
      - instant_profile_set_id
  cms.v1.CreateInstantEncodingResponse:
    type: object
    example:
      instant_encoding:
        expiration_time: "2023-05-25T03:08:46.809633646Z"
        id: 4b1e2f25-a8f3-490b-b91e-c030a9478ce8
        name: creep
        status: INSTANT_ENCODING_STATUS_CREATED
        stream:
          - manifests:
              - protocol: PROTOCOL_DASH
                uris:
                  - resolutions: []
                    uri: https://d3vj39meaxlc8.cloudfront.net/42f6c33e-f632-44e5-8042-05abb5fa2223/audio/4b1e2f25-a8f3-490b-b91e-c030a9478ce8/vod/dash.mpd
              - protocol: PROTOCOL_HLS
                uris:
                  - resolutions: []
                    uri: https://d3vj39meaxlc8.cloudfront.net/42f6c33e-f632-44e5-8042-05abb5fa2223/audio/4b1e2f25-a8f3-490b-b91e-c030a9478ce8/vod/hls.m3u8
            thumbnail: null
    properties:
      instant_encoding:
        $ref: '#/definitions/cms.v1.InstantEncoding'
    description: Response payload that could be returned upon successful creation of an instant encoding
    title: CreateInstantEncodingResponse
  cms.v1.CreateKKBOXInstantEncodingRequest:
    type: object
    properties:
      name:
        type: string
        description: This attribute specifies the display name of the instant encoding
      source:
        $ref: '#/definitions/cms.v1.Source'
        description: This attribute specifies the location of the source file that will be encoded
      instant_profile_set_id:
        type: string
        description: This attribute specifies the id of instant profile set
      protection:
        $ref: '#/definitions/cms.v1.Protection'
        description: This attribute indicates whether to add DRM protection to the content or not.
      expire_duration:
        type: string
        description: This attribute indicates the TTL (Time-to-Live) of the instant encoding data, with the minimum unit being seconds. Follow the ISO 8601 standard when making RESTful requests.
    description: Request payload that used to create an instant encoding
    required:
      - name
      - source
      - instant_profile_set_id
  cms.v1.CreateKKBOXInstantEncodingResponse:
    type: object
    properties:
      instant_encoding:
        $ref: '#/definitions/cms.v1.InstantEncoding'
    description: Response payload that could be returned upon successful creation of an instant encoding
  cms.v1.CreateLiveAdminInteractionTokenResponse:
    type: object
    properties:
      chatroom_token:
        type: string
        description: Output only. The access token for chatroom. It'll be empty if chatroom is disabled.
        readOnly: true
      poll_token:
        type: string
        description: Output only. The access token for poll management. It'll be empty if poll is disabled.
        readOnly: true
      sticker_token:
        type: string
        description: Output only. The access token for sticker management. It'll be empty if chatroom is disabled.
        readOnly: true
      word_filter_token:
        type: string
        description: Output only. The access token for word filter management. It'll be empty if chatroom is disabled.
        readOnly: true
  cms.v1.CreateLiveRequest:
    type: object
    example:
      live:
        broadcast_mode: BROADCAST_MODE_TRADITIONAL_LIVE
        name: Amazing Live
        resolution: LIVE_RESOLUTION_HD
        security:
          privacy:
            type: SECURITY_PRIVACY_TYPE_PUBLIC
        type: LIVE_TYPE_LIVE
    properties:
      live:
        $ref: '#/definitions/cms.v1.Live'
    required:
      - live
  cms.v1.CreateLiveResponse:
    type: object
    example:
      live:
        broadcast_mode: BROADCAST_MODE_TRADITIONAL_LIVE
        cover_images:
          close: null
          current: null
          end: null
          player_pause: null
          preview: null
          ready_to_start: null
          signal_interruption: null
        created_at: "2023-05-31T06:03:15.151Z"
        error_infos: []
        id: 860d49b8-2ca8-4030-b5ff-f6ec3a1c6196
        ingest_types:
          - LIVE_STREAM_INGEST_TYPE_RTMP
        interaction:
          chatroom:
            live:
              enabled: false
              theme: CHATROOM_THEME_UNSPECIFIED
            vod:
              enabled: false
              theme: CHATROOM_THEME_UNSPECIFIED
          event_id: ""
          poll_enabled: false
        labels: []
        name: Amazing Live
        resolution: LIVE_RESOLUTION_HD
        save_for_download_enabled: false
        security:
          domain_control:
            domains: []
            enabled: false
          geo_control: []
          privacy:
            token: null
            type: SECURITY_PRIVACY_TYPE_PUBLIC
          protection:
            type: PROTECTION_TYPE_UNSPECIFIED
          watermark:
            enabled: false
            position: WATERMARK_POSITION_UNSPECIFIED
            type: WATERMARK_TYPE_UNSPECIFIED
        setup: null
        source: null
        status: LIVE_STATUS_PREPARING
        stream: []
        type: LIVE_TYPE_LIVE
        ull_enabled: false
        updated_at: "2023-05-31T06:03:15.151Z"
    properties:
      live:
        $ref: '#/definitions/cms.v1.Live'
  cms.v1.CreateMeetingRequest:
    type: object
    properties:
      name:
        type: string
        description: Optional. The name of the meeting to create.
      schedule:
        $ref: '#/definitions/cms.v1.MeetingSchedule'
        description: Required. The schedule time for the meeting. The meeting cannot be over 12 hours.
    required:
      - schedule
  cms.v1.CreateMeetingResponse:
    type: object
    properties:
      meeting:
        $ref: '#/definitions/cms.v1.Meeting'
  cms.v1.CreatePlaybackTokenRequest:
    type: object
    properties:
      resource_id:
        type: string
        description: Required. The unique id of live or VOD.
      resource_type:
        $ref: '#/definitions/type.bv.v1.ResourceType'
        title: |-
          Required. Indicates the resource type is live or VOD.
          Available values: `RESOURCE_TYPE_LIVE_EVENT`, `RESOURCE_TYPE_VOD_EVENT`
      customer_id:
        type: string
        description: Required. The customer ID for identifying who is playing the resource.
    required:
      - resource_id
      - resource_type
      - customer_id
  cms.v1.CreatePlaybackTokenResponse:
    type: object
    properties:
      token:
        type: string
        description: Output only. The access token for live or VOD.
        readOnly: true
  cms.v1.CreateResourceTokenRequest:
    type: object
    properties:
      resource_id:
        type: string
        description: Required. The unique id of live or VOD.
      resource_type:
        $ref: '#/definitions/type.bv.v1.ResourceType'
        title: |-
          Required. Indicates the resource type is live or VOD.
          Available values: `RESOURCE_TYPE_LIVE_EVENT`, `RESOURCE_TYPE_VOD_EVENT`
      customer_id:
        type: string
        description: |-
          Optional. Required if the resource's security privacy is `SECURITY_PRIVACY_TYPE_TOKEN`.
          The customer ID for identifying who is playing the resource.
      customer_name:
        type: string
        description: Optional. The customer name.
    required:
      - resource_id
      - resource_type
  cms.v1.CreateResourceTokenResponse:
    type: object
    properties:
      token:
        type: string
        description: Output only. The access token for live or VOD.
        readOnly: true
  cms.v1.CreateTutorialRequest:
    type: object
    properties:
      tutorial:
        $ref: '#/definitions/cms.v1.Tutorial'
    required:
      - tutorial
  cms.v1.CreateTutorialResponse:
    type: object
    properties:
      tutorial:
        $ref: '#/definitions/cms.v1.Tutorial'
  cms.v1.CreateVODRequest:
    type: object
    example:
      metadata:
        long_description: ""
        short_description: ""
      name: video.mp4
      profile_set_id: 6a2b2ea3-9e35-4216-93c9-da09dee5ab12
      pte:
        profile: PTE_PROFILE_UNSPECIFIED
      queue: QUEUE_STANDARD
      security:
        domain_control:
          domains:
            - https://showroom.one-dev.kkstream.io
          enabled: false
        geo_control: []
        privacy:
          type: SECURITY_PRIVACY_TYPE_PUBLIC
        watermark:
          enabled: false
          position: WATERMARK_POSITION_BOTTOM_RIGHT
          type: WATERMARK_TYPE_IMAGE
      source:
        library:
          subtitles:
            - code: eng
              display: English
              id: ff59095c-fd67-4edc-9705-5e56c31b3577
              name: english.vtt
          video:
            id: c6f50caa-37ab-4d8c-9b06-e231544d598f
        type: SOURCE_TYPE_LIBRARY
    properties:
      name:
        type: string
        description: Required. The name of VOD resource.
      profile_set_id:
        type: string
        description: Required. Indicate the profile set unique id that defines the encoding settings.
      source:
        $ref: '#/definitions/cms.v1.Source'
        description: Required. Indicate the source file that you want to encode.
      queue:
        $ref: '#/definitions/cms.v1.Queue'
        description: Required. Indicates which queue this encoding job will be executed on.
      pte:
        $ref: '#/definitions/cms.v1.PTE'
        title: Optional. Per-title encoding
      metadata:
        $ref: '#/definitions/type.bv.v1.Metadata'
        title: Optional. The metadata of the VOD
      security:
        $ref: '#/definitions/cms.v1.Security'
        description: Required. The security setting of the VOD.
      schedule:
        $ref: '#/definitions/cms.v1.Schedule'
        description: Required. The schedule setting of the VOD.
      export:
        $ref: '#/definitions/cms.v1.Export'
        description: Optional. The export setting of the VOD.
      byo_cdn:
        $ref: '#/definitions/cms.v1.ByoCdn'
        description: Optional. The setting of bring-your-own cdn.
      player:
        $ref: '#/definitions/cms.v1.Player'
        description: Optional. Customize the preferences on player.
    required:
      - name
      - profile_set_id
      - source
      - queue
      - security
      - schedule
  cms.v1.CreateVODResponse:
    type: object
    example:
      vod:
        cover_image: null
        created_at: "2023-05-31T07:07:12Z"
        export: null
        id: 221a53c1-10a6-4d00-ae8f-bc56191e4137
        labels: []
        metadata:
          labels: []
          long_description: ""
          short_description: ""
        name: video.mp4
        previous_status: VOD_STATUS_UNSPECIFIED
        profile_set:
          id: 6a2b2ea3-9e35-4216-93c9-da09dee5ab12
          multiple_audio_track:
            lang_customizes: []
            lang_from: LANG_FROM_FIRST_TRACK
          name: H.264-1080P-30fps
          preset: false
          profiles:
            - audio_bitrate: "128"
              b_frame: true
              codec_profile: CODEC_PROFILE_AUTO
              frame_rate: FRAME_RATE_30
              gop_size: 2
              id: 57acf6c4-688e-47c5-a4f9-548c64ef6ddb
              level: CODEC_PROFILE_LEVEL_AUTO
              name: 1080p-5Mbps
              preset: false
              segment_duration: 6
              standard: RESOLUTION_TYPE_UNSPECIFIED
              video_bitrate: "5000"
              video_codec: VIDEO_CODEC_H264
              video_height: 1080
              video_width: 1920
            - audio_bitrate: "128"
              b_frame: true
              codec_profile: CODEC_PROFILE_AUTO
              frame_rate: FRAME_RATE_30
              gop_size: 2
              id: d8b7caa0-7487-4cdf-ab64-44cf54783d34
              level: CODEC_PROFILE_LEVEL_AUTO
              name: 720p-2.5Mbps
              preset: false
              segment_duration: 6
              standard: RESOLUTION_TYPE_UNSPECIFIED
              video_bitrate: "2500"
              video_codec: VIDEO_CODEC_H264
              video_height: 720
              video_width: 1440
            - audio_bitrate: "96"
              b_frame: true
              codec_profile: CODEC_PROFILE_AUTO
              frame_rate: FRAME_RATE_30
              gop_size: 2
              id: 39861dab-83da-4cd7-bb58-7ae6af648c19
              level: CODEC_PROFILE_LEVEL_AUTO
              name: 480p-1.5Mbps
              preset: false
              segment_duration: 6
              standard: RESOLUTION_TYPE_UNSPECIFIED
              video_bitrate: "1500"
              video_codec: VIDEO_CODEC_H264
              video_height: 480
              video_width: 850
            - audio_bitrate: "96"
              b_frame: true
              codec_profile: CODEC_PROFILE_AUTO
              frame_rate: FRAME_RATE_30
              gop_size: 2
              id: 31bb7972-1c87-44c2-a07c-fe9d18321644
              level: CODEC_PROFILE_LEVEL_AUTO
              name: 360p-700kbps
              preset: false
              segment_duration: 6
              standard: RESOLUTION_TYPE_UNSPECIFIED
              video_bitrate: "700"
              video_codec: VIDEO_CODEC_H264
              video_height: 360
              video_width: 640
            - audio_bitrate: "64"
              b_frame: true
              codec_profile: CODEC_PROFILE_AUTO
              frame_rate: FRAME_RATE_30
              gop_size: 2
              id: 54479d60-c1ba-41fa-898b-3d7fe983b5ac
              level: CODEC_PROFILE_LEVEL_AUTO
              name: 240p-400kbps
              preset: false
              segment_duration: 6
              standard: RESOLUTION_TYPE_UNSPECIFIED
              video_bitrate: "400"
              video_codec: VIDEO_CODEC_H264
              video_height: 240
              video_width: 426
          protocols:
            - PROTOCOL_DASH
            - PROTOCOL_HLS
          smart_abr: false
          video_codec: VIDEO_CODEC_H264
        pte:
          profile: PTE_PROFILE_UNSPECIFIED
        queue: QUEUE_STANDARD
        schedule:
          enable: false
          end_time: null
          start_time: null
        security:
          domain_control:
            domains: []
            enabled: false
          geo_control: []
          privacy:
            token: null
            type: SECURITY_PRIVACY_TYPE_PUBLIC
          protection:
            type: PROTECTION_TYPE_UNSPECIFIED
          watermark:
            enabled: false
            position: WATERMARK_POSITION_UNSPECIFIED
            type: WATERMARK_TYPE_UNSPECIFIED
        source:
          cloud_storage: null
          library:
            subtitles:
              - code: eng
                display: English
                id: ff59095c-fd67-4edc-9705-5e56c31b3577
                name: english.vtt
            video:
              id: c6f50caa-37ab-4d8c-9b06-e231544d598f
          type: SOURCE_TYPE_LIBRARY
        source_file_info:
          audios: []
          bitrate: "0"
          duration: 0
          file_name: video.mp4
          size: "0"
          video:
            aspect_ratio: DISPLAY_ASPECT_RATIO_UNSPECIFIED
            bitrate: "0"
            codec: VIDEO_CODEC_UNSPECIFIED
            frame_rate: FRAME_RATE_UNSPECIFIED
            height: 0
            interlace: false
            width: 0
        status: VOD_STATUS_CREATED
        stream: []
        updated_at: "2023-05-31T07:07:12Z"
    properties:
      vod:
        $ref: '#/definitions/cms.v1.VOD'
        title: The VOD resource
  cms.v1.DeleteFileResponse:
    type: object
  cms.v1.DeleteVODResponse:
    type: object
  cms.v1.DomainControl:
    type: object
    properties:
      enabled:
        type: boolean
        description: Optional. Enable domain control.
      domains:
        type: array
        items:
          type: string
        description: Optional. The list of domains that will be allowed to embed the iframe.
  cms.v1.DownloadFileResponse:
    type: object
    example:
      download_filename: bbb.mp4
      download_uri: https://kks-platform-orbit-content-store-dev.s3.ap-northeast-1.amazonaws.com/42f6c33e-f632-44e5-8042-05abb5fa2223/video/3aabf3ce-9bf8-4dba-bc8b-274ffbf9e328/3aabf3ce-9bf8-4dba-bc8b-274ffbf9e328.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAX2E7FTDHKGGDCDJQ%2F20230605%2Fap-northeast-1%2Fs3%2Faws4_request&X-Amz-Date=20230605T064205Z&X-Amz-Expires=86400&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEN7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDmFwLW5vcnRoZWFzdC0xIkYwRAIgNu3YMuJ6uc%2FJruKiidRkpZYaKmncu5FCTuiDaXlUpxkCIHVozC2wgJ2c%2FKrI6oY1rpWvVyw7qagzbZIKogL%2B3Nl2KoIFCCcQABoMNTM3MjA0NzI1OTY2Igy1wqCc0on8ijL7Bmcq3wRGN07HslpaTfEloTQG7fnZbRTakABjXRsUczdjT%2Be6NRpxMbBKts0w0cIozcYtNZ2EBx41WcxKsD%2B6HIQbCsGOWRVhMWd23KnpHx0Y4xUttm8kHxNCmfOO%2FfmKWkzmlr4YbKty80urraJrWPnGfxRdZO3YwPaitQHZCJu9khonzDUtKkw27jPM1YxTulWoMh9GCrzhauNJP1Vq%2FUJDg%2BFNfQKls6XGA%2FZ0iFZzcZX8ZNoeIpvY6SLY7ocfzghljMYQCY3wPHUlP641owEXg%2BQWGVVFzdlQaM8sgQtbZAyPSVKT2306g12%2FppEBW9fxfto9i4GRptda%2F55a1%2Fn68JonfAUgJclxVgBK5T9hhtwe8kDWOuDMBQimtKm7zc2EO28lmMD0cMjp%2BwXtyllxd7C8H8zcOMnEUMrCycWuwQDYBFsLCrS3Tprcvw65mLxjrB%2FfyLSkwZrfTG3pGFVnCR3hGsBWM67QFMjpzRyarUo9nzcWPNtk77DxvKM3cE4PmcL%2FxPsE4pWuUFbo5xpzKdTZvmUDX8IdYb2KNQHvVrLqnvuwYru%2FtlXYD2W5DQsu7EmIOZdW%2Fow0zg%2B2IjzZzqlhWZUlLKzf6OJULSpZEYo59H12ybV4Mz7mfGdiMe74j4Sli0PSk8%2BQPTZJHSA3WlQQCdT%2FZ94IYX6tBjA0MSP28CjAjS82im2RcET%2BXMTF0yo2rzTohw8zSFjhvPmfV7KoN%2BlNrUSiAz5Aj3MxdhwViXz%2F3WDFbTp9Qp8bVn2FqhbBLiwGJRJHy2WbuHdnycJNrbQR0tW%2FEPybOcnGnWQOMIzv9aMGOpsBNd0A5xN%2BeKE%2FAzQ8KL1X%2BmMkqCv1z3Nhv1tmZcQJEF0BhSZfIWSCfOq9I3jAt4Hi5yZRNt3tj4n39IHUu6VXSUZqZdw2FgY5A9PTLN%2Fhj538d%2BrXLL85mlA8RaDO96dqZEN9G0mhePMZWx1zeLY123UUgUmudYLWkPFAxK6TMhx6GGuXtOgNEncRjE9DH5CiCAE9udmpzYcOLrE%3D&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=946bbe3bdaa6e0ecff9279cb3db2f304e8b2b1a6b7595bc85a02bc14312610c5
      expiration_time: "2023-06-06T06:42:05.381265582Z"
      id: 63df97e3-519b-4426-bf01-d1841cdc2ccd
    properties:
      id:
        type: string
        description: The unique identifier of the file.
      download_uri:
        type: string
        description: The URI that can be used to download the file.
      download_filename:
        type: string
        description: The original name that of the file.
      expiration_time:
        type: string
        format: date-time
        description: Indicating until when the download uri will be valid
    description: Response payload that could be returned upon successfully retrieving the download information of the file.
    title: DownloadFileResponse
  cms.v1.EndLiveResponse:
    type: object
  cms.v1.Export:
    type: object
    properties:
      cloud_storage:
        $ref: '#/definitions/cms.v1.ExportCloudStorage'
        description: Export encoded files to cloud storage.
  cms.v1.ExportCloudStorage:
    type: object
    properties:
      id:
        type: string
        description: The unique id of cloud storage.
  cms.v1.FAQ:
    type: object
    properties:
      id:
        type: string
        description: Output only. The resource identifier of banner.
        readOnly: true
      type:
        $ref: '#/definitions/cms.v1.FAQType'
        description: Required. The type of faq.
      sequence:
        type: integer
        format: int32
        description: 'Required. The sequence of faq. Range: 1-8.'
      org_type:
        $ref: '#/definitions/type.bv.v1.OrganizationType'
        description: Required. The type of organization.
      start_time:
        type: string
        format: date-time
        description: Required. The start time of the faq, which will be availabled on the console.
      end_time:
        type: string
        format: date-time
        description: Required. The end time of the faq, which will be disabled on the console.
      contents:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.FAQContent'
    required:
      - type
      - sequence
      - org_type
      - start_time
      - contents
  cms.v1.FAQContent:
    type: object
    properties:
      title:
        type: string
        description: Required. The title of faq.
      language_type:
        $ref: '#/definitions/type.bv.v1.LanguageType'
        description: Required. The language of banner.
      url:
        type: string
        description: Required. The url of faq.
      created_at:
        type: string
        format: date-time
        title: Output only
        readOnly: true
      updated_at:
        type: string
        format: date-time
        title: Output only
        readOnly: true
    required:
      - title
      - language_type
      - url
  cms.v1.FAQType:
    type: string
    enum:
      - FAQ_TYPE_UNSPECIFIED
      - FAQ_TYPE_ON_TOP
      - FAQ_TYPE_RECENT_UPDATED
    default: FAQ_TYPE_UNSPECIFIED
  cms.v1.File:
    type: object
    properties:
      id:
        type: string
        description: Output only. The unique id of the file.
        readOnly: true
      type:
        $ref: '#/definitions/cms.v1.FileType'
        description: Input only. The type of the file.
      name:
        type: string
        description: Input only. The name of the file.
      size:
        type: string
        format: int64
        description: Input only. The size of the file in bytes.
      uri:
        type: string
        description: Output only. The uri of the file.
        readOnly: true
      source:
        $ref: '#/definitions/cms.v1.FileSource'
        description: Required. The source of the file, only for display.
      attrs:
        type: object
        additionalProperties:
          type: string
        title: Optional. The additional attributes of the file
      created_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
    required:
      - source
  cms.v1.FileSource:
    type: string
    enum:
      - FILE_SOURCE_UNSPECIFIED
      - FILE_SOURCE_LIVE_EVENT
      - FILE_SOURCE_UPLOAD_IN_LIBRARY
      - FILE_SOURCE_ADD_VOD
      - FILE_SOURCE_CLOUD_STORAGE_AWS
    default: FILE_SOURCE_UNSPECIFIED
  cms.v1.FileType:
    type: string
    enum:
      - FILE_TYPE_UNSPECIFIED
      - FILE_TYPE_VIDEO
      - FILE_TYPE_IMAGE
      - FILE_TYPE_SUBTITLE
    default: FILE_TYPE_UNSPECIFIED
  cms.v1.GetBannerResponse:
    type: object
    properties:
      banner:
        $ref: '#/definitions/cms.v1.Banner'
  cms.v1.GetFAQResponse:
    type: object
    properties:
      faq:
        $ref: '#/definitions/cms.v1.FAQ'
  cms.v1.GetFileResponse:
    type: object
    example:
      file:
        attrs: {}
        created_at: "2023-04-06T10:48:26Z"
        id: 8c3540ce-c47e-4707-b81b-450f11226012
        name: video.mp4
        size: "260543670"
        source: FILE_SOURCE_ADD_VOD
        type: FILE_TYPE_VIDEO
        updated_at: "2023-04-06T10:49:21Z"
        uri: ""
    properties:
      file:
        $ref: '#/definitions/cms.v1.File'
  cms.v1.GetInstantEncodingResponse:
    type: object
    example:
      instant_encoding:
        expiration_time: "2023-05-25T03:08:46Z"
        id: 4b1e2f25-a8f3-490b-b91e-c030a9478ce8
        name: creep
        status: INSTANT_ENCODING_STATUS_SUCCEEDED
        stream:
          - manifests:
              - protocol: PROTOCOL_DASH
                uris:
                  - resolutions: []
                    uri: https://d3vj39meaxlc8.cloudfront.net/42f6c33e-f632-44e5-8042-05abb5fa2223/audio/4b1e2f25-a8f3-490b-b91e-c030a9478ce8/vod/dash.mpd
              - protocol: PROTOCOL_HLS
                uris:
                  - resolutions: []
                    uri: https://d3vj39meaxlc8.cloudfront.net/42f6c33e-f632-44e5-8042-05abb5fa2223/audio/4b1e2f25-a8f3-490b-b91e-c030a9478ce8/vod/hls.m3u8
            thumbnail: null
    properties:
      instant_encoding:
        $ref: '#/definitions/cms.v1.InstantEncoding'
    description: Response payload that could be returned upon successfully fetching an instant encoding.
    title: GetInstantEncodingResponse
  cms.v1.GetLiveByCustomIDResponse:
    type: object
    example:
      live:
        broadcast_mode: BROADCAST_MODE_TRADITIONAL_LIVE
        cover_images:
          close: null
          current: null
          end: null
          player_pause: null
          preview: null
          ready_to_start: null
          signal_interruption: null
        created_at: "2023-05-31T06:53:43Z"
        error_infos: []
        id: 860d49b8-2ca8-4030-b5ff-f6ec3a1c6196
        ingest_types:
          - LIVE_STREAM_INGEST_TYPE_RTMP
        interaction:
          chatroom:
            live:
              enabled: false
              theme: CHATROOM_THEME_UNSPECIFIED
            vod:
              enabled: false
              theme: CHATROOM_THEME_UNSPECIFIED
          event_id: ""
          poll_enabled: false
        labels: []
        name: Amazing Live
        resolution: LIVE_RESOLUTION_HD
        save_for_download_enabled: false
        security:
          domain_control:
            domains: []
            enabled: false
          geo_control: []
          privacy:
            token: null
            type: SECURITY_PRIVACY_TYPE_PUBLIC
          protection:
            type: PROTECTION_TYPE_UNSPECIFIED
          watermark:
            enabled: false
            position: WATERMARK_POSITION_UNSPECIFIED
            type: WATERMARK_TYPE_UNSPECIFIED
        setup:
          rtmp:
            links:
              - pipeline: LIVE_STREAM_PIPELINE_MAIN
                url: rtmp://43.207.253.193:1935/live1/stream
              - pipeline: LIVE_STREAM_PIPELINE_BACKUP
                url: rtmp://35.76.157.169:1935/live2/stream
          whip:
            links: []
        source: null
        status: LIVE_STATUS_WAIT_FOR_PREVIEW
        stream:
          - manifests:
              - protocol: PROTOCOL_HLS
                uris:
                  - resolutions:
                      - height: "720"
                        width: "1280"
                      - height: "480"
                        width: "852"
                      - height: "360"
                        width: "640"
                      - height: "240"
                        width: "426"
                    uri: https://dh8gxyds8vhu6.cloudfront.net/out/v1/2c4a1f16173244eea3a6b9ce8bfb510c/index.m3u8
              - protocol: PROTOCOL_DASH
                uris:
                  - resolutions:
                      - height: "720"
                        width: "1280"
                      - height: "480"
                        width: "852"
                      - height: "360"
                        width: "640"
                      - height: "240"
                        width: "426"
                    uri: https://dh8gxyds8vhu6.cloudfront.net/out/v1/1854c1bbbb404ae2b2f8aa8f41ba7ede/index.mpd
            thumbnail: null
        type: LIVE_TYPE_LIVE
        ull_enabled: false
        updated_at: "2023-05-31T06:55:46Z"
    properties:
      live:
        $ref: '#/definitions/cms.v1.Live'
  cms.v1.GetLiveInteractionChatroomLastAdminNameResponse:
    type: object
    properties:
      name:
        type: string
        description: Required. The admin name in chatroom.
        readOnly: true
  cms.v1.GetLiveMetricsResponse:
    type: object
    example:
      metrics:
        - datapoints:
            - time: "2023-07-28T09:40:00Z"
              value:
                value: "2.839086266666667"
          dimension: main
          type: LIVE_METRIC_TYPE_NETWORK_IN
        - datapoints:
            - time: "2023-07-28T09:40:00Z"
              value:
                value: "29.940749999999984"
          dimension: main
          type: LIVE_METRIC_TYPE_FRAME_RATE
        - datapoints:
            - time: "2023-07-28T09:40:00Z"
              value:
                value: "0.00014933333333333332"
          dimension: backup
          type: LIVE_METRIC_TYPE_NETWORK_IN
        - datapoints:
            - time: "2023-07-28T09:40:00Z"
              value:
                value: "0"
          dimension: backup
          type: LIVE_METRIC_TYPE_FRAME_RATE
    properties:
      metrics:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.LiveMetric'
  cms.v1.GetLiveResponse:
    type: object
    example:
      live:
        broadcast_mode: BROADCAST_MODE_TRADITIONAL_LIVE
        cover_images:
          close: null
          current: null
          end: null
          player_pause: null
          preview: null
          ready_to_start: null
          signal_interruption: null
        created_at: "2023-05-31T06:53:43Z"
        error_infos: []
        id: 860d49b8-2ca8-4030-b5ff-f6ec3a1c6196
        ingest_types:
          - LIVE_STREAM_INGEST_TYPE_RTMP
        interaction:
          chatroom:
            live:
              enabled: false
              theme: CHATROOM_THEME_UNSPECIFIED
            vod:
              enabled: false
              theme: CHATROOM_THEME_UNSPECIFIED
          event_id: ""
          poll_enabled: false
        labels: []
        name: Amazing Live
        resolution: LIVE_RESOLUTION_HD
        save_for_download_enabled: false
        security:
          domain_control:
            domains: []
            enabled: false
          geo_control: []
          privacy:
            token: null
            type: SECURITY_PRIVACY_TYPE_PUBLIC
          protection:
            type: PROTECTION_TYPE_UNSPECIFIED
          watermark:
            enabled: false
            position: WATERMARK_POSITION_UNSPECIFIED
            type: WATERMARK_TYPE_UNSPECIFIED
        setup:
          rtmp:
            links:
              - pipeline: LIVE_STREAM_PIPELINE_MAIN
                url: rtmp://43.207.253.193:1935/live1/stream
              - pipeline: LIVE_STREAM_PIPELINE_BACKUP
                url: rtmp://35.76.157.169:1935/live2/stream
          whip:
            links: []
        source: null
        status: LIVE_STATUS_WAIT_FOR_PREVIEW
        stream:
          - manifests:
              - protocol: PROTOCOL_HLS
                uris:
                  - resolutions:
                      - height: "720"
                        width: "1280"
                      - height: "480"
                        width: "852"
                      - height: "360"
                        width: "640"
                      - height: "240"
                        width: "426"
                    uri: https://dh8gxyds8vhu6.cloudfront.net/out/v1/2c4a1f16173244eea3a6b9ce8bfb510c/index.m3u8
              - protocol: PROTOCOL_DASH
                uris:
                  - resolutions:
                      - height: "720"
                        width: "1280"
                      - height: "480"
                        width: "852"
                      - height: "360"
                        width: "640"
                      - height: "240"
                        width: "426"
                    uri: https://dh8gxyds8vhu6.cloudfront.net/out/v1/1854c1bbbb404ae2b2f8aa8f41ba7ede/index.mpd
            thumbnail: null
        type: LIVE_TYPE_LIVE
        ull_enabled: false
        updated_at: "2023-05-31T06:55:46Z"
    properties:
      live:
        $ref: '#/definitions/cms.v1.Live'
  cms.v1.GetMeetingResponse:
    type: object
    properties:
      meeting:
        $ref: '#/definitions/cms.v1.Meeting'
  cms.v1.GetMeetingSessionInfoResponse:
    type: object
    properties:
      id:
        type: string
        description: Output only. The unique id to connect to the meeting. It will be available 6 hours before the meeting starts.
        readOnly: true
      name:
        type: string
        description: Output only. The access token to connect to the meeting. It will be available 6 hours before the meeting starts.
        readOnly: true
      token:
        type: string
        description: Output only. The access token to connect to the meeting. It will be available 6 hours before the meeting starts.
        readOnly: true
  cms.v1.GetResourceByRedeemCodeResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/cms.v1.Resource'
  cms.v1.GetResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/cms.v1.Resource'
  cms.v1.GetTutorialResponse:
    type: object
    properties:
      tutorial:
        $ref: '#/definitions/cms.v1.Tutorial'
  cms.v1.GetVODResponse:
    type: object
    example:
      vod:
        cover_image:
          auto:
            name: AUTO
            size: "39430"
            url: https://d3r4shtv85jcno.cloudfront.net/42f6c33e-f632-44e5-8042-05abb5fa2223/vod/dfd6e1a9-3f38-43dc-9966-f35caefe77b5/cover_image/cover_image.jpg
          type: COVER_IMAGE_TYPE_AUTO
          updated_at: "2023-05-30T10:43:37Z"
        created_at: "2023-05-30T10:34:29Z"
        export: null
        id: aca7071e-f09a-4bc5-8955-5f316142f574
        labels: []
        metadata:
          labels: []
          long_description: ""
          short_description: ""
        name: video.mp4
        previous_status: VOD_STATUS_ENCODED
        profile_set:
          id: 6a2b2ea3-9e35-4216-93c9-da09dee5ab12
          multiple_audio_track:
            lang_customizes: []
            lang_from: LANG_FROM_FIRST_TRACK
          name: H.264-1080P-30fps
          preset: false
          profiles:
            - audio_bitrate: "128"
              b_frame: true
              codec_profile: CODEC_PROFILE_AUTO
              frame_rate: FRAME_RATE_30
              gop_size: 2
              id: 57acf6c4-688e-47c5-a4f9-548c64ef6ddb
              level: CODEC_PROFILE_LEVEL_AUTO
              name: 1080p-5Mbps
              preset: false
              segment_duration: 6
              standard: RESOLUTION_TYPE_UNSPECIFIED
              video_bitrate: "5000"
              video_codec: VIDEO_CODEC_H264
              video_height: 1080
              video_width: 1920
            - audio_bitrate: "128"
              b_frame: true
              codec_profile: CODEC_PROFILE_AUTO
              frame_rate: FRAME_RATE_30
              gop_size: 2
              id: d8b7caa0-7487-4cdf-ab64-44cf54783d34
              level: CODEC_PROFILE_LEVEL_AUTO
              name: 720p-2.5Mbps
              preset: false
              segment_duration: 6
              standard: RESOLUTION_TYPE_UNSPECIFIED
              video_bitrate: "2500"
              video_codec: VIDEO_CODEC_H264
              video_height: 720
              video_width: 1440
            - audio_bitrate: "96"
              b_frame: true
              codec_profile: CODEC_PROFILE_AUTO
              frame_rate: FRAME_RATE_30
              gop_size: 2
              id: 39861dab-83da-4cd7-bb58-7ae6af648c19
              level: CODEC_PROFILE_LEVEL_AUTO
              name: 480p-1.5Mbps
              preset: false
              segment_duration: 6
              standard: RESOLUTION_TYPE_UNSPECIFIED
              video_bitrate: "1500"
              video_codec: VIDEO_CODEC_H264
              video_height: 480
              video_width: 850
            - audio_bitrate: "96"
              b_frame: true
              codec_profile: CODEC_PROFILE_AUTO
              frame_rate: FRAME_RATE_30
              gop_size: 2
              id: 31bb7972-1c87-44c2-a07c-fe9d18321644
              level: CODEC_PROFILE_LEVEL_AUTO
              name: 360p-700kbps
              preset: false
              segment_duration: 6
              standard: RESOLUTION_TYPE_UNSPECIFIED
              video_bitrate: "700"
              video_codec: VIDEO_CODEC_H264
              video_height: 360
              video_width: 640
            - audio_bitrate: "64"
              b_frame: true
              codec_profile: CODEC_PROFILE_AUTO
              frame_rate: FRAME_RATE_30
              gop_size: 2
              id: 54479d60-c1ba-41fa-898b-3d7fe983b5ac
              level: CODEC_PROFILE_LEVEL_AUTO
              name: 240p-400kbps
              preset: false
              segment_duration: 6
              standard: RESOLUTION_TYPE_UNSPECIFIED
              video_bitrate: "400"
              video_codec: VIDEO_CODEC_H264
              video_height: 240
              video_width: 426
          protocols:
            - PROTOCOL_DASH
            - PROTOCOL_HLS
          smart_abr: false
          video_codec: VIDEO_CODEC_H264
        pte:
          profile: PTE_PROFILE_UNSPECIFIED
        queue: QUEUE_STANDARD
        schedule:
          enable: false
          end_time: null
          start_time: null
        security:
          domain_control:
            domains: []
            enabled: false
          geo_control: []
          privacy:
            token: null
            type: SECURITY_PRIVACY_TYPE_PUBLIC
          protection:
            type: PROTECTION_TYPE_UNSPECIFIED
          watermark:
            enabled: false
            position: WATERMARK_POSITION_UNSPECIFIED
            type: WATERMARK_TYPE_UNSPECIFIED
        source:
          cloud_storage: null
          library:
            subtitles:
              - code: eng
                display: English
                id: 24bc359e-3fe3-4cb6-9278-1a1ceaf35d52
                name: example.srt
            video:
              id: 63df97e3-519b-4426-bf01-d1841cdc2ccd
          type: SOURCE_TYPE_LIBRARY
        source_file_info:
          audios:
            - bitrate: "128"
              codec: AUDIO_CODEC_AAC
              lang: und
              sample_rate: "48000"
          bitrate: "2337"
          duration: 300.032
          file_name: video.mp4
          size: "92797819"
          video:
            aspect_ratio: DISPLAY_ASPECT_RATIO_16_9
            bitrate: "2337"
            codec: VIDEO_CODEC_H264
            frame_rate: FRAME_RATE_UNSPECIFIED
            height: 1080
            interlace: false
            width: 1920
        status: VOD_STATUS_SUCCEEDED
        stream:
          - manifests:
              - protocol: PROTOCOL_DASH
                uris:
                  - resolutions:
                      - height: "1080"
                        width: "1920"
                      - height: "720"
                        width: "1280"
                      - height: "480"
                        width: "854"
                      - height: "360"
                        width: "640"
                      - height: "240"
                        width: "426"
                    uri: https://d3r4shtv85jcno.cloudfront.net/42f6c33e-f632-44e5-8042-05abb5fa2223/vod/dfd6e1a9-3f38-43dc-9966-f35caefe77b5/vod/dash.mpd
              - protocol: PROTOCOL_HLS
                uris:
                  - resolutions:
                      - height: "1080"
                        width: "1920"
                      - height: "720"
                        width: "1280"
                      - height: "480"
                        width: "854"
                      - height: "360"
                        width: "640"
                      - height: "240"
                        width: "426"
                    uri: https://d3r4shtv85jcno.cloudfront.net/42f6c33e-f632-44e5-8042-05abb5fa2223/vod/dfd6e1a9-3f38-43dc-9966-f35caefe77b5/vod/hls.m3u8
            thumbnail:
              uri: https://d3r4shtv85jcno.cloudfront.net/42f6c33e-f632-44e5-8042-05abb5fa2223/vod/dfd6e1a9-3f38-43dc-9966-f35caefe77b5/thumbnail/00/thumbnails.vtt
        updated_at: "2023-05-30T10:43:49Z"
    properties:
      vod:
        $ref: '#/definitions/cms.v1.VOD'
        title: The VOD resource
  cms.v1.InstantEncoding:
    type: object
    properties:
      stream:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.Stream'
        description: The stream manifest URLs of the instant encoding
        readOnly: true
      status:
        $ref: '#/definitions/cms.v1.InstantEncodingStatus'
        description: The status of the instant encoding
        readOnly: true
      id:
        type: string
        description: The unique id of the instant encoding. User can fetch instant encoding data by this id.
        readOnly: true
      name:
        type: string
        description: The name of the instant encoding.
        readOnly: true
      expiration_time:
        type: string
        format: date-time
        description: The expiration time of the instant encoding
        readOnly: true
      create_time:
        type: string
        format: date-time
        description: The create time of the instant encoding
        readOnly: true
  cms.v1.InstantEncodingStatus:
    type: string
    enum:
      - INSTANT_ENCODING_STATUS_UNSPECIFIED
      - INSTANT_ENCODING_STATUS_CREATED
      - INSTANT_ENCODING_STATUS_SEMI_SUCCESSFUL
      - INSTANT_ENCODING_STATUS_SUCCEEDED
      - INSTANT_ENCODING_STATUS_FAILED
    default: INSTANT_ENCODING_STATUS_UNSPECIFIED
    description: |2-
       - INSTANT_ENCODING_STATUS_CREATED: INSTANT_ENCODING_STATUS_CREATED indicates that the instant encoding is generated successfully.
       - INSTANT_ENCODING_STATUS_SEMI_SUCCESSFUL: INSTANT_ENCODING_STATUS_SEMI_SUCCESSFUL indicates that the instant encoding can be played partially.
       - INSTANT_ENCODING_STATUS_SUCCEEDED: INSTANT_ENCODING_STATUS_SUCCEEDED indicates that the instant encoding can be played normally.
       - INSTANT_ENCODING_STATUS_FAILED: INSTANT_ENCODING_STATUS_FAILED indicates that the instant encoding indicates that the instant encoding has failed and cannot be played normally.
  cms.v1.Interaction:
    type: object
    properties:
      poll_enabled:
        type: boolean
        description: Optional. Indicates the poll is enabled or not.
      chatroom:
        $ref: '#/definitions/cms.v1.Chatroom'
        description: Optional. Idicates the chatroom settings.
      event_id:
        type: string
        description: Output only. Empty if poll and chatroom are disabled.
        readOnly: true
      chat_id:
        type: string
        description: Output only. Empty if chatroom are disabled.
        readOnly: true
  cms.v1.ListBannersResponse:
    type: object
    properties:
      banners:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.Banner'
  cms.v1.ListFAQsResponse:
    type: object
    properties:
      faqs:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.FAQ'
  cms.v1.ListFileFilter:
    type: object
    properties:
      name:
        type: string
        title: Filter by the name of file
  cms.v1.ListFilesResponse:
    type: object
    example:
      files:
        - attrs: {}
          created_at: "2023-04-24T10:06:05Z"
          id: c6e45129-6353-478c-bec4-cafc3af506ca
          name: video.mp4
          size: "260543670"
          source: FILE_SOURCE_ADD_VOD
          type: FILE_TYPE_VIDEO
          updated_at: "2023-04-24T10:07:03Z"
          uri: ""
        - attrs: {}
          created_at: "2023-04-06T10:48:26Z"
          id: 8c3540ce-c47e-4707-b81b-450f11226012
          name: video.mp4
          size: "260543670"
          source: FILE_SOURCE_ADD_VOD
          type: FILE_TYPE_VIDEO
          updated_at: "2023-04-06T10:49:21Z"
          uri: ""
      pagination:
        current_page: 1
        items_per_page: 10
        total_items: 2
    properties:
      files:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.File'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  cms.v1.ListLiveFilter:
    type: object
    properties:
      name:
        type: string
        description: Optional. If set, filter with the lives which names contain the given string.
  cms.v1.ListLivesResponse:
    type: object
    example:
      lives:
        - broadcast_mode: BROADCAST_MODE_TRADITIONAL_LIVE
          cover_images:
            close: null
            current: null
            end: null
            player_pause: null
            preview: null
            ready_to_start: null
            signal_interruption: null
          created_at: "2023-05-31T06:53:43Z"
          error_infos: []
          id: 860d49b8-2ca8-4030-b5ff-f6ec3a1c6196
          ingest_types:
            - LIVE_STREAM_INGEST_TYPE_RTMP
          interaction:
            chatroom:
              live:
                enabled: false
                theme: CHATROOM_THEME_UNSPECIFIED
              vod:
                enabled: false
                theme: CHATROOM_THEME_UNSPECIFIED
            event_id: ""
            poll_enabled: false
          labels: []
          name: Amazing Live
          resolution: LIVE_RESOLUTION_HD
          save_for_download_enabled: false
          security:
            domain_control:
              domains: []
              enabled: false
            geo_control: []
            privacy:
              token: null
              type: SECURITY_PRIVACY_TYPE_PUBLIC
            protection:
              type: PROTECTION_TYPE_UNSPECIFIED
            watermark:
              enabled: false
              position: WATERMARK_POSITION_UNSPECIFIED
              type: WATERMARK_TYPE_UNSPECIFIED
          setup: null
          source: null
          status: LIVE_STATUS_WAIT_FOR_PREVIEW
          stream: []
          type: LIVE_TYPE_LIVE
          ull_enabled: false
          updated_at: "2023-05-31T06:55:46Z"
      pagination:
        current_page: 1
        items_per_page: 1
        total_items: 84
    properties:
      lives:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.Live'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  cms.v1.ListMeetingsResponse:
    type: object
    properties:
      meetings:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.Meeting'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  cms.v1.ListNotificationsResponse:
    type: object
    properties:
      notifications:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.Notification'
        title: Array of `notification` resources
  cms.v1.ListRedeemCodesResponse:
    type: object
    properties:
      redeem_codes:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.RedeemCode'
  cms.v1.ListTutorialsResponse:
    type: object
    properties:
      tutorials:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.Tutorial'
  cms.v1.ListVODFilter:
    type: object
    properties:
      name:
        type: string
        title: Filter by the name of VOD
      status:
        $ref: '#/definitions/cms.v1.VODStatus'
        title: Filter by the status of VOD
  cms.v1.ListVODStatusResponse:
    type: object
    example:
      stages:
        - code: ""
          complete_time: "2023-06-01T07:15:06Z"
          error_infos: []
          message: ""
          status: VOD_STATUS_CREATED
        - code: ""
          complete_time: "2023-06-01T07:15:36Z"
          error_infos: []
          message: ""
          status: VOD_STATUS_INGESTED
        - code: ""
          complete_time: "2023-06-01T07:15:06Z"
          error_infos: []
          message: ""
          status: VOD_STATUS_QUEUED
        - code: ""
          complete_time: "2023-06-01T07:25:11Z"
          error_infos: []
          message: ""
          status: VOD_STATUS_ENCODED
        - code: ""
          complete_time: "2023-06-01T07:25:11Z"
          error_infos: []
          message: ""
          status: VOD_STATUS_DEPLOYED
        - code: ""
          complete_time: "2023-06-01T07:25:11Z"
          error_infos: []
          message: ""
          status: VOD_STATUS_SUCCEEDED
    properties:
      stages:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.VODStatusLog'
        description: The status history of a VOD resource.
  cms.v1.ListVODsResponse:
    type: object
    example:
      pagination:
        current_page: 1
        items_per_page: 1
        total_items: 4
      vods:
        - cover_image:
            auto:
              name: AUTO
              size: "39430"
              url: https://d2phckhdmmr5j9.cloudfront.net/599cf558-1793-496d-820f-1a2aaf897464/vod/4fdb2d4d-4db8-4ab7-a440-c7dd6f4aa7c7/cover_image/cover_image.jpg
            type: COVER_IMAGE_TYPE_AUTO
            updated_at: "2023-05-03T04:05:49Z"
          created_at: "2023-05-03T03:57:37Z"
          export: null
          id: e3137a60-d41b-46d0-8813-8341b4f987d0
          labels: []
          metadata:
            labels: []
            long_description: ""
            short_description: ""
          name: video.mp4
          previous_status: VOD_STATUS_DEPLOYED
          profile_set:
            id: 6a2b2ea3-9e35-4216-93c9-da09dee5ab12
            multiple_audio_track:
              lang_customizes: []
              lang_from: LANG_FROM_FIRST_TRACK
            name: H.264-1080P-30fps
            preset: false
            profiles:
              - audio_bitrate: "128"
                b_frame: true
                codec_profile: CODEC_PROFILE_AUTO
                frame_rate: FRAME_RATE_30
                gop_size: 2
                id: 57acf6c4-688e-47c5-a4f9-548c64ef6ddb
                level: CODEC_PROFILE_LEVEL_AUTO
                name: 1080p-5Mbps
                preset: false
                segment_duration: 6
                standard: RESOLUTION_TYPE_UNSPECIFIED
                video_bitrate: "5000"
                video_codec: VIDEO_CODEC_H264
                video_height: 1080
                video_width: 1920
              - audio_bitrate: "128"
                b_frame: true
                codec_profile: CODEC_PROFILE_AUTO
                frame_rate: FRAME_RATE_30
                gop_size: 2
                id: d8b7caa0-7487-4cdf-ab64-44cf54783d34
                level: CODEC_PROFILE_LEVEL_AUTO
                name: 720p-2.5Mbps
                preset: false
                segment_duration: 6
                standard: RESOLUTION_TYPE_UNSPECIFIED
                video_bitrate: "2500"
                video_codec: VIDEO_CODEC_H264
                video_height: 720
                video_width: 1440
              - audio_bitrate: "96"
                b_frame: true
                codec_profile: CODEC_PROFILE_AUTO
                frame_rate: FRAME_RATE_30
                gop_size: 2
                id: 39861dab-83da-4cd7-bb58-7ae6af648c19
                level: CODEC_PROFILE_LEVEL_AUTO
                name: 480p-1.5Mbps
                preset: false
                segment_duration: 6
                standard: RESOLUTION_TYPE_UNSPECIFIED
                video_bitrate: "1500"
                video_codec: VIDEO_CODEC_H264
                video_height: 480
                video_width: 850
              - audio_bitrate: "96"
                b_frame: true
                codec_profile: CODEC_PROFILE_AUTO
                frame_rate: FRAME_RATE_30
                gop_size: 2
                id: 31bb7972-1c87-44c2-a07c-fe9d18321644
                level: CODEC_PROFILE_LEVEL_AUTO
                name: 360p-700kbps
                preset: false
                segment_duration: 6
                standard: RESOLUTION_TYPE_UNSPECIFIED
                video_bitrate: "700"
                video_codec: VIDEO_CODEC_H264
                video_height: 360
                video_width: 640
              - audio_bitrate: "64"
                b_frame: true
                codec_profile: CODEC_PROFILE_AUTO
                frame_rate: FRAME_RATE_30
                gop_size: 2
                id: 54479d60-c1ba-41fa-898b-3d7fe983b5ac
                level: CODEC_PROFILE_LEVEL_AUTO
                name: 240p-400kbps
                preset: false
                segment_duration: 6
                standard: RESOLUTION_TYPE_UNSPECIFIED
                video_bitrate: "400"
                video_codec: VIDEO_CODEC_H264
                video_height: 240
                video_width: 426
            protocols:
              - PROTOCOL_DASH
              - PROTOCOL_HLS
            smart_abr: false
            video_codec: VIDEO_CODEC_H264
          pte:
            profile: PTE_PROFILE_UNSPECIFIED
          queue: QUEUE_STANDARD
          schedule: null
          security:
            domain_control:
              domains: []
              enabled: false
            geo_control: []
            privacy:
              token: null
              type: SECURITY_PRIVACY_TYPE_PUBLIC
            protection:
              type: PROTECTION_TYPE_UNSPECIFIED
            watermark:
              enabled: false
              position: WATERMARK_POSITION_UNSPECIFIED
              type: WATERMARK_TYPE_UNSPECIFIED
          source:
            cloud_storage: null
            library:
              subtitles: []
              video:
                id: 73a07b42-aacb-425a-b7e5-e2e0c0b3b394
            type: SOURCE_TYPE_LIBRARY
          source_file_info:
            audios:
              - bitrate: "129"
                codec: AUDIO_CODEC_AAC
                lang: und
                sample_rate: "44100"
            bitrate: "8027"
            duration: 10.334
            file_name: video.mp4
            size: "10548428"
            video:
              aspect_ratio: DISPLAY_ASPECT_RATIO_UNSPECIFIED
              bitrate: "8027"
              codec: VIDEO_CODEC_H264
              frame_rate: FRAME_RATE_UNSPECIFIED
              height: 1920
              interlace: false
              width: 1080
          status: VOD_STATUS_SUCCEEDED
          stream:
            - manifests:
                - protocol: PROTOCOL_DASH
                  uris:
                    - resolutions:
                        - height: "1080"
                          width: "608"
                        - height: "720"
                          width: "406"
                        - height: "480"
                          width: "270"
                        - height: "360"
                          width: "202"
                        - height: "240"
                          width: "136"
                      uri: https://d2phckhdmmr5j9.cloudfront.net/599cf558-1793-496d-820f-1a2aaf897464/vod/4fdb2d4d-4db8-4ab7-a440-c7dd6f4aa7c7/vod/dash.mpd
                - protocol: PROTOCOL_HLS
                  uris:
                    - resolutions:
                        - height: "1080"
                          width: "608"
                        - height: "720"
                          width: "406"
                        - height: "480"
                          width: "270"
                        - height: "360"
                          width: "202"
                        - height: "240"
                          width: "136"
                      uri: https://d2phckhdmmr5j9.cloudfront.net/599cf558-1793-496d-820f-1a2aaf897464/vod/4fdb2d4d-4db8-4ab7-a440-c7dd6f4aa7c7/vod/hls.m3u8
              thumbnail:
                uri: https://d2phckhdmmr5j9.cloudfront.net/599cf558-1793-496d-820f-1a2aaf897464/vod/4fdb2d4d-4db8-4ab7-a440-c7dd6f4aa7c7/thumbnail/00/thumbnails.vtt
          updated_at: "2023-05-03T04:05:52Z"
    properties:
      vods:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.VOD'
        title: Array of `VOD` resources
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
        title: Pagination information
  cms.v1.Live:
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: Output only. The unique id of the live.
        readOnly: true
      name:
        type: string
        description: Optional. The name of the live.
        maxLength: 100
      custom_id:
        type: string
        description: Optional. The unique custom id of the live.
        maxLength: 150
        minLength: 1
        pattern: ^[a-zA-Z0-9._-]{1,150}$
      type:
        $ref: '#/definitions/cms.v1.LiveType'
        description: Required. Immutable. Indicates the type of the live.
      source:
        $ref: '#/definitions/cms.v1.LiveSource'
        description: Optional. Required if `type` is `LIVE_TYPE_SIMULIVE`. Specify the pre-recorded video source for the live.
      broadcast_mode:
        $ref: '#/definitions/cms.v1.BroadcastMode'
        description: Required. Immutable. Indicates the broadcast mode of the live.
      scheduled_at:
        type: string
        format: date-time
        description: |-
          Optional. Only used when `type` is `LIVE_TYPE_SIMULIVE`. The live will start at the scheduled time if it is set.
          Otherwise, start immediately.
      resolution:
        $ref: '#/definitions/cms.v1.LiveResolution'
        description: Required. Immutable. Required if `broadcast_mode` is not `BROADCAST_MODE_PLAYBACK`.
      live_vod:
        $ref: '#/definitions/cms.v1.LiveVOD'
        description: Optional. Indicates recording the live event after the live ended if it is set.
      security:
        $ref: '#/definitions/cms.v1.Security'
        description: Required. The security settings for the live.
      ull_enabled:
        type: boolean
        description: Optional. Enable ultra-low-latency streaming.
      cover_images:
        $ref: '#/definitions/cms.v1.LiveCoverImages'
        description: Optional. Customize the cover images on the player.
      metadata:
        $ref: '#/definitions/type.bv.v1.Metadata'
        description: Optional. The metadata of the live.
      showroom:
        $ref: '#/definitions/type.bv.v1.Showroom'
        description: Optional. Customize the preferences on showroom.
      interaction:
        $ref: '#/definitions/cms.v1.Interaction'
        description: Optional. Indicates the interaction settings.
      setup:
        $ref: '#/definitions/cms.v1.LiveSetup'
        description: Output only. The setup for live streaming.
        readOnly: true
      stream:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.Stream'
        description: Output only. The streaming information for playback.
        readOnly: true
      labels:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.Label'
        description: Output only. The labels of the live.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the live that was created.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the live that was updated.
        readOnly: true
      status:
        $ref: '#/definitions/cms.v1.LiveStatus'
        description: Output only. The status of the live.
        readOnly: true
      started_time:
        type: string
        format: date-time
        description: Output only. The timestamp of the live that was started.
        readOnly: true
      ended_time:
        type: string
        format: date-time
        description: Output only.  The timestamp of the live that was ended.
        readOnly: true
      save_for_download_enabled:
        type: boolean
        description: Optional. Enable live recording for download.
      ingest_types:
        type: array
        items:
          $ref: '#/definitions/cms.v1.LiveStreamIngestType'
        description: |-
          Optional. Immutable. The types for ingesting live streaming.
          Default: ['LIVE_STREAM_INGEST_TYPE_RTMP']
          Notice: Multiple ingest types are not supported yet.
      byo_cdn:
        $ref: '#/definitions/cms.v1.ByoCdn'
        description: Optional. The setting of bring-your-own cdn.
      player_setting:
        $ref: '#/definitions/type.bv.v1.PlayerSetting'
        description: Output Only. Customize the preferences on player.
        readOnly: true
      player:
        $ref: '#/definitions/cms.v1.Player'
        description: Input only. Customize the preferences on player setting id.
      error_infos:
        type: array
        items:
          type: object
          $ref: '#/definitions/google.rpc.ErrorInfo'
        description: Output only. Optional. A list of messages that carry the error infos when live is failed.
        readOnly: true
    required:
      - type
      - broadcast_mode
      - resolution
      - security
  cms.v1.LiveCoverImages:
    type: object
    properties:
      ready_to_start:
        $ref: '#/definitions/type.bv.v1.CoverImage'
        description: Input only. The cover image when the live is ready to start.
      preview:
        $ref: '#/definitions/type.bv.v1.CoverImage'
        description: Input only. The cover image when the live is previewing.
      player_pause:
        $ref: '#/definitions/type.bv.v1.CoverImage'
        description: Input only. The cover image when the player is paused.
      signal_interruption:
        $ref: '#/definitions/type.bv.v1.CoverImage'
        description: Input only. The cover image when the signal is interrupted.
      end:
        $ref: '#/definitions/type.bv.v1.CoverImage'
        description: Input only. The cover image when the live is ended.
      close:
        $ref: '#/definitions/type.bv.v1.CoverImage'
        description: Input only. The cover image when the live is closed.
      current:
        $ref: '#/definitions/type.bv.v1.CoverImage'
        description: Output only. The current cover image for playback.
        readOnly: true
  cms.v1.LiveMetric:
    type: object
    properties:
      type:
        $ref: '#/definitions/cms.v1.LiveMetricType'
        description: The metric type requested.
      dimension:
        type: string
        description: Optional. The dimension for the metric.
      datapoints:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.LiveMetricDatapoint'
        description: The datapoints for the metric.
  cms.v1.LiveMetricDatapoint:
    type: object
    properties:
      time:
        type: string
        format: date-time
        description: The timestamp for the datapoint.
      value:
        $ref: '#/definitions/google.type.Decimal'
        description: The value for the datapoint.
  cms.v1.LiveMetricType:
    type: string
    enum:
      - LIVE_METRIC_TYPE_UNSPECIFIED
      - LIVE_METRIC_TYPE_NETWORK_IN
      - LIVE_METRIC_TYPE_FRAME_RATE
      - LIVE_METRIC_TYPE_CONCURRENT_USER
    default: LIVE_METRIC_TYPE_UNSPECIFIED
    title: |-
      - LIVE_METRIC_TYPE_NETWORK_IN: The rate of traffic coming into the streaming server. Unit: Mbps.
       - LIVE_METRIC_TYPE_FRAME_RATE: The frame rate of the input content. Unit: fps
       - LIVE_METRIC_TYPE_CONCURRENT_USER: The concurrent user of the input content. Unit: number of users
  cms.v1.LiveResolution:
    type: string
    enum:
      - LIVE_RESOLUTION_UNSPECIFIED
      - LIVE_RESOLUTION_HD
      - LIVE_RESOLUTION_FHD
      - LIVE_RESOLUTION_4K
    default: LIVE_RESOLUTION_UNSPECIFIED
    title: |-
      - LIVE_RESOLUTION_HD: 720p resolution (1280 * 720 pixels)
       - LIVE_RESOLUTION_FHD: 1080p resolution (1920 * 1080 pixels)
       - LIVE_RESOLUTION_4K: 4K resolution (3840 * 2160 pixels)
  cms.v1.LiveSetup:
    type: object
    properties:
      rtmp:
        $ref: '#/definitions/cms.v1.RTMPSetup'
        description: Output only. The setup for RTMP live streaming. It is only available when `ingest_types` contains `LIVE_STREAM_INGEST_TYPE_RTMP`.
        readOnly: true
      whip:
        $ref: '#/definitions/cms.v1.WHIPSetup'
        description: Output only. The setup for WHIP live streaming. It is only available when `ingest_types` contains `LIVE_STREAM_INGEST_TYPE_WHIP`.
        readOnly: true
  cms.v1.LiveSource:
    type: object
    properties:
      type:
        $ref: '#/definitions/cms.v1.LiveSourceType'
        description: Required. Indicates the simulive type to choices.
      library:
        $ref: '#/definitions/cms.v1.LiveSourceLibrary'
        description: Input only. Required if `type` is `LIVE_SOURCE_TYPE_LIBRARY`. Specify the video srouce from library.
  cms.v1.LiveSourceLibrary:
    type: object
    properties:
      id:
        type: string
        description: Required. The video library id as the source of the simulive.
      name:
        type: string
        description: Output only. The video library name.
        readOnly: true
    required:
      - id
  cms.v1.LiveSourceType:
    type: string
    enum:
      - LIVE_SOURCE_TYPE_UNSPECIFIED
      - LIVE_SOURCE_TYPE_LIBRARY
    default: LIVE_SOURCE_TYPE_UNSPECIFIED
    description: ' - LIVE_SOURCE_TYPE_LIBRARY: The pre-recorded video source from library.'
  cms.v1.LiveStatus:
    type: string
    enum:
      - LIVE_STATUS_UNSPECIFIED
      - LIVE_STATUS_PREPARING
      - LIVE_STATUS_SCHEDULED
      - LIVE_STATUS_WAIT_FOR_PREVIEW
      - LIVE_STATUS_INITIATING
      - LIVE_STATUS_PREVIEW
      - LIVE_STATUS_LIVE
      - LIVE_STATUS_LIVE_END
      - LIVE_STATUS_ENCODING
      - LIVE_STATUS_VOD_READY
      - LIVE_STATUS_VOD
      - LIVE_STATUS_CLOSED
      - LIVE_STATUS_CANCELING
      - LIVE_STATUS_ARCHIVING
      - LIVE_STATUS_ARCHIVED
      - LIVE_STATUS_FAIL_TO_CREATE
      - LIVE_STATUS_FAIL_TO_PREVIEW
      - LIVE_STATUS_FAIL_TO_END
      - LIVE_STATUS_FAIL_TO_VOD
      - LIVE_STATUS_FAIL_TO_CANCEL
      - LIVE_STATUS_FAIL_TO_ARCHIVE
      - LIVE_STATUS_CHECK_PLAYBACK
      - LIVE_STATUS_CHECK_SCHEDULE
      - LIVE_STATUS_CHECK_VOD
      - LIVE_STATUS_CHECK_CATCHUP
    default: LIVE_STATUS_UNSPECIFIED
  cms.v1.LiveStreamIngestType:
    type: string
    enum:
      - LIVE_STREAM_INGEST_TYPE_UNSPECIFIED
      - LIVE_STREAM_INGEST_TYPE_RTMP
      - LIVE_STREAM_INGEST_TYPE_WHIP
    default: LIVE_STREAM_INGEST_TYPE_UNSPECIFIED
    description: |2-
       - LIVE_STREAM_INGEST_TYPE_RTMP: Real-Time Messaging Protocol.
       - LIVE_STREAM_INGEST_TYPE_WHIP: WebRTC-HTTP Ingestion Protocol.
  cms.v1.LiveStreamPipeline:
    type: string
    enum:
      - LIVE_STREAM_PIPELINE_UNSPECIFIED
      - LIVE_STREAM_PIPELINE_MAIN
      - LIVE_STREAM_PIPELINE_BACKUP
    default: LIVE_STREAM_PIPELINE_UNSPECIFIED
    description: |2-
       - LIVE_STREAM_PIPELINE_MAIN: The main live streaming pipeline.
       - LIVE_STREAM_PIPELINE_BACKUP: The backup live streaming pipeline.
      The live streaming will automatically fail over to backup pipeline when there's failure in main pipeline.
  cms.v1.LiveType:
    type: string
    enum:
      - LIVE_TYPE_UNSPECIFIED
      - LIVE_TYPE_LIVE
      - LIVE_TYPE_SIMULIVE
    default: LIVE_TYPE_UNSPECIFIED
    description: |2-
       - LIVE_TYPE_LIVE: The live stream in real time.
       - LIVE_TYPE_SIMULIVE: The simulated live stream which uses a pre-recorded video source and is presented as if it were a live event.
  cms.v1.LiveVOD:
    type: object
    properties:
      source:
        $ref: '#/definitions/cms.v1.LiveVODSource'
        description: |-
          Required. Indicates the VOD source type.
          It must be `LIVE_VOD_SOURCE_PLAYBACK` when `broadcast_mode` of the live is `BROADCAST_MODE_PLAYBACK`.
      replace:
        $ref: '#/definitions/cms.v1.LiveVODReplace'
        description: Optional. Required if `source` is `LIVE_VOD_SOURCE_REPLACE`.
      playback:
        $ref: '#/definitions/cms.v1.LiveVODPlayback'
        description: Optional. Required if `source` is `LIVE_VOD_SOURCE_PLAYBACK`.
      started_at:
        type: string
        format: date-time
        description: Required. The VOD will available after the start time.
      ended_at:
        type: string
        format: date-time
        description: Required. The VOD will not available after the end time.
    required:
      - source
      - started_at
      - ended_at
  cms.v1.LiveVODPlayback:
    type: object
    properties:
      id:
        type: string
        description: Required. The unique id of the VOD.
      name:
        type: string
        description: Output only. The name of the VOD.
        readOnly: true
    required:
      - id
  cms.v1.LiveVODReplace:
    type: object
    properties:
      id:
        type: string
        description: Required. The unique id of the VOD.
      name:
        type: string
        description: Output only. The name of the VOD.
        readOnly: true
    required:
      - id
  cms.v1.LiveVODSource:
    type: string
    enum:
      - LIVE_VOD_SOURCE_UNSPECIFIED
      - LIVE_VOD_SOURCE_CATCHUP
      - LIVE_VOD_SOURCE_REPLACE
      - LIVE_VOD_SOURCE_PLAYBACK
    default: LIVE_VOD_SOURCE_UNSPECIFIED
    description: |2-
       - LIVE_VOD_SOURCE_CATCHUP: Record the live stream after the live ended and use it as VOD source.
       - LIVE_VOD_SOURCE_REPLACE: VOD source instead of the live stream recording.
       - LIVE_VOD_SOURCE_PLAYBACK: VOD source for playback broadcast mode.
  cms.v1.Meeting:
    type: object
    properties:
      id:
        type: string
        description: Output only. The unique id of the meeting.
        readOnly: true
      name:
        type: string
        description: Optional. The name of the meeting.
      schedule:
        $ref: '#/definitions/cms.v1.MeetingSchedule'
        description: Required. The schedule time for the meeting. The meeting cannot be over 12 hours.
      status:
        $ref: '#/definitions/cms.v1.MeetingStatus'
        description: Output only. The status of the meeting.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the meeting that was created.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the meeting that was last updated.
        readOnly: true
    required:
      - schedule
  cms.v1.MeetingSchedule:
    type: object
    properties:
      started_at:
        type: string
        format: date-time
        description: Required. Indicates the meeting will be available after the start time.
      closed_at:
        type: string
        format: date-time
        description: Required. Indicates the meeting will be unavailable after the close time.
    required:
      - started_at
      - closed_at
  cms.v1.MeetingStatus:
    type: string
    enum:
      - MEETING_STATUS_UNSPECIFIED
      - MEETING_STATUS_PREPARING
      - MEETING_STATUS_SCHEDULED
      - MEETING_STATUS_INITIATING
      - MEETING_STATUS_AVAILABLE
      - MEETING_STATUS_CLOSING
      - MEETING_STATUS_ENCODING
      - MEETING_STATUS_CANCELING
      - MEETING_STATUS_CLOSED
      - MEETING_STATUS_ARCHIVING
      - MEETING_STATUS_ARCHIVED
      - MEETING_STATUS_FAILED
    default: MEETING_STATUS_UNSPECIFIED
    description: |2-
       - MEETING_STATUS_PREPARING: The meeting is preparing.
       - MEETING_STATUS_SCHEDULED: The meeting is created and waiting to start.
       - MEETING_STATUS_INITIATING: The meeting is initiating.
       - MEETING_STATUS_AVAILABLE: The meeting is available.
       - MEETING_STATUS_CLOSING: The meeting is closing.
       - MEETING_STATUS_ENCODING: The meeting is preparing the recording.
       - MEETING_STATUS_CANCELING: The meeting is canceling.
       - MEETING_STATUS_CLOSED: The meeting is closed.
       - MEETING_STATUS_ARCHIVING: The meeting is archiving.
       - MEETING_STATUS_ARCHIVED: The meeting is archived.
  cms.v1.NotifReason:
    type: string
    enum:
      - NOTIF_REASON_UNSPECIFIED
      - NOTIF_REASON_ERROR_VOD
      - NOTIF_REASON_ERROR_LIVE
      - NOTIF_REASON_ERROR_LIVE_CATCHUP
    default: NOTIF_REASON_UNSPECIFIED
    description: |-
      The reason of the notification.

       - NOTIF_REASON_ERROR_VOD: Indicates the general error of vod
      ```
      {
           "reason": "NOTIF_REASON_ERROR_VOD",
           "metadata": {
               "vod_id": "91699bd2-f4c6-4ab5-801b-05bc347793ff"
           }
      }
      ```
       - NOTIF_REASON_ERROR_LIVE: Indicates the general error of live
      ```
      {
           "reason": "NOTIF_REASON_ERROR_VOD",
           "metadata": {
               "live_id": "91699bd2-f4c6-4ab5-801b-05bc347793ff"
           }
      }
      ```
       - NOTIF_REASON_ERROR_LIVE_CATCHUP: Indicates the error of live catch up
      ```
      {
           "reason": "NOTIF_REASON_ERROR_LIVE_CATCHUP",
           "metadata": {
               "live_id": "91699bd2-f4c6-4ab5-801b-05bc347793ff"
           }
      }
      ```
  cms.v1.Notification:
    type: object
    properties:
      id:
        type: string
        title: The unique id of the notification
      reason:
        $ref: '#/definitions/cms.v1.NotifReason'
        title: The reason of the notification
      metadata:
        type: object
        additionalProperties:
          type: string
        description: The metadata for the notification reason.
      time:
        type: string
        format: date-time
        description: The occurrence time of the notification.
      read:
        type: boolean
        description: The read status of the notification.
  cms.v1.PTE:
    type: object
    properties:
      profile:
        $ref: '#/definitions/cms.v1.PTEProfile'
        title: The profile setting of Per-title encoding
  cms.v1.PTEProfile:
    type: string
    enum:
      - PTE_PROFILE_UNSPECIFIED
      - PTE_PROFILE_HIGH
    default: PTE_PROFILE_UNSPECIFIED
    title: '- PTE_PROFILE_HIGH: PTE_PROFILE_HIGH Indicates high level for Per-title encoding'
  cms.v1.Player:
    type: object
    properties:
      player_setting_id:
        type: string
  cms.v1.PreviewLiveResponse:
    type: object
  cms.v1.Protection:
    type: object
    properties:
      type:
        $ref: '#/definitions/cms.v1.ProtectionType'
        title: Optional. Indicates the type of protection
  cms.v1.ProtectionType:
    type: string
    enum:
      - PROTECTION_TYPE_UNSPECIFIED
      - PROTECTION_TYPE_DRM
      - PROTECTION_TYPE_KKDRM
    default: PROTECTION_TYPE_UNSPECIFIED
    description: |-
      - PROTECTION_TYPE_DRM: The content will protected by DRM.
       - PROTECTION_TYPE_KKDRM: The content will protected by KKDRM (KKBOX only).
    title: Protection type
  cms.v1.Queue:
    type: string
    enum:
      - QUEUE_UNSPECIFIED
      - QUEUE_STANDARD
      - QUEUE_PRIORITY
    default: QUEUE_UNSPECIFIED
    description: |2-
       - QUEUE_STANDARD: QUEUE_STANDARD Indicates standard queue.
       - QUEUE_PRIORITY: QUEUE_PRIORITY Indicates priority queue.
  cms.v1.RTMPLink:
    type: object
    properties:
      url:
        type: string
        description: Output only. The RTMP server endpoint.
        readOnly: true
      pipeline:
        $ref: '#/definitions/cms.v1.LiveStreamPipeline'
        description: Output only. The live streaming pipeline.
        readOnly: true
  cms.v1.RTMPSetup:
    type: object
    properties:
      links:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.RTMPLink'
        description: Output only. The RTMP links.
        readOnly: true
  cms.v1.RedeemCode:
    type: object
    properties:
      code:
        type: string
        description: Output only. The redeem code.
        readOnly: true
  cms.v1.Resource:
    type: object
    properties:
      id:
        type: string
        description: Output only.
        readOnly: true
      type:
        $ref: '#/definitions/type.bv.v1.ResourceType'
        description: Required. Immutable.
      ref_id:
        type: string
        description: Required. Immutable.
      org_id:
        type: string
        description: Output only.
        readOnly: true
      tenant_id:
        type: string
        description: Output only.
        readOnly: true
      license_key:
        type: string
        description: Output only.
        readOnly: true
      title:
        type: string
        description: Output only.
        readOnly: true
      status:
        $ref: '#/definitions/cms.v1.ResourceStatus'
        description: Output only.
        readOnly: true
      stream:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.Stream'
        description: Output only.
        readOnly: true
      security:
        $ref: '#/definitions/cms.v1.Security'
        description: Output only.
        readOnly: true
      default_cover_image_url:
        type: string
        description: Output only.
        readOnly: true
      current_cover_image_url:
        type: string
        description: Output only.
        readOnly: true
      showroom:
        $ref: '#/definitions/type.bv.v1.Showroom'
        description: Output only.
        readOnly: true
      interaction:
        $ref: '#/definitions/cms.v1.Interaction'
        description: Output only.
        readOnly: true
      player_setting:
        $ref: '#/definitions/type.bv.v1.PlayerSetting'
        description: Output only.
        readOnly: true
      vod_schedule:
        $ref: '#/definitions/cms.v1.Schedule'
      chapter_setting:
        $ref: '#/definitions/cms.v1.VODChapter'
        description: Output only.
        readOnly: true
      metadata:
        $ref: '#/definitions/type.bv.v1.Metadata'
        description: Output only.
        readOnly: true
    required:
      - type
      - ref_id
  cms.v1.ResourceData:
    type: object
    properties:
      id:
        type: string
      type:
        $ref: '#/definitions/type.bv.v1.ResourceType'
    required:
      - id
      - type
  cms.v1.ResourceStatus:
    type: string
    enum:
      - RESOURCE_STATUS_UNSPECIFIED
      - RESOURCE_STATUS_LIVE_SCHEDULED
      - RESOURCE_STATUS_LIVE_PREVIEW
      - RESOURCE_STATUS_LIVE
      - RESOURCE_STATUS_VOD_PREPARING
      - RESOURCE_STATUS_VOD_AVAILABLE
      - RESOURCE_STATUS_VOD
      - RESOURCE_STATUS_END
    default: RESOURCE_STATUS_UNSPECIFIED
  cms.v1.ResourceWithRefData:
    type: object
    properties:
      resource:
        $ref: '#/definitions/cms.v1.Resource'
      ref_id:
        type: string
      ref_title:
        type: string
      ref_created_at:
        type: string
        format: date-time
  cms.v1.RevokeResourceTokensRequest:
    type: object
    properties:
      tokens:
        type: array
        items:
          type: string
        description: Required. The resource tokens that need to be revoked.
    required:
      - tokens
  cms.v1.RevokeResourceTokensResponse:
    type: object
  cms.v1.Schedule:
    type: object
    properties:
      enable:
        type: boolean
        description: Enable VOD viewing schedule or not.
      start_time:
        type: string
        format: date-time
        description: VOD viewing start time. Users can only watch the VOD within the specified start time and end time.
      end_time:
        type: string
        format: date-time
        description: VOD viewing end time. Users can only watch the VOD within the specified start time and end time.
    required:
      - enable
      - start_time
      - end_time
  cms.v1.Security:
    type: object
    properties:
      privacy:
        $ref: '#/definitions/cms.v1.SecurityPrivacy'
        description: Required. Specify the content visibility.
      watermark:
        $ref: '#/definitions/cms.v1.Watermark'
        description: Optional. Add watermarks to the player when playing the content.
      domain_control:
        $ref: '#/definitions/cms.v1.DomainControl'
        description: Optional. Specify the domains that will be allowed to embed the iframe.
      protection:
        $ref: '#/definitions/cms.v1.Protection'
        description: Optional. Immutable. The content encryption.
      geo_control:
        type: array
        items:
          type: string
        description: |-
          Immutable. Specify the alpha-2 codes (See: https://www.iban.com/country-codes) to restrict access to the content by geo locations.
          Allow all regions when empty.
    required:
      - privacy
  cms.v1.SecurityPrivacy:
    type: object
    properties:
      type:
        $ref: '#/definitions/cms.v1.SecurityPrivacyType'
        description: Required. Indicates the security privacy type.
      token:
        $ref: '#/definitions/cms.v1.SecurityPrivacyToken'
        description: Optional. Required if `type` is `SECURITY_PRIVACY_TYPE_TOKEN`.
    required:
      - type
  cms.v1.SecurityPrivacyToken:
    type: object
    properties:
      device_limit:
        type: integer
        format: int32
        description: |-
          Optional. The limit of the concurrent devices for a token or a redeem code.
          Default: 0 (Unlimited). Maximum: 1000.
  cms.v1.SecurityPrivacyType:
    type: string
    enum:
      - SECURITY_PRIVACY_TYPE_UNSPECIFIED
      - SECURITY_PRIVACY_TYPE_PUBLIC
      - SECURITY_PRIVACY_TYPE_TOKEN
    default: SECURITY_PRIVACY_TYPE_UNSPECIFIED
    description: |2-
       - SECURITY_PRIVACY_TYPE_PUBLIC: The viewers can access the content without any restriction.
       - SECURITY_PRIVACY_TYPE_TOKEN: The viewers can access the content with tokens or redeem codes.
  cms.v1.Source:
    type: object
    properties:
      type:
        $ref: '#/definitions/cms.v1.SourceType'
        description: Indicates the Source type, should match the following library or cloud_storage setting.
      library:
        $ref: '#/definitions/cms.v1.SourceLibrary'
        description: Indicates the source file is from BlendVision One library.
      cloud_storage:
        $ref: '#/definitions/cms.v1.SourceCloudStorage'
        description: Indicates the source file is from the customer's own configured cloud storage.
  cms.v1.SourceCloudStorage:
    type: object
    properties:
      id:
        type: string
        title: Indicates the unique id of cloud storage
      file_path:
        type: string
        description: Indicates the relative path of the video source file.
      subtitles:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.SourceLibrarySubtitle'
        description: Indicates the subtitle source files.
  cms.v1.SourceFileInfo:
    type: object
    properties:
      file_name:
        type: string
        description: The file name of source file.
      size:
        type: string
        format: int64
        description: The size of source file.
      bitrate:
        type: string
        format: int64
        description: The bitrate of source file.
      duration:
        type: number
        format: float
        description: The duration of source file.
      video:
        $ref: '#/definitions/type.bv.v1.VideoSource'
        description: The video information of source file.
      audios:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.AudioSource'
        description: The audio information of source file.
  cms.v1.SourceLibrary:
    type: object
    properties:
      video:
        $ref: '#/definitions/cms.v1.SourceLibraryVideo'
        description: Indicates the video source file.
      subtitles:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.SourceLibrarySubtitle'
        description: Indicates the subtitle source files.
  cms.v1.SourceLibrarySubtitle:
    type: object
    properties:
      id:
        type: string
        description: The unique id of the library subtitle file.
      name:
        type: string
        description: The name of the subtitle file.
      code:
        type: string
        description: The language code of the subtitle file. Follow ISO 639-2/B.
      display:
        type: string
        description: The display name of the subtitle file.
  cms.v1.SourceLibraryVideo:
    type: object
    properties:
      id:
        type: string
        description: The unique id of the library video file.
  cms.v1.SourceType:
    type: string
    enum:
      - SOURCE_TYPE_UNSPECIFIED
      - SOURCE_TYPE_LIBRARY
      - SOURCE_TYPE_CLOUD_STORAGE
    default: SOURCE_TYPE_UNSPECIFIED
    description: |2-
       - SOURCE_TYPE_LIBRARY: SOURCE_TYPE_LIBRARY Indicates the source file is from BlendVision One Library.
       - SOURCE_TYPE_CLOUD_STORAGE: SOURCE_TYPE_CLOUD_STORAGE Indicates the source file is from the customer's own configured cloud storage.
  cms.v1.StartLiveResponse:
    type: object
  cms.v1.StartMeetingResponse:
    type: object
  cms.v1.StreamInfo:
    type: object
    properties:
      id:
        type: string
      vod_type:
        $ref: '#/definitions/cms.v1.VODType'
    required:
      - id
      - vod_type
  cms.v1.Tutorial:
    type: object
    properties:
      id:
        type: string
        description: Output only. The resource identifier of tutorial.
        readOnly: true
      sequence:
        type: integer
        format: int32
        description: 'Required. The sequence of banner. Range: 1-6.'
      org_type:
        $ref: '#/definitions/type.bv.v1.OrganizationType'
        description: Required. The type of organization.
      duration:
        type: string
        description: Required. The duration of tutorial video.
      start_time:
        type: string
        format: date-time
        description: Required. The start time of the tutorial, which will be availabled on the console.
      end_time:
        type: string
        format: date-time
        description: Required. The end time of the tutorial, which will be disabled on the console.
      contents:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.TutorialContent'
    required:
      - sequence
      - org_type
      - duration
      - start_time
      - contents
  cms.v1.TutorialContent:
    type: object
    properties:
      title:
        type: string
        description: Required. The title of tutorial.
      language_type:
        $ref: '#/definitions/type.bv.v1.LanguageType'
        description: Required. The language of tutorial.
      url:
        type: string
        description: Required. The url of tutorial.
      created_at:
        type: string
        format: date-time
        title: Output only
        readOnly: true
      updated_at:
        type: string
        format: date-time
        title: Output only
        readOnly: true
      library_id:
        type: string
        description: Required. The library id of thunmbnail.
      image_url:
        type: string
        description: Output only The url of thunmbnail.
        readOnly: true
    required:
      - title
      - language_type
      - url
      - library_id
  cms.v1.UpdateBannerResponse:
    type: object
    properties:
      banner:
        $ref: '#/definitions/cms.v1.Banner'
  cms.v1.UpdateFAQResponse:
    type: object
    properties:
      faq:
        $ref: '#/definitions/cms.v1.FAQ'
  cms.v1.UpdateInstantEncodingResponse:
    type: object
    example:
      instant_encoding:
        expiration_time: "2023-05-25T03:48:52.557701993Z"
        id: 4b1e2f25-a8f3-490b-b91e-c030a9478ce8
        name: creep
        status: INSTANT_ENCODING_STATUS_SUCCEEDED
        stream:
          - manifests:
              - protocol: PROTOCOL_DASH
                uris:
                  - resolutions: []
                    uri: https://d3vj39meaxlc8.cloudfront.net/42f6c33e-f632-44e5-8042-05abb5fa2223/audio/4b1e2f25-a8f3-490b-b91e-c030a9478ce8/vod/dash.mpd
              - protocol: PROTOCOL_HLS
                uris:
                  - resolutions: []
                    uri: https://d3vj39meaxlc8.cloudfront.net/42f6c33e-f632-44e5-8042-05abb5fa2223/audio/4b1e2f25-a8f3-490b-b91e-c030a9478ce8/vod/hls.m3u8
            thumbnail: null
    properties:
      instant_encoding:
        $ref: '#/definitions/cms.v1.InstantEncoding'
    description: Response payload that could be returned upon successfully updating an instant encoding.
    title: UpdateInstantEncodingResponse
  cms.v1.UpdateLiveDVRResponse:
    type: object
    properties:
      started_at:
        type: string
        format: date-time
        description: Output only. Indicate the live streaming position where the viewers can seek back to when the DVR is enabled in UTC+0.
        readOnly: true
  cms.v1.UpdateLiveInteractionChatroomAdminNameResponse:
    type: object
    properties:
      name:
        type: string
        description: Output only. The admin name in chatroom.
        readOnly: true
  cms.v1.UpdateLiveResponse:
    type: object
    example:
      live:
        broadcast_mode: BROADCAST_MODE_TRADITIONAL_LIVE
        cover_images:
          close: null
          current: null
          end: null
          player_pause: null
          preview: null
          ready_to_start: null
          signal_interruption: null
        created_at: "2023-05-31T06:53:43Z"
        error_infos: []
        id: 860d49b8-2ca8-4030-b5ff-f6ec3a1c6196
        ingest_types:
          - LIVE_STREAM_INGEST_TYPE_RTMP
        interaction:
          chatroom:
            live:
              enabled: false
              theme: CHATROOM_THEME_UNSPECIFIED
            vod:
              enabled: false
              theme: CHATROOM_THEME_UNSPECIFIED
          event_id: ""
          poll_enabled: false
        labels: []
        name: Amazing Live
        resolution: LIVE_RESOLUTION_HD
        save_for_download_enabled: false
        security:
          domain_control:
            domains: []
            enabled: false
          geo_control: []
          privacy:
            token: null
            type: SECURITY_PRIVACY_TYPE_PUBLIC
          protection:
            type: PROTECTION_TYPE_UNSPECIFIED
          watermark:
            enabled: false
            position: WATERMARK_POSITION_UNSPECIFIED
            type: WATERMARK_TYPE_UNSPECIFIED
        setup:
          rtmp:
            links:
              - pipeline: LIVE_STREAM_PIPELINE_MAIN
                url: rtmp://43.207.253.193:1935/live1/stream
              - pipeline: LIVE_STREAM_PIPELINE_BACKUP
                url: rtmp://35.76.157.169:1935/live2/stream
          whip:
            links: []
        source: null
        status: LIVE_STATUS_WAIT_FOR_PREVIEW
        stream:
          - manifests:
              - protocol: PROTOCOL_HLS
                uris:
                  - resolutions:
                      - height: "720"
                        width: "1280"
                      - height: "480"
                        width: "852"
                      - height: "360"
                        width: "640"
                      - height: "240"
                        width: "426"
                    uri: https://dh8gxyds8vhu6.cloudfront.net/out/v1/2c4a1f16173244eea3a6b9ce8bfb510c/index.m3u8
              - protocol: PROTOCOL_DASH
                uris:
                  - resolutions:
                      - height: "720"
                        width: "1280"
                      - height: "480"
                        width: "852"
                      - height: "360"
                        width: "640"
                      - height: "240"
                        width: "426"
                    uri: https://dh8gxyds8vhu6.cloudfront.net/out/v1/1854c1bbbb404ae2b2f8aa8f41ba7ede/index.mpd
            thumbnail: null
        type: LIVE_TYPE_LIVE
        ull_enabled: false
        updated_at: "2023-05-31T06:55:46Z"
    properties:
      live:
        $ref: '#/definitions/cms.v1.Live'
  cms.v1.UpdateMeetingResponse:
    type: object
    properties:
      meeting:
        $ref: '#/definitions/cms.v1.Meeting'
  cms.v1.UpdateTutorialResponse:
    type: object
    properties:
      tutorial:
        $ref: '#/definitions/cms.v1.Tutorial'
  cms.v1.UpdateVODCoverImageResponse:
    type: object
  cms.v1.UpdateVODResponse:
    type: object
  cms.v1.UpdateVODSubtitlesResponse:
    type: object
  cms.v1.UploadData:
    type: object
    properties:
      id:
        type: string
        title: The Upload id of the file
      parts:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.UploadPart'
        title: The upload information of the file
  cms.v1.UploadFileRequest:
    type: object
    example:
      file:
        name: video.mp4
        size: "260543670"
        source: FILE_SOURCE_UPLOAD_IN_LIBRARY
        type: FILE_TYPE_VIDEO
    properties:
      file:
        $ref: '#/definitions/cms.v1.File'
        description: Required.
    required:
      - file
  cms.v1.UploadFileResponse:
    type: object
    example:
      file:
        attrs: {}
        created_at: "2023-05-26T06:08:30.661Z"
        id: 827ec0cb-9943-4cb4-9f1f-da0b395b0ccf
        name: video.mp4
        size: "260543670"
        source: FILE_SOURCE_UPLOAD_IN_LIBRARY
        type: FILE_TYPE_VIDEO
        updated_at: "2023-05-26T06:08:30.661Z"
        uri: ""
      upload_data:
        id: OszKAZjpmN.42t7e_Sm2BD1LzTu_gODwzPS2pm1fgVnR54LgiptLMgpdmQTBkH2XyoAtHHR4bIiFiRay2sm3eL678r2uJ0DvFl.4ZpXw8F4VF_BfnDP4QDPvq4oe.huduDRIYcpisZGqCN3BiH5wSgiKoSZ7bpfmx3VoNLgS6w4-
        parts:
          - part_number: 1
            presigned_url: https://kks-platform-orbit-content-store-dev.s3.ap-northeast-1.amazonaws.com/42f6c33e-f632-44e5-8042-05abb5fa2223/video/ad84dc85-73a1-4588-8a29-378923cdd60b/ad84dc85-73a1-4588-8a29-378923cdd60b.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAX2E7FTDHJGZCLJ4B%2F20230526%2Fap-northeast-1%2Fs3%2Faws4_request&X-Amz-Date=20230526T060830Z&X-Amz-Expires=21600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEO7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDmFwLW5vcnRoZWFzdC0xIkcwRQIgEpY1u74QZGxXnuHTxSDLE%2BLRnt5hgxVFNOPWMUZqGUQCIQD4KBEPxj6p7Ggl9mZwahh3xq7s7Bo2iYcOi2V8uZu45yqCBQgnEAAaDDUzNzIwNDcyNTk2NiIM8VxlcmgzwP5kqkH3Kt8E2sgO3hqvjB7%2FyrLFfOvh6HSk8IAH35Q13xP9fvOD45CUY5j7uP6ebvvmDpTZK4vqa1sN5%2Bd5wLfg81oAzi%2F%2FDdI6mrPuBFhs%2Bz6OAJhOY6vUkHbtKa%2BpVdMDKilEai8ObyvCXNPpzu9zkuUH1DwKX8duVXCoonbTQGP2sCNiMnuJ64j56cHb35p0Ad8O17SGk%2Fmc%2FpludvXZwFRFmRInvVUQoeU2bof3maMuOODTo3HRfrWABH4P8IkNYeipuFZDkYBJfQSgg4hqtEqV8BF0AFKxPOieannxJaBs%2BCTdW1mweo%2F9JYryeYJiQLfcW7SlVdkp0qeR%2FbDxVwLM4q5kB17HNyKgpHshL8YS2B%2F3nSZnFYYan2y94r0Hknsjv3zyoj8JbVaJHtADOZq%2F59HUQKTz9Ikp7E0SftFvM00NAD3UCOfo6FYKwYtvREUXqfJxf4DMKx0yVY2DYGZ%2FZ2hR2VTQdLuLYajcg%2BY9IYZsvEyU5YS%2FTHnMmMK3ZqOPVW47tPZfNwu4SlM%2BDc5eMbBMBU8LTVcS2CINffdc2R0dCy8zFf0Mrno1jUbLb4oCCAlv8gFgOnvBspcnCGRUaoI3%2F6TYEDadEgV9oI%2FcpLo41cF0qSVQhmgGWmBaX8GnIW25I1pBOvaybJWh7rm9YegjsmZLwbm21FGhsX2lOX2YObe5wqw2Vo%2FJbmCAZ7wrSLIa8UXmAVM9tx83AZH2b3tXOp7lPJHy5yOBx2COqRGbjy%2B5GC8rx%2BVR%2FTb6YXQ0VH5KYIXEf2vUSVSCDbRA1g64iUFcO3tu%2BADHQSVpIfB2pjDmlMGjBjqaAb%2BKJSsm5ccrrGQgHMJbmPiqn0g4GEvFxDm9IVN8YDjmtnqb5T8uGcXuDvdLjlJ9YAJaMBazEaehj2oXlZfPdHzYgH2ypTEgtXsWEZBF%2BwpUqEAzIgkHWKnpePwMC73Jo%2BujsmTckMsKtsURuj4%2B7yfsXbg74%2By%2Fdm09%2BalelD6TSr43yGCh3MJK5EfRljugsOYy05%2BfqMlD2q8%3D&X-Amz-SignedHeaders=host&partNumber=1&uploadId=OszKAZjpmN.42t7e_Sm2BD1LzTu_gODwzPS2pm1fgVnR54LgiptLMgpdmQTBkH2XyoAtHHR4bIiFiRay2sm3eL678r2uJ0DvFl.4ZpXw8F4VF_BfnDP4QDPvq4oe.huduDRIYcpisZGqCN3BiH5wSgiKoSZ7bpfmx3VoNLgS6w4-&x-id=UploadPart&X-Amz-Signature=0305cb425034fb0bcf7f4fe4b9763feb85af6d2941fa2816e7473d382c7e6f0a
          - part_number: 2
            presigned_url: https://kks-platform-orbit-content-store-dev.s3.ap-northeast-1.amazonaws.com/42f6c33e-f632-44e5-8042-05abb5fa2223/video/ad84dc85-73a1-4588-8a29-378923cdd60b/ad84dc85-73a1-4588-8a29-378923cdd60b.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAX2E7FTDHJGZCLJ4B%2F20230526%2Fap-northeast-1%2Fs3%2Faws4_request&X-Amz-Date=20230526T060830Z&X-Amz-Expires=21600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEO7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDmFwLW5vcnRoZWFzdC0xIkcwRQIgEpY1u74QZGxXnuHTxSDLE%2BLRnt5hgxVFNOPWMUZqGUQCIQD4KBEPxj6p7Ggl9mZwahh3xq7s7Bo2iYcOi2V8uZu45yqCBQgnEAAaDDUzNzIwNDcyNTk2NiIM8VxlcmgzwP5kqkH3Kt8E2sgO3hqvjB7%2FyrLFfOvh6HSk8IAH35Q13xP9fvOD45CUY5j7uP6ebvvmDpTZK4vqa1sN5%2Bd5wLfg81oAzi%2F%2FDdI6mrPuBFhs%2Bz6OAJhOY6vUkHbtKa%2BpVdMDKilEai8ObyvCXNPpzu9zkuUH1DwKX8duVXCoonbTQGP2sCNiMnuJ64j56cHb35p0Ad8O17SGk%2Fmc%2FpludvXZwFRFmRInvVUQoeU2bof3maMuOODTo3HRfrWABH4P8IkNYeipuFZDkYBJfQSgg4hqtEqV8BF0AFKxPOieannxJaBs%2BCTdW1mweo%2F9JYryeYJiQLfcW7SlVdkp0qeR%2FbDxVwLM4q5kB17HNyKgpHshL8YS2B%2F3nSZnFYYan2y94r0Hknsjv3zyoj8JbVaJHtADOZq%2F59HUQKTz9Ikp7E0SftFvM00NAD3UCOfo6FYKwYtvREUXqfJxf4DMKx0yVY2DYGZ%2FZ2hR2VTQdLuLYajcg%2BY9IYZsvEyU5YS%2FTHnMmMK3ZqOPVW47tPZfNwu4SlM%2BDc5eMbBMBU8LTVcS2CINffdc2R0dCy8zFf0Mrno1jUbLb4oCCAlv8gFgOnvBspcnCGRUaoI3%2F6TYEDadEgV9oI%2FcpLo41cF0qSVQhmgGWmBaX8GnIW25I1pBOvaybJWh7rm9YegjsmZLwbm21FGhsX2lOX2YObe5wqw2Vo%2FJbmCAZ7wrSLIa8UXmAVM9tx83AZH2b3tXOp7lPJHy5yOBx2COqRGbjy%2B5GC8rx%2BVR%2FTb6YXQ0VH5KYIXEf2vUSVSCDbRA1g64iUFcO3tu%2BADHQSVpIfB2pjDmlMGjBjqaAb%2BKJSsm5ccrrGQgHMJbmPiqn0g4GEvFxDm9IVN8YDjmtnqb5T8uGcXuDvdLjlJ9YAJaMBazEaehj2oXlZfPdHzYgH2ypTEgtXsWEZBF%2BwpUqEAzIgkHWKnpePwMC73Jo%2BujsmTckMsKtsURuj4%2B7yfsXbg74%2By%2Fdm09%2BalelD6TSr43yGCh3MJK5EfRljugsOYy05%2BfqMlD2q8%3D&X-Amz-SignedHeaders=host&partNumber=2&uploadId=OszKAZjpmN.42t7e_Sm2BD1LzTu_gODwzPS2pm1fgVnR54LgiptLMgpdmQTBkH2XyoAtHHR4bIiFiRay2sm3eL678r2uJ0DvFl.4ZpXw8F4VF_BfnDP4QDPvq4oe.huduDRIYcpisZGqCN3BiH5wSgiKoSZ7bpfmx3VoNLgS6w4-&x-id=UploadPart&X-Amz-Signature=78f7084588e23379e67aa62c8934e9b8060241548d17a49b7af58c924b6cbb80
          - part_number: 3
            presigned_url: https://kks-platform-orbit-content-store-dev.s3.ap-northeast-1.amazonaws.com/42f6c33e-f632-44e5-8042-05abb5fa2223/video/ad84dc85-73a1-4588-8a29-378923cdd60b/ad84dc85-73a1-4588-8a29-378923cdd60b.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAX2E7FTDHJGZCLJ4B%2F20230526%2Fap-northeast-1%2Fs3%2Faws4_request&X-Amz-Date=20230526T060830Z&X-Amz-Expires=21600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEO7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDmFwLW5vcnRoZWFzdC0xIkcwRQIgEpY1u74QZGxXnuHTxSDLE%2BLRnt5hgxVFNOPWMUZqGUQCIQD4KBEPxj6p7Ggl9mZwahh3xq7s7Bo2iYcOi2V8uZu45yqCBQgnEAAaDDUzNzIwNDcyNTk2NiIM8VxlcmgzwP5kqkH3Kt8E2sgO3hqvjB7%2FyrLFfOvh6HSk8IAH35Q13xP9fvOD45CUY5j7uP6ebvvmDpTZK4vqa1sN5%2Bd5wLfg81oAzi%2F%2FDdI6mrPuBFhs%2Bz6OAJhOY6vUkHbtKa%2BpVdMDKilEai8ObyvCXNPpzu9zkuUH1DwKX8duVXCoonbTQGP2sCNiMnuJ64j56cHb35p0Ad8O17SGk%2Fmc%2FpludvXZwFRFmRInvVUQoeU2bof3maMuOODTo3HRfrWABH4P8IkNYeipuFZDkYBJfQSgg4hqtEqV8BF0AFKxPOieannxJaBs%2BCTdW1mweo%2F9JYryeYJiQLfcW7SlVdkp0qeR%2FbDxVwLM4q5kB17HNyKgpHshL8YS2B%2F3nSZnFYYan2y94r0Hknsjv3zyoj8JbVaJHtADOZq%2F59HUQKTz9Ikp7E0SftFvM00NAD3UCOfo6FYKwYtvREUXqfJxf4DMKx0yVY2DYGZ%2FZ2hR2VTQdLuLYajcg%2BY9IYZsvEyU5YS%2FTHnMmMK3ZqOPVW47tPZfNwu4SlM%2BDc5eMbBMBU8LTVcS2CINffdc2R0dCy8zFf0Mrno1jUbLb4oCCAlv8gFgOnvBspcnCGRUaoI3%2F6TYEDadEgV9oI%2FcpLo41cF0qSVQhmgGWmBaX8GnIW25I1pBOvaybJWh7rm9YegjsmZLwbm21FGhsX2lOX2YObe5wqw2Vo%2FJbmCAZ7wrSLIa8UXmAVM9tx83AZH2b3tXOp7lPJHy5yOBx2COqRGbjy%2B5GC8rx%2BVR%2FTb6YXQ0VH5KYIXEf2vUSVSCDbRA1g64iUFcO3tu%2BADHQSVpIfB2pjDmlMGjBjqaAb%2BKJSsm5ccrrGQgHMJbmPiqn0g4GEvFxDm9IVN8YDjmtnqb5T8uGcXuDvdLjlJ9YAJaMBazEaehj2oXlZfPdHzYgH2ypTEgtXsWEZBF%2BwpUqEAzIgkHWKnpePwMC73Jo%2BujsmTckMsKtsURuj4%2B7yfsXbg74%2By%2Fdm09%2BalelD6TSr43yGCh3MJK5EfRljugsOYy05%2BfqMlD2q8%3D&X-Amz-SignedHeaders=host&partNumber=3&uploadId=OszKAZjpmN.42t7e_Sm2BD1LzTu_gODwzPS2pm1fgVnR54LgiptLMgpdmQTBkH2XyoAtHHR4bIiFiRay2sm3eL678r2uJ0DvFl.4ZpXw8F4VF_BfnDP4QDPvq4oe.huduDRIYcpisZGqCN3BiH5wSgiKoSZ7bpfmx3VoNLgS6w4-&x-id=UploadPart&X-Amz-Signature=0322a1143529ce9eba82f1d5087ad785d253dea913a1a1db8bf8bc1207099c8b
    properties:
      file:
        $ref: '#/definitions/cms.v1.File'
      upload_data:
        $ref: '#/definitions/cms.v1.UploadData'
  cms.v1.UploadPart:
    type: object
    properties:
      part_number:
        type: integer
        format: int32
        description: This attribute represents the sequential number assigned to each part of the file.
      presigned_url:
        type: string
        description: The presigned URL allows the user to directly upload a file part to the file resource.
  cms.v1.VOD:
    type: object
    properties:
      id:
        type: string
        description: Output only. The unique id of VOD resource.
        readOnly: true
      name:
        type: string
        description: Output only. The name of VOD resource.
        readOnly: true
      source:
        $ref: '#/definitions/cms.v1.Source'
        description: Output only. Indicate the source file that you want to encode.
        readOnly: true
      profile_set:
        $ref: '#/definitions/type.bv.v1.ProfileSet'
        description: Output only. Indicate the profile set that defines the encoding settings.
        readOnly: true
      queue:
        $ref: '#/definitions/cms.v1.Queue'
        description: Output only. Indicates which queue this encoding job was executed on before.
        readOnly: true
      pte:
        $ref: '#/definitions/cms.v1.PTE'
        description: Output only. Per-title encoding.
        readOnly: true
      stream:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.Stream'
        description: Output Only. Indicate the streaming resource of the VOD.
        readOnly: true
      labels:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.Label'
        description: Output Only. Indicate the label of the VOD.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output Only. Indicate the create time of the VOD.
        readOnly: true
      status:
        $ref: '#/definitions/cms.v1.VODStatus'
        description: Output Only. Indicate the current status of the VOD.
        readOnly: true
      previous_status:
        $ref: '#/definitions/cms.v1.VODStatus'
        description: Output only. Indicate the previous status of the VOD.
        readOnly: true
      metadata:
        $ref: '#/definitions/type.bv.v1.Metadata'
        description: Output only. Indicate the metadata of the VOD.
        readOnly: true
      source_file_info:
        $ref: '#/definitions/cms.v1.SourceFileInfo'
        description: Output only. Indicate the source file information of the VOD.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output Only. Indicate the latest update time of the VOD.
        readOnly: true
      schedule:
        $ref: '#/definitions/cms.v1.Schedule'
        description: Output Only. Indicate the schedule setting of the VOD.
        readOnly: true
      security:
        $ref: '#/definitions/cms.v1.Security'
        description: Output Only. Indicate the security setting of the VOD.
        readOnly: true
      cover_image:
        $ref: '#/definitions/type.bv.v1.CoverImage'
        description: Output Only. Indicate the cover image of the VOD.
        readOnly: true
      export:
        $ref: '#/definitions/cms.v1.Export'
        description: Output Only. Indicate the export setting of the VOD.
        readOnly: true
      showroom:
        $ref: '#/definitions/type.bv.v1.Showroom'
        description: Optional. Indicate the showroom setting of the VOD.
      byo_cdn:
        $ref: '#/definitions/cms.v1.ByoCdn'
        description: Optional. The setting of bring-your-own cdn.
      player_setting:
        $ref: '#/definitions/type.bv.v1.PlayerSetting'
        description: Optional. The setting of player.
      chapter_setting:
        $ref: '#/definitions/cms.v1.VODChapter'
        description: Optional. The chapter of vod.
  cms.v1.VODChapter:
    type: object
    properties:
      enable:
        type: boolean
      chapters:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.Chapter'
    required:
      - enable
      - chapters
  cms.v1.VODReportInfo:
    type: object
    properties:
      id:
        type: string
      stream_id:
        type: string
      title:
        type: string
      created_at:
        type: string
        format: date-time
  cms.v1.VODStatus:
    type: string
    enum:
      - VOD_STATUS_UNSPECIFIED
      - VOD_STATUS_CREATED
      - VOD_STATUS_INGESTED
      - VOD_STATUS_QUEUED
      - VOD_STATUS_ENCODED
      - VOD_STATUS_DEPLOYED
      - VOD_STATUS_SUCCEEDED
      - VOD_STATUS_FAILED
      - VOD_STATUS_CANCELLED
      - VOD_STATUS_DELETED
    default: VOD_STATUS_UNSPECIFIED
    description: |2-
       - VOD_STATUS_CREATED: VOD_STATUS_CREATED Indicates VOD job accepted.
       - VOD_STATUS_INGESTED: VOD_STATUS_INGESTED Indicates source file has been ingested to BlendVision One Service.
       - VOD_STATUS_QUEUED: VOD_STATUS_QUEUED Indicates VOD job is currently being encoded.
       - VOD_STATUS_ENCODED: VOD_STATUS_ENCODED Indicates VOD job is encoded.
       - VOD_STATUS_DEPLOYED: VOD_STATUS_DEPLOYED Indicates the streaming resource of VOD job has been public.
       - VOD_STATUS_SUCCEEDED: VOD_STATUS_SUCCEEDED Indicates VOD job is finished.
       - VOD_STATUS_FAILED: VOD_STATUS_FAILED Indicates VOD job is failed.
       - VOD_STATUS_CANCELLED: VOD_STATUS_CANCELLED Indicates VOD job is cancelled.
       - VOD_STATUS_DELETED: VOD_STATUS_DELETED Indicates VOD job is deleted.
  cms.v1.VODStatusLog:
    type: object
    properties:
      status:
        $ref: '#/definitions/cms.v1.VODStatus'
        description: The status of a VOD resource.
      complete_time:
        type: string
        format: date-time
        title: The created time of the status
      message:
        type: string
        description: 'The message of the status. Deprecated: Use `error_infos` instead.'
      code:
        type: string
        description: 'The code of the status. Deprecated: Use `error_infos` instead.'
      error_infos:
        type: array
        items:
          type: object
          $ref: '#/definitions/google.rpc.ErrorInfo'
        description: Output only. Optional. A list of messages that carry the error infos when vod encoding is failed.
        readOnly: true
  cms.v1.VODType:
    type: string
    enum:
      - VOD_TYPE_UNSPECIFIED
      - VOD_TYPE_ENCODING
      - VOD_TYPE_CATCHUP
    default: VOD_TYPE_UNSPECIFIED
  cms.v1.ValidateCloudStorageFileResponse:
    type: object
    properties:
      id:
        type: string
      file_path:
        type: string
      file_name:
        type: string
      file_size:
        type: string
        format: int64
  cms.v1.WHIPLink:
    type: object
    properties:
      url:
        type: string
        description: Output only. The WHIP server endpoint.
        readOnly: true
      pipeline:
        $ref: '#/definitions/cms.v1.LiveStreamPipeline'
        description: Output only. The live streaming pipeline.
        readOnly: true
      token:
        type: string
        description: Output only. The access token for WHIP live streaming.
        readOnly: true
  cms.v1.WHIPSetup:
    type: object
    properties:
      links:
        type: array
        items:
          type: object
          $ref: '#/definitions/cms.v1.WHIPLink'
        description: Output only. The WHIP links.
        readOnly: true
  cms.v1.Watermark:
    type: object
    properties:
      enabled:
        type: boolean
        description: Required. Enable watermark.
      type:
        $ref: '#/definitions/cms.v1.WatermarkType'
        description: Required. Indicates the type of watermark.
      position:
        $ref: '#/definitions/type.bv.v1.WatermarkPosition'
        description: Required. The position of the watermark.
      image:
        $ref: '#/definitions/cms.v1.WatermarkImage'
        description: Optional. Required if `type` is `WATERMARK_TYPE_IMAGE`.
    required:
      - enabled
      - type
      - position
  cms.v1.WatermarkImage:
    type: object
    properties:
      library_id:
        type: string
        description: Required. The library id of the image.
      url:
        type: string
        description: Output only. The URL of the image.
        readOnly: true
    required:
      - library_id
  cms.v1.WatermarkType:
    type: string
    enum:
      - WATERMARK_TYPE_UNSPECIFIED
      - WATERMARK_TYPE_IMAGE
      - WATERMARK_TYPE_USER_ID
    default: WATERMARK_TYPE_UNSPECIFIED
    description: |2-
       - WATERMARK_TYPE_IMAGE: The watermark is an image.
       - WATERMARK_TYPE_USER_ID: The watermark is the user ID of the viewer.
  configuration.v1.AWSStorage:
    type: object
    properties:
      bucket_name:
        type: string
        description: Required. AWS name of s3 bucket.
      path:
        type: string
        description: Required. AWS path of s3 bucket.
      region:
        type: string
        description: Required. AWS region of s3 bucket.
      user_role_arn:
        type: string
        description: Required. The user AWS role arn.
      role_arn:
        type: string
        description: Output only. Blend vision AWS role arn.
        readOnly: true
      aws_account_arn:
        type: string
        description: Output only. Blend vision AWS account arn.
        readOnly: true
      external_id:
        type: string
        description: |-
          Required. AWS external id for policy.
          You need to get external id from `GetTrustPolicyInfo` API.
    required:
      - bucket_name
      - path
      - region
      - user_role_arn
      - external_id
  configuration.v1.AwsCdnSetting:
    type: object
    properties:
      account_id:
        type: string
        description: Required. The AWS account identifier, it is a 12-digit number, such as 012345678901.
      distribution_host:
        type: string
        description: Required. The aws distribution host.
    required:
      - account_id
      - distribution_host
  configuration.v1.BatchDeleteProfileSetsResponse:
    type: object
  configuration.v1.BatchDeleteProfilesResponse:
    type: object
  configuration.v1.ByoCdnSetting:
    type: object
    properties:
      id:
        type: string
        description: Output only. The resource identifier of byo cdn.
        readOnly: true
      name:
        type: string
        description: Required. The name of the byo cdn setting.
      type:
        $ref: '#/definitions/configuration.v1.CDNProvider'
        description: Required. The cdn provider.
      aws_cdn_setting:
        $ref: '#/definitions/configuration.v1.AwsCdnSetting'
        description: Optional. The cdn setting for aws, it is needed when type is `CDN_PROVIDER_AWS_CLOUDFRONT`.
      created_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
    required:
      - name
      - type
  configuration.v1.CDNProvider:
    type: string
    enum:
      - CDN_PROVIDER_UNSPECIFIED
      - CDN_PROVIDER_AWS_CLOUDFRONT
    default: CDN_PROVIDER_UNSPECIFIED
  configuration.v1.CloudStorage:
    type: object
    properties:
      id:
        type: string
        description: Output only. The resource identifier of cloud storage.
        readOnly: true
      name:
        type: string
        description: Required. The display name of cloud storage.
      type:
        $ref: '#/definitions/type.bv.v1.CloudStorageType'
        description: Immutable. The type of cloud storage.
      aws_storage:
        $ref: '#/definitions/configuration.v1.AWSStorage'
      created_at:
        type: string
        format: date-time
        title: Output only
        readOnly: true
    required:
      - name
  configuration.v1.CountryCode:
    type: object
    properties:
      code:
        type: string
      name:
        type: string
      continent_code:
        type: string
      continent_name:
        type: string
  configuration.v1.CreateByoCdnRequest:
    type: object
    properties:
      byo_cdn_setting:
        $ref: '#/definitions/configuration.v1.ByoCdnSetting'
  configuration.v1.CreateByoCdnResponse:
    type: object
    properties:
      byo_cdn_setting:
        $ref: '#/definitions/configuration.v1.ByoCdnSetting'
  configuration.v1.CreateCloudStorageRequest:
    type: object
    example:
      cloud_storage:
        aws_storage:
          bucket_name: blendvision-one-assume-role-source1
          external_id: 79e1c174-c1c0-4531-82d1-a9ea4373b727
          path: blendvisionone
          region: eu-west-1
          user_role_arn: arn:aws:iam::038528481894:role/blendvision-one-assume-role
        name: blendvision-one-cloud-storage
        type: CLOUD_STORAGE_TYPE_AWS
    properties:
      cloud_storage:
        $ref: '#/definitions/configuration.v1.CloudStorage'
  configuration.v1.CreateCloudStorageResponse:
    type: object
    example:
      cloud_storage:
        aws_storage:
          aws_account_arn: arn:aws:iam::537204725966:root
          bucket_name: blendvision-one-assume-role-source1
          external_id: cd272df0-2cc9-4f75-afb2-0ada81aadaa4
          path: blendvisionone
          region: eu-west-1
          role_arn: arn:aws:iam::537204725966:role/kks-platform-cloud-storage-dev
          user_role_arn: arn:aws:iam::038528481894:role/blendvision-one-assume-role
        created_at: "2023-03-09T11:24:37Z"
        id: 7b6f9698-590f-45bd-b31e-b76ff5c2d27a
        name: blendvision-one-cloud-storage
        type: CLOUD_STORAGE_TYPE_AWS
    properties:
      cloud_storage:
        $ref: '#/definitions/configuration.v1.CloudStorage'
  configuration.v1.CreatePlayerSettingRequest:
    type: object
    properties:
      player_setting:
        $ref: '#/definitions/configuration.v1.PlayerSetting'
    required:
      - player_setting
  configuration.v1.CreatePlayerSettingResponse:
    type: object
    properties:
      player_setting:
        $ref: '#/definitions/configuration.v1.PlayerSetting'
  configuration.v1.CreateProfileRequest:
    type: object
    example:
      profile:
        audio_bitrate: 24
        b_frame: true
        codec_profile: CODEC_PROFILE_AUTO
        frame_rate: FRAME_RATE_SOURCE
        gop_size: 2
        level: CODEC_PROFILE_LEVEL_AUTO
        name: test
        segment_duration: 6
        video_bitrate: 60
        video_codec: VIDEO_CODEC_H264
        video_height: 800
        video_width: 800
    properties:
      profile:
        $ref: '#/definitions/type.bv.v1.Profile'
        description: Required.
    required:
      - profile
  configuration.v1.CreateProfileResponse:
    type: object
    example:
      profile:
        audio_bitrate: "24"
        b_frame: true
        codec_profile: CODEC_PROFILE_AUTO
        frame_rate: FRAME_RATE_SOURCE
        gop_size: 2
        id: e9f5ca1c-1d38-4baf-9527-96fde619f496
        level: CODEC_PROFILE_LEVEL_AUTO
        name: test
        preset: false
        segment_duration: 6
        standard: RESOLUTION_TYPE_SD
        video_bitrate: "60"
        video_codec: VIDEO_CODEC_H264
        video_height: 800
        video_width: 800
    properties:
      profile:
        $ref: '#/definitions/type.bv.v1.Profile'
  configuration.v1.CreateProfileSetRequest:
    type: object
    example:
      profile_ids:
        - 77a94c55-57f7-419d-8520-ee288251a748
        - e11f00a6-9989-4ffe-b685-acea84ab85dd
        - 1024fed8-f8b9-4b54-99b2-85688296638a
      profile_set:
        multiple_audio_track:
          lang_customizes: []
          lang_from: LANG_FROM_FIRST_TRACK
        name: test
        protocols:
          - PROTOCOL_DASH
        smart_abr: false
        video_codec: VIDEO_CODEC_H264
    properties:
      profile_set:
        $ref: '#/definitions/type.bv.v1.ProfileSet'
        description: Required.
      profile_ids:
        type: array
        items:
          type: string
        description: Required. The maximum number of appended profiles is 10.
    required:
      - profile_set
      - profile_ids
  configuration.v1.CreateProfileSetResponse:
    type: object
    example:
      profile_set:
        id: 768b3c1a-f091-4985-83d8-803bd078565c
        multiple_audio_track:
          lang_customizes: []
          lang_from: LANG_FROM_FIRST_TRACK
        name: test
        preset: false
        profiles:
          - audio_bitrate: "192"
            b_frame: true
            codec_profile: CODEC_PROFILE_AUTO
            frame_rate: FRAME_RATE_60
            gop_size: 2
            id: 77a94c55-57f7-419d-8520-ee288251a748
            level: CODEC_PROFILE_LEVEL_AUTO
            name: 2160p-40Mbps
            preset: true
            segment_duration: 6
            standard: RESOLUTION_TYPE_4K
            video_bitrate: "40000"
            video_codec: VIDEO_CODEC_H264
            video_height: 2160
            video_width: 3840
          - audio_bitrate: "192"
            b_frame: true
            codec_profile: CODEC_PROFILE_AUTO
            frame_rate: FRAME_RATE_30
            gop_size: 2
            id: e11f00a6-9989-4ffe-b685-acea84ab85dd
            level: CODEC_PROFILE_LEVEL_AUTO
            name: 2160p-20Mbps
            preset: true
            segment_duration: 6
            standard: RESOLUTION_TYPE_4K
            video_bitrate: "20000"
            video_codec: VIDEO_CODEC_H264
            video_height: 2160
            video_width: 3840
          - audio_bitrate: "128"
            b_frame: true
            codec_profile: CODEC_PROFILE_AUTO
            frame_rate: FRAME_RATE_60
            gop_size: 2
            id: 1024fed8-f8b9-4b54-99b2-85688296638a
            level: CODEC_PROFILE_LEVEL_AUTO
            name: 1080p-10Mbps
            preset: true
            segment_duration: 6
            standard: RESOLUTION_TYPE_FHD
            video_bitrate: "10000"
            video_codec: VIDEO_CODEC_H264
            video_height: 1080
            video_width: 1920
        protocols:
          - PROTOCOL_DASH
        smart_abr: false
        video_codec: VIDEO_CODEC_H264
    properties:
      profile_set:
        $ref: '#/definitions/type.bv.v1.ProfileSet'
    required:
      - profile_set
      - profile_ids
  configuration.v1.CreateSystemPlayerSettingRequest:
    type: object
    properties:
      player_setting:
        $ref: '#/definitions/configuration.v1.PlayerSetting'
    required:
      - player_setting
  configuration.v1.CreateSystemPlayerSettingResponse:
    type: object
    properties:
      player_setting:
        $ref: '#/definitions/configuration.v1.PlayerSetting'
  configuration.v1.DeleteByoCdnResponse:
    type: object
  configuration.v1.DeleteCloudStorageResponse:
    type: object
  configuration.v1.DeletePlayerSettingResponse:
    type: object
  configuration.v1.FillDefaultPlayerSettingByOrgRequest:
    type: object
  configuration.v1.FillDefaultPlayerSettingByOrgResponse:
    type: object
  configuration.v1.GetByoCdnResponse:
    type: object
    properties:
      byo_cdn_setting:
        $ref: '#/definitions/configuration.v1.ByoCdnSetting'
  configuration.v1.GetCloudStorageResponse:
    type: object
    example:
      cloud_storage:
        aws_storage:
          aws_account_arn: arn:aws:iam::537204725966:root
          bucket_name: blendvision-one-assume-role-source1
          external_id: cd272df0-2cc9-4f75-afb2-0ada81aadaa4
          path: blendvisionone
          region: eu-west-1
          role_arn: arn:aws:iam::537204725966:role/kks-platform-cloud-storage-dev
          user_role_arn: arn:aws:iam::038528481894:role/blendvision-one-assume-role
        created_at: "2023-03-09T11:24:37Z"
        id: 7b6f9698-590f-45bd-b31e-b76ff5c2d27a
        name: blendvision-one-cloud-storage
        type: CLOUD_STORAGE_TYPE_AWS
    properties:
      cloud_storage:
        $ref: '#/definitions/configuration.v1.CloudStorage'
        readOnly: true
  configuration.v1.GetPlayerSettingResponse:
    type: object
    properties:
      player_setting:
        $ref: '#/definitions/configuration.v1.PlayerSetting'
  configuration.v1.GetProfileResponse:
    type: object
    example:
      profile:
        audio_bitrate: "24"
        b_frame: true
        codec_profile: CODEC_PROFILE_AUTO
        frame_rate: FRAME_RATE_SOURCE
        gop_size: 2
        id: e9f5ca1c-1d38-4baf-9527-96fde619f496
        level: CODEC_PROFILE_LEVEL_AUTO
        name: test
        preset: false
        segment_duration: 6
        standard: RESOLUTION_TYPE_SD
        video_bitrate: "60"
        video_codec: VIDEO_CODEC_H264
        video_height: 800
        video_width: 800
    properties:
      profile:
        $ref: '#/definitions/type.bv.v1.Profile'
  configuration.v1.GetProfileSetResponse:
    type: object
    example:
      profile_set:
        id: 48fedbd2-ca4e-4829-9ee9-40fb4cf624ad
        multiple_audio_track:
          lang_customizes: []
          lang_from: LANG_FROM_FIRST_TRACK
        name: H.265-1080P-30fps
        preset: true
        profiles:
          - audio_bitrate: "128"
            b_frame: true
            codec_profile: CODEC_PROFILE_AUTO
            frame_rate: FRAME_RATE_30
            gop_size: 2
            id: bf5be54f-66c9-4555-b839-16bd71be18fd
            level: CODEC_PROFILE_LEVEL_AUTO
            name: 1080p-2.5Mbps
            preset: true
            segment_duration: 6
            standard: RESOLUTION_TYPE_FHD
            video_bitrate: "2500"
            video_codec: VIDEO_CODEC_H265
            video_height: 1080
            video_width: 1920
          - audio_bitrate: "128"
            b_frame: true
            codec_profile: CODEC_PROFILE_AUTO
            frame_rate: FRAME_RATE_30
            gop_size: 2
            id: 16de29f0-ee92-4906-87e6-589ab9e30651
            level: CODEC_PROFILE_LEVEL_AUTO
            name: 720p-1.7Mbps
            preset: true
            segment_duration: 6
            standard: RESOLUTION_TYPE_HD
            video_bitrate: "1700"
            video_codec: VIDEO_CODEC_H265
            video_height: 720
            video_width: 1440
          - audio_bitrate: "96"
            b_frame: true
            codec_profile: CODEC_PROFILE_AUTO
            frame_rate: FRAME_RATE_30
            gop_size: 2
            id: 332acda1-d088-4e51-8578-fa46f47e4d5d
            level: CODEC_PROFILE_LEVEL_AUTO
            name: 480p-1.0Mbps
            preset: true
            segment_duration: 6
            standard: RESOLUTION_TYPE_SD
            video_bitrate: "1000"
            video_codec: VIDEO_CODEC_H265
            video_height: 480
            video_width: 850
          - audio_bitrate: "64"
            b_frame: true
            codec_profile: CODEC_PROFILE_AUTO
            frame_rate: FRAME_RATE_30
            gop_size: 2
            id: adae398a-cf4c-41bd-8c13-3d447a344c8b
            level: CODEC_PROFILE_LEVEL_AUTO
            name: 360p-500kbps
            preset: true
            segment_duration: 6
            standard: RESOLUTION_TYPE_SD
            video_bitrate: "500"
            video_codec: VIDEO_CODEC_H265
            video_height: 360
            video_width: 640
          - audio_bitrate: "64"
            b_frame: true
            codec_profile: CODEC_PROFILE_AUTO
            frame_rate: FRAME_RATE_30
            gop_size: 2
            id: 5e9a4cf4-f9a8-498e-9938-a8df91fb6cb6
            level: CODEC_PROFILE_LEVEL_AUTO
            name: 240p-300kbps
            preset: true
            segment_duration: 6
            standard: RESOLUTION_TYPE_SD
            video_bitrate: "300"
            video_codec: VIDEO_CODEC_H265
            video_height: 240
            video_width: 426
        protocols:
          - PROTOCOL_DASH
          - PROTOCOL_HLS
        smart_abr: false
        video_codec: VIDEO_CODEC_H265
    properties:
      profile_set:
        $ref: '#/definitions/type.bv.v1.ProfileSet'
  configuration.v1.GetSystemPlayerSettingResponse:
    type: object
    properties:
      player_setting:
        $ref: '#/definitions/configuration.v1.PlayerSetting'
  configuration.v1.GetTrustPolicyInfoResponse:
    type: object
    example:
      aws_account_arn: arn:aws:iam::537204725966:root
      external_id: 79e1c174-c1c0-4531-82d1-a9ea4373b727
      role_arn: arn:aws:iam::537204725966:role/kks-platform-cloud-storage-dev
    properties:
      aws_account_arn:
        type: string
        description: |-
          Output Only. Blend vision AWS account arn.
          This is intended for use with cloud storage.
        readOnly: true
      role_arn:
        type: string
        description: |-
          Output Only. Blend vision AWS role arn.
          This is intended for use with cloud storage.
        readOnly: true
      external_id:
        type: string
        description: |-
          Output Only. AWS external id for policy.
          This is intended for use with cloud storage.
        readOnly: true
  configuration.v1.LanguageCode:
    type: object
    properties:
      code:
        type: string
      name:
        type: string
  configuration.v1.ListByoCdnsResponse:
    type: object
    properties:
      byo_cdn_settings:
        type: array
        items:
          type: object
          $ref: '#/definitions/configuration.v1.ByoCdnSetting'
        readOnly: true
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  configuration.v1.ListCloudStorageFilter:
    type: object
    properties:
      name:
        type: string
        title: Optional. Filter by cloud storage name
  configuration.v1.ListCloudStoragesResponse:
    type: object
    example:
      cloud_storages:
        - aws_storage:
            aws_account_arn: arn:aws:iam::537204725966:root
            bucket_name: blendvision-one-assume-role-source1
            external_id: cd272df0-2cc9-4f75-afb2-0ada81aadaa4
            path: blendvisionone
            region: eu-west-1
            role_arn: arn:aws:iam::537204725966:role/kks-platform-cloud-storage-dev
            user_role_arn: arn:aws:iam::038528481894:role/blendvision-one-assume-role
          created_at: "2023-03-09T11:24:37Z"
          id: 7b6f9698-590f-45bd-b31e-b76ff5c2d27a
          name: blendvision-one-cloud-storage
          type: CLOUD_STORAGE_TYPE_AWS
        - aws_storage:
            aws_account_arn: arn:aws:iam::537204725966:root
            bucket_name: blendvision-one-assume-role-source1
            external_id: cd272df0-2cc9-4f75-afb2-0ada81aadaa4
            path: blendvisionone
            region: eu-west-1
            role_arn: arn:aws:iam::537204725966:role/kks-platform-cloud-storage-dev
            user_role_arn: arn:aws:iam::038528481894:role/blendvision-one-assume-role
          created_at: "2023-03-13T01:38:37Z"
          id: 182266f3-9c78-4dcc-9fc7-65a3c33d9dc1
          name: blendvisionone
          type: CLOUD_STORAGE_TYPE_AWS
        - aws_storage:
            aws_account_arn: arn:aws:iam::537204725966:root
            bucket_name: blendvision-one-assume-role-source1
            external_id: cd272df0-2cc9-4f75-afb2-0ada81aadaa4
            path: blendvisionone
            region: eu-west-1
            role_arn: arn:aws:iam::537204725966:role/kks-platform-cloud-storage-dev
            user_role_arn: arn:aws:iam::038528481894:role/blendvision-one-assume-role
          created_at: "2023-03-13T01:39:08Z"
          id: d2a32dba-2a49-413e-abee-c938ccabb02d
          name: blendvisionone
          type: CLOUD_STORAGE_TYPE_AWS
        - aws_storage:
            aws_account_arn: arn:aws:iam::537204725966:root
            bucket_name: blendvision-one-assume-role-source1
            external_id: cd272df0-2cc9-4f75-afb2-0ada81aadaa4
            path: blendvisionone
            region: eu-west-1
            role_arn: arn:aws:iam::537204725966:role/kks-platform-cloud-storage-dev
            user_role_arn: arn:aws:iam::038528481894:role/blendvision-one-assume-role
          created_at: "2023-03-13T01:39:34Z"
          id: 90524c04-6a3d-407b-b0a0-2e18a3a0a650
          name: blendvisionone
          type: CLOUD_STORAGE_TYPE_AWS
      pagination:
        current_page: 1
        items_per_page: 10
        total_items: 4
    properties:
      cloud_storages:
        type: array
        items:
          type: object
          $ref: '#/definitions/configuration.v1.CloudStorage'
        readOnly: true
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  configuration.v1.ListCountryCodesResponse:
    type: object
    example:
      country_codes:
        - code: AF
          continent_code: AS
          continent_name: Asia
          name: Afghanistan
        - code: AL
          continent_code: EU
          continent_name: Europe
          name: Albania
    properties:
      country_codes:
        type: array
        items:
          type: object
          $ref: '#/definitions/configuration.v1.CountryCode'
  configuration.v1.ListLanguageCodesResponse:
    type: object
    example:
      language_codes:
        - code: aar
          name: Afar
        - code: abk
          name: Abkhazian
        - code: ace
          name: Achinese
        - code: ach
          name: Acoli
        - code: ada
          name: Adangme
    properties:
      language_codes:
        type: array
        items:
          type: object
          $ref: '#/definitions/configuration.v1.LanguageCode'
  configuration.v1.ListPlayerSettingsResponse:
    type: object
    properties:
      player_settings:
        type: array
        items:
          type: object
          $ref: '#/definitions/configuration.v1.PlayerSetting'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  configuration.v1.ListProfileFilter:
    type: object
    properties:
      video_codec:
        $ref: '#/definitions/type.bv.v1.VideoCodec'
        description: Optional.
  configuration.v1.ListProfileSetFilter:
    type: object
    properties:
      preset:
        $ref: '#/definitions/configuration.v1.Preset'
  configuration.v1.ListProfileSetsResponse:
    type: object
    example:
      id: 7b6f9698-590f-45bd-b31e-b76ff5c2d27a
    properties:
      profile_sets:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.ProfileSet'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  configuration.v1.ListProfilesResponse:
    type: object
    example:
      pagination:
        current_page: 1
        items_per_page: 10
        total_items: 13
      profiles:
        - audio_bitrate: "24"
          b_frame: true
          codec_profile: CODEC_PROFILE_AUTO
          frame_rate: FRAME_RATE_SOURCE
          gop_size: 2
          id: aa42c109-da05-4739-b72a-065b8a85dac8
          level: CODEC_PROFILE_LEVEL_AUTO
          name: eee
          preset: false
          segment_duration: 6
          standard: RESOLUTION_TYPE_SD
          video_bitrate: "60"
          video_codec: VIDEO_CODEC_H264
          video_height: 800
          video_width: 800
        - audio_bitrate: "192"
          b_frame: true
          codec_profile: CODEC_PROFILE_AUTO
          frame_rate: FRAME_RATE_60
          gop_size: 2
          id: 77a94c55-57f7-419d-8520-ee288251a748
          level: CODEC_PROFILE_LEVEL_AUTO
          name: 2160p-40Mbps
          preset: true
          segment_duration: 6
          standard: RESOLUTION_TYPE_4K
          video_bitrate: "40000"
          video_codec: VIDEO_CODEC_H264
          video_height: 2160
          video_width: 3840
        - audio_bitrate: "192"
          b_frame: true
          codec_profile: CODEC_PROFILE_AUTO
          frame_rate: FRAME_RATE_30
          gop_size: 2
          id: e11f00a6-9989-4ffe-b685-acea84ab85dd
          level: CODEC_PROFILE_LEVEL_AUTO
          name: 2160p-20Mbps
          preset: true
          segment_duration: 6
          standard: RESOLUTION_TYPE_4K
          video_bitrate: "20000"
          video_codec: VIDEO_CODEC_H264
          video_height: 2160
          video_width: 3840
        - audio_bitrate: "128"
          b_frame: true
          codec_profile: CODEC_PROFILE_AUTO
          frame_rate: FRAME_RATE_60
          gop_size: 2
          id: 1024fed8-f8b9-4b54-99b2-85688296638a
          level: CODEC_PROFILE_LEVEL_AUTO
          name: 1080p-10Mbps
          preset: true
          segment_duration: 6
          standard: RESOLUTION_TYPE_FHD
          video_bitrate: "10000"
          video_codec: VIDEO_CODEC_H264
          video_height: 1080
          video_width: 1920
        - audio_bitrate: "128"
          b_frame: true
          codec_profile: CODEC_PROFILE_AUTO
          frame_rate: FRAME_RATE_30
          gop_size: 2
          id: 57acf6c4-688e-47c5-a4f9-548c64ef6ddb
          level: CODEC_PROFILE_LEVEL_AUTO
          name: 1080p-5Mbps
          preset: true
          segment_duration: 6
          standard: RESOLUTION_TYPE_FHD
          video_bitrate: "5000"
          video_codec: VIDEO_CODEC_H264
          video_height: 1080
          video_width: 1920
        - audio_bitrate: "128"
          b_frame: true
          codec_profile: CODEC_PROFILE_AUTO
          frame_rate: FRAME_RATE_60
          gop_size: 2
          id: de802259-af85-48bf-8b97-fd6cf304c265
          level: CODEC_PROFILE_LEVEL_AUTO
          name: 720p-5Mbps
          preset: true
          segment_duration: 6
          standard: RESOLUTION_TYPE_HD
          video_bitrate: "5000"
          video_codec: VIDEO_CODEC_H264
          video_height: 720
          video_width: 1440
        - audio_bitrate: "128"
          b_frame: true
          codec_profile: CODEC_PROFILE_AUTO
          frame_rate: FRAME_RATE_30
          gop_size: 2
          id: d8b7caa0-7487-4cdf-ab64-44cf54783d34
          level: CODEC_PROFILE_LEVEL_AUTO
          name: 720p-2.5Mbps
          preset: true
          segment_duration: 6
          standard: RESOLUTION_TYPE_HD
          video_bitrate: "2500"
          video_codec: VIDEO_CODEC_H264
          video_height: 720
          video_width: 1440
        - audio_bitrate: "96"
          b_frame: true
          codec_profile: CODEC_PROFILE_AUTO
          frame_rate: FRAME_RATE_60
          gop_size: 2
          id: 8d8477ed-3353-4e45-b6fe-6c7ff2eefee1
          level: CODEC_PROFILE_LEVEL_AUTO
          name: 480p-3Mbps
          preset: true
          segment_duration: 6
          standard: RESOLUTION_TYPE_SD
          video_bitrate: "3000"
          video_codec: VIDEO_CODEC_H264
          video_height: 480
          video_width: 850
        - audio_bitrate: "96"
          b_frame: true
          codec_profile: CODEC_PROFILE_AUTO
          frame_rate: FRAME_RATE_30
          gop_size: 2
          id: 39861dab-83da-4cd7-bb58-7ae6af648c19
          level: CODEC_PROFILE_LEVEL_AUTO
          name: 480p-1.5Mbps
          preset: true
          segment_duration: 6
          standard: RESOLUTION_TYPE_SD
          video_bitrate: "1500"
          video_codec: VIDEO_CODEC_H264
          video_height: 480
          video_width: 850
        - audio_bitrate: "96"
          b_frame: true
          codec_profile: CODEC_PROFILE_AUTO
          frame_rate: FRAME_RATE_60
          gop_size: 2
          id: 627fb5be-b673-4fe6-876f-efad1d2011e5
          level: CODEC_PROFILE_LEVEL_AUTO
          name: 360p-1.4Mbps
          preset: true
          segment_duration: 6
          standard: RESOLUTION_TYPE_SD
          video_bitrate: "1400"
          video_codec: VIDEO_CODEC_H264
          video_height: 360
          video_width: 640
    properties:
      profiles:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.Profile'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  configuration.v1.ListSystemPlayerSettingsResponse:
    type: object
    properties:
      player_settings:
        type: array
        items:
          type: object
          $ref: '#/definitions/configuration.v1.PlayerSetting'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  configuration.v1.PlayerSetting:
    type: object
    properties:
      id:
        type: string
        description: Output only. The resource identifier of player setting.
        readOnly: true
      name:
        type: string
        description: Required. The name of player setting.
      description:
        type: string
        description: Optional. The decription of player setting.
      setting:
        type: object
        description: Required. The setting of player.
      assigned:
        type: string
        format: int64
        title: Output only
        readOnly: true
      is_default:
        type: boolean
        title: Output only
        readOnly: true
      is_system:
        type: boolean
        title: Output only
        readOnly: true
      created_at:
        type: string
        format: date-time
        title: Output only
        readOnly: true
      updated_at:
        type: string
        format: date-time
        title: Output only
        readOnly: true
    required:
      - name
      - setting
  configuration.v1.Preset:
    type: string
    enum:
      - PRESET_UNSPECIFIED
      - PRESET_EXCLUDE
      - PRESET_ONLY
    default: PRESET_UNSPECIFIED
  configuration.v1.SetDefaultPlayerSettingResponse:
    type: object
  configuration.v1.UpdateByoCdnResponse:
    type: object
  configuration.v1.UpdateCloudStorageResponse:
    type: object
  configuration.v1.UpdatePlayerSettingResponse:
    type: object
    properties:
      player_setting:
        $ref: '#/definitions/configuration.v1.PlayerSetting'
  configuration.v1.UpdateProfileResponse:
    type: object
    example:
      profile:
        audio_bitrate: "24"
        b_frame: true
        codec_profile: CODEC_PROFILE_AUTO
        frame_rate: FRAME_RATE_SOURCE
        gop_size: 2
        id: e9f5ca1c-1d38-4baf-9527-96fde619f496
        level: CODEC_PROFILE_LEVEL_AUTO
        name: test
        preset: false
        segment_duration: 6
        standard: RESOLUTION_TYPE_SD
        video_bitrate: "60"
        video_codec: VIDEO_CODEC_H264
        video_height: 800
        video_width: 800
    properties:
      profile:
        $ref: '#/definitions/type.bv.v1.Profile'
  configuration.v1.UpdateProfileSetResponse:
    type: object
    example:
      profile_set:
        id: 768b3c1a-f091-4985-83d8-803bd078565c
        multiple_audio_track:
          lang_customizes: []
          lang_from: LANG_FROM_FIRST_TRACK
        name: test1
        preset: false
        profiles:
          - audio_bitrate: "192"
            b_frame: true
            codec_profile: CODEC_PROFILE_AUTO
            frame_rate: FRAME_RATE_60
            gop_size: 2
            id: 77a94c55-57f7-419d-8520-ee288251a748
            level: CODEC_PROFILE_LEVEL_AUTO
            name: 2160p-40Mbps
            preset: true
            segment_duration: 6
            standard: RESOLUTION_TYPE_4K
            video_bitrate: "40000"
            video_codec: VIDEO_CODEC_H264
            video_height: 2160
            video_width: 3840
          - audio_bitrate: "192"
            b_frame: true
            codec_profile: CODEC_PROFILE_AUTO
            frame_rate: FRAME_RATE_30
            gop_size: 2
            id: e11f00a6-9989-4ffe-b685-acea84ab85dd
            level: CODEC_PROFILE_LEVEL_AUTO
            name: 2160p-20Mbps
            preset: true
            segment_duration: 6
            standard: RESOLUTION_TYPE_4K
            video_bitrate: "20000"
            video_codec: VIDEO_CODEC_H264
            video_height: 2160
            video_width: 3840
          - audio_bitrate: "128"
            b_frame: true
            codec_profile: CODEC_PROFILE_AUTO
            frame_rate: FRAME_RATE_60
            gop_size: 2
            id: 1024fed8-f8b9-4b54-99b2-85688296638a
            level: CODEC_PROFILE_LEVEL_AUTO
            name: 1080p-10Mbps
            preset: true
            segment_duration: 6
            standard: RESOLUTION_TYPE_FHD
            video_bitrate: "10000"
            video_codec: VIDEO_CODEC_H264
            video_height: 1080
            video_width: 1920
        protocols:
          - PROTOCOL_DASH
        smart_abr: false
        video_codec: VIDEO_CODEC_H264
    properties:
      profile_set:
        $ref: '#/definitions/type.bv.v1.ProfileSet'
  configuration.v1.UpdateSystemPlayerSettingResponse:
    type: object
    properties:
      player_setting:
        $ref: '#/definitions/configuration.v1.PlayerSetting'
  configuration.v1.ValidateCloudStorageRequest:
    type: object
    example:
      cloud_storage:
        aws_storage:
          bucket_name: blendvision-one-assume-role-source1
          external_id: 79e1c174-c1c0-4531-82d1-a9ea4373b727
          path: blendvisionone
          region: eu-west-1
          user_role_arn: arn:aws:iam::038528481894:role/blendvision-one-assume-role
        name: blendvision-one-cloud-storage
        type: CLOUD_STORAGE_TYPE_AWS
    properties:
      cloud_storage:
        $ref: '#/definitions/configuration.v1.CloudStorage'
    required:
      - cloud_storage
  configuration.v1.ValidateCloudStorageResponse:
    type: object
  content.v1.BatchGetFilesResponse:
    type: object
    properties:
      files:
        type: array
        items:
          type: object
          $ref: '#/definitions/content.v1.File'
  content.v1.BatchGetStreamsResponse:
    type: object
    properties:
      streams:
        type: array
        items:
          type: object
          $ref: '#/definitions/content.v1.Stream'
  content.v1.CancelUploadFileRequest:
    type: object
    properties:
      id:
        type: string
        title: Required. file id
      upload_id:
        type: string
        description: Required.
    required:
      - id
      - upload_id
  content.v1.CancelUploadFileResponse:
    type: object
  content.v1.CompleteData:
    type: object
    properties:
      id:
        type: string
        title: |-
          Required.
          upload id
      checksum_sha1:
        type: string
        title: |-
          Required.
          base64-encoded, 160-bit SHA-1 digest of the object
      parts:
        type: array
        items:
          type: object
          $ref: '#/definitions/content.v1.CompletePart'
        description: Required.
    required:
      - id
      - checksum_sha1
      - parts
  content.v1.CompleteFileResponse:
    type: object
    properties:
      file:
        $ref: '#/definitions/content.v1.File'
  content.v1.CompletePart:
    type: object
    properties:
      part_number:
        type: integer
        format: int32
      etag:
        type: string
  content.v1.CompleteUploadFileResponse:
    type: object
    properties:
      file:
        $ref: '#/definitions/content.v1.File'
  content.v1.CreateFileRequest:
    type: object
    properties:
      file:
        $ref: '#/definitions/content.v1.File'
        description: Required.
    required:
      - file
  content.v1.CreateFileResponse:
    type: object
    properties:
      file:
        $ref: '#/definitions/content.v1.File'
  content.v1.CreateStreamRequest:
    type: object
    properties:
      stream:
        $ref: '#/definitions/content.v1.Stream'
        description: Required.
    required:
      - stream
  content.v1.CreateStreamResponse:
    type: object
    properties:
      stream:
        $ref: '#/definitions/content.v1.Stream'
  content.v1.DeleteFileResponse:
    type: object
  content.v1.DeleteStreamResponse:
    type: object
  content.v1.DownloadFileResponse:
    type: object
    properties:
      id:
        type: string
      download_uri:
        type: string
      download_filename:
        type: string
      expiration_time:
        type: string
        format: date-time
  content.v1.File:
    type: object
    properties:
      id:
        type: string
        description: Output Only.
        readOnly: true
      type:
        $ref: '#/definitions/type.video.v1.FileType'
        description: Required. Immutable.
      name:
        type: string
        description: Required. Immutable.
      size:
        type: string
        format: int64
        description: Required. Immutable.
      uri:
        type: string
        description: Output Only.
        readOnly: true
      completed_at:
        type: string
        format: date-time
        description: Output Only.
        readOnly: true
      source:
        $ref: '#/definitions/content.v1.FileSource'
        description: Required. Immutable.
      attrs:
        type: object
        additionalProperties:
          type: string
    required:
      - type
      - name
      - size
      - source
  content.v1.FileSource:
    type: string
    enum:
      - FILE_SOURCE_UNSPECIFIED
      - FILE_SOURCE_VOD
      - FILE_SOURCE_LIVE
    default: FILE_SOURCE_UNSPECIFIED
  content.v1.GetFileResponse:
    type: object
    properties:
      file:
        $ref: '#/definitions/content.v1.File'
  content.v1.GetStreamResponse:
    type: object
    properties:
      stream:
        $ref: '#/definitions/content.v1.Stream'
  content.v1.InputSource:
    type: object
    properties:
      type:
        $ref: '#/definitions/content.v1.InputType'
      uri:
        type: string
  content.v1.InputType:
    type: string
    enum:
      - INPUT_TYPE_UNSPECIFIED
      - INPUT_TYPE_RTMP
      - INPUT_TYPE_WHIP
    default: INPUT_TYPE_UNSPECIFIED
  content.v1.ListFileResponse:
    type: object
    properties:
      files:
        type: array
        items:
          type: object
          $ref: '#/definitions/content.v1.File'
      next_page_token:
        type: string
  content.v1.ListStreamResponse:
    type: object
    properties:
      streams:
        type: array
        items:
          type: object
          $ref: '#/definitions/content.v1.Stream'
      next_page_token:
        type: string
  content.v1.Stream:
    type: object
    properties:
      id:
        type: string
        description: Immutable.
      type:
        $ref: '#/definitions/content.v1.StreamType'
        description: Required.
      uri:
        type: string
        description: |-
          Output Only.
          S3 URL where streaming content located.
        readOnly: true
      manifests:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.Manifest'
        description: Output Only.
        readOnly: true
      thumbnails:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.Thumbnail'
        description: Output Only.
        readOnly: true
      cover_image:
        $ref: '#/definitions/type.video.v1.CoverImage'
        description: Output Only.
        readOnly: true
      input_source_main:
        $ref: '#/definitions/content.v1.InputSource'
        description: Output Only.
        readOnly: true
      input_source_backup:
        $ref: '#/definitions/content.v1.InputSource'
        description: Output Only.
        readOnly: true
      attrs:
        type: object
        additionalProperties:
          type: string
        description: Optional.
    required:
      - type
  content.v1.StreamType:
    type: string
    enum:
      - STREAM_TYPE_UNSPECIFIED
      - STREAM_TYPE_VOD
      - STREAM_TYPE_LIVE
    default: STREAM_TYPE_UNSPECIFIED
  content.v1.UpdateStreamResponse:
    type: object
    properties:
      stream:
        $ref: '#/definitions/content.v1.Stream'
  content.v1.UploadData:
    type: object
    properties:
      id:
        type: string
      parts:
        type: array
        items:
          type: object
          $ref: '#/definitions/content.v1.UploadPart'
  content.v1.UploadFileRequest:
    type: object
    properties:
      file:
        $ref: '#/definitions/content.v1.File'
        description: Required.
    required:
      - file
  content.v1.UploadFileResponse:
    type: object
    properties:
      file:
        $ref: '#/definitions/content.v1.File'
      upload_data:
        $ref: '#/definitions/content.v1.UploadData'
  content.v1.UploadPart:
    type: object
    properties:
      part_number:
        type: integer
        format: int32
      presigned_url:
        type: string
  delivery.v1.CreateRequest:
    type: object
    properties:
      source_type:
        $ref: '#/definitions/delivery.v1.SourceType'
      origins:
        type: array
        items:
          type: object
          $ref: '#/definitions/delivery.v1.Origin'
      locations:
        type: array
        items:
          type: string
      stream_id:
        type: string
      sender:
        $ref: '#/definitions/delivery.v1.Sender'
  delivery.v1.CreateResponse:
    type: object
    properties:
      delivery:
        $ref: '#/definitions/delivery.v1.Delivery'
  delivery.v1.Delivery:
    type: object
    properties:
      id:
        type: string
      host:
        type: string
      status:
        $ref: '#/definitions/delivery.v1.Status'
      source_type:
        $ref: '#/definitions/delivery.v1.SourceType'
      tenant_id:
        type: string
      created_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
  delivery.v1.GetByHostResponse:
    type: object
    properties:
      delivery:
        $ref: '#/definitions/delivery.v1.Delivery'
  delivery.v1.GetResponse:
    type: object
    properties:
      delivery:
        $ref: '#/definitions/delivery.v1.Delivery'
  delivery.v1.Origin:
    type: object
    properties:
      protocol:
        $ref: '#/definitions/type.video.v1.Protocol'
      path:
        type: string
  delivery.v1.ReleaseResponse:
    type: object
  delivery.v1.Sender:
    type: string
    enum:
      - SENDER_UNSPECIFIED
      - SENDER_LIVE
      - SENDER_VOD
      - SENDER_CATCHUP
      - SENDER_AUDIO
    default: SENDER_UNSPECIFIED
  delivery.v1.SourceType:
    type: string
    enum:
      - SOURCE_TYPE_UNSPECIFIED
      - SOURCE_TYPE_LIVE
      - SOURCE_TYPE_ULL
      - SOURCE_TYPE_VOD
      - SOURCE_TYPE_AUDIO
    default: SOURCE_TYPE_UNSPECIFIED
  delivery.v1.Status:
    type: string
    enum:
      - STATUS_UNSPECIFIED
      - STATUS_CREATING
      - STATUS_DEPLOYED
      - STATUS_DISABLING
      - STATUS_DISABLED
      - STATUS_DELETED
      - STATUS_FAILED
      - STATUS_WAIT_FOR_CREATE
      - STATUS_WAIT_FOR_DISABLE
    default: STATUS_UNSPECIFIED
  drm.v1.Credential:
    type: object
    properties:
      type:
        $ref: '#/definitions/drm.v1.CredentialType'
      token:
        type: string
  drm.v1.CredentialType:
    type: string
    enum:
      - CREDENTIAL_TYPE_UNSPECIFIED
      - CREDENTIAL_TYPE_UPFRONT_ECDSA
    default: CREDENTIAL_TYPE_UNSPECIFIED
  drm.v1.GetFairPlayCertificateResponse:
    type: object
    properties:
      certificate:
        type: string
        format: byte
  drm.v1.GetFairPlayLicenseResponse:
    type: object
    properties:
      license:
        type: string
        format: byte
  drm.v1.GetPlayReadyLicenseResponse:
    type: object
    properties:
      license:
        type: string
        format: byte
  drm.v1.GetWidevineLicenseResponse:
    type: object
    properties:
      license:
        type: string
        format: byte
  encoding.v1.AvMux:
    type: object
    properties:
      profile_id:
        type: string
        title: id from encoding_profiles
  encoding.v1.CancelJobResponse:
    type: object
  encoding.v1.Config:
    type: object
    properties:
      queue:
        $ref: '#/definitions/type.video.v1.Queue'
      protocols:
        type: array
        items:
          type: object
          $ref: '#/definitions/encoding.v1.Protocol'
      av_mux:
        $ref: '#/definitions/encoding.v1.AvMux'
        title: enable av_mux
      smart_abr:
        type: boolean
        title: enable smart abr
      display_aspect_ratio:
        $ref: '#/definitions/type.video.v1.DisplayAspectRatio'
      multiple_audio_track:
        $ref: '#/definitions/type.video.v1.MultipleAudioTrack'
      thumbnail_seekings:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.ThumbnailSeeking'
      profiles:
        type: array
        items:
          type: object
          $ref: '#/definitions/encoding.v1.Profile'
      subtitle:
        $ref: '#/definitions/type.video.v1.Subtitle'
      cover_image:
        $ref: '#/definitions/encoding.v1.CoverImage'
  encoding.v1.CoverImage:
    type: object
    properties:
      snapshot_point:
        type: number
        format: float
      height:
        type: integer
        format: int32
  encoding.v1.CreateJobRequest:
    type: object
    properties:
      source_uri:
        type: string
      destination_uri:
        type: string
      config:
        $ref: '#/definitions/encoding.v1.Config'
    required:
      - source_uri
      - destination_uri
      - config
  encoding.v1.CreateJobResponse:
    type: object
    properties:
      id:
        type: string
  encoding.v1.CreateSubtitleEmbedRequest:
    type: object
    properties:
      destination_uri:
        type: string
      manifests:
        type: array
        items:
          type: object
          $ref: '#/definitions/encoding.v1.Manifest'
      subtitles:
        type: array
        items:
          type: object
          $ref: '#/definitions/encoding.v1.EmbedSubtitle'
    required:
      - destination_uri
      - manifests
      - subtitles
  encoding.v1.CreateSubtitleEmbedResponse:
    type: object
    properties:
      id:
        type: string
  encoding.v1.DeploymentAudio:
    type: object
    properties:
      profile_id:
        type: string
      group_id:
        type: string
      codec:
        $ref: '#/definitions/type.video.v1.AudioCodec'
      lang:
        type: string
      bitrate:
        type: string
        format: int64
      sample_rate:
        type: string
        format: int64
  encoding.v1.DeploymentProfile:
    type: object
    properties:
      videos:
        type: array
        items:
          type: object
          $ref: '#/definitions/encoding.v1.DeploymentVideo'
      audios:
        type: array
        items:
          type: object
          $ref: '#/definitions/encoding.v1.DeploymentAudio'
  encoding.v1.DeploymentProtocol:
    type: string
    enum:
      - DEPLOYMENT_PROTOCOL_UNSPECIFIED
      - DEPLOYMENT_PROTOCOL_HLS
      - DEPLOYMENT_PROTOCOL_DASH
      - DEPLOYMENT_PROTOCOL_PROGRESSIVE
    default: DEPLOYMENT_PROTOCOL_UNSPECIFIED
  encoding.v1.DeploymentSmartAbr:
    type: object
    properties:
      uri:
        type: string
      profile_id:
        type: string
      profile_ids:
        type: array
        items:
          type: string
  encoding.v1.DeploymentVideo:
    type: object
    properties:
      profile_id:
        type: string
      group_id:
        type: string
      codec:
        $ref: '#/definitions/type.video.v1.VideoCodec'
      height:
        type: integer
        format: int32
      width:
        type: integer
        format: int32
      bitrate:
        type: string
        format: int64
      frame_rate:
        type: string
      aspect_ratio:
        $ref: '#/definitions/type.video.v1.DisplayAspectRatio'
  encoding.v1.EmbedSubtitle:
    type: object
    properties:
      code:
        type: string
      display:
        type: string
      uri:
        type: string
  encoding.v1.EncodingTime:
    type: object
    properties:
      start:
        type: string
        format: date-time
        readOnly: true
      end:
        type: string
        format: date-time
        readOnly: true
  encoding.v1.Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
  encoding.v1.GetJobResponse:
    type: object
    properties:
      id:
        type: string
        title: job id
      status:
        $ref: '#/definitions/encoding.v1.Status'
      data:
        $ref: '#/definitions/encoding.v1.JobData'
      error:
        $ref: '#/definitions/encoding.v1.Error'
        description: 'Deprecated: Use `error_infos` instead.'
      error_infos:
        type: array
        items:
          type: object
          $ref: '#/definitions/google.rpc.ErrorInfo'
        description: Output only. Optional. A list of messages that carry the error infos when job is failed.
        readOnly: true
  encoding.v1.GetSubtitleEmbedResponse:
    type: object
    properties:
      id:
        type: string
      status:
        $ref: '#/definitions/encoding.v1.SubtitleEmbedStatus'
      data:
        $ref: '#/definitions/encoding.v1.SubtitleEmbedData'
      error:
        $ref: '#/definitions/encoding.v1.Error'
        description: 'Deprecated: Use `error_infos` instead.'
      error_infos:
        type: array
        items:
          type: object
          $ref: '#/definitions/google.rpc.ErrorInfo'
        description: Output only. Optional. A list of messages that carry the error infos when subtitle embeding is failed.
        readOnly: true
  encoding.v1.JobData:
    type: object
    properties:
      source:
        $ref: '#/definitions/encoding.v1.JobSource'
      deployments:
        type: array
        items:
          type: object
          $ref: '#/definitions/encoding.v1.JobDeployment'
      thumbnails:
        type: array
        items:
          type: object
          $ref: '#/definitions/encoding.v1.JobThumbnail'
      cover_image:
        $ref: '#/definitions/type.video.v1.CoverImage'
      encoding_time:
        $ref: '#/definitions/encoding.v1.EncodingTime'
  encoding.v1.JobDeployment:
    type: object
    properties:
      uri:
        type: string
      protocol:
        $ref: '#/definitions/encoding.v1.DeploymentProtocol'
      timestamp:
        type: string
        format: int64
      duration:
        type: number
        format: float
      profile:
        $ref: '#/definitions/encoding.v1.DeploymentProfile'
      smart_abr_infos:
        type: array
        items:
          type: object
          $ref: '#/definitions/encoding.v1.DeploymentSmartAbr'
  encoding.v1.JobSource:
    type: object
    properties:
      uri:
        type: string
      size:
        type: string
        format: int64
      bitrate:
        type: string
        format: int64
      duration:
        type: number
        format: float
      videos:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.VideoSource'
      audios:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.AudioSource'
  encoding.v1.JobThumbnail:
    type: object
    properties:
      uri:
        type: string
      timestamp:
        type: string
        format: int64
      image_height:
        type: integer
        format: int32
      image_width:
        type: integer
        format: int32
      tile_width:
        type: integer
        format: int32
      tile_height:
        type: integer
        format: int32
      interval:
        type: integer
        format: int32
  encoding.v1.KeyAssignment:
    type: object
    properties:
      profile_id:
        type: string
      key:
        type: string
      key_id:
        type: string
      iv:
        type: string
  encoding.v1.Manifest:
    type: object
    properties:
      protocol:
        $ref: '#/definitions/type.video.v1.Protocol'
      uri:
        type: string
  encoding.v1.Profile:
    type: object
    properties:
      id:
        type: string
      description:
        type: string
      video:
        $ref: '#/definitions/encoding.v1.Video'
      audio:
        $ref: '#/definitions/type.video.v1.Audio'
  encoding.v1.Protocol:
    type: object
    properties:
      type:
        $ref: '#/definitions/type.video.v1.Protocol'
      drm_system:
        type: array
        items:
          $ref: '#/definitions/type.video.v1.DrmSystem'
      key_assignments:
        type: array
        items:
          type: object
          $ref: '#/definitions/encoding.v1.KeyAssignment'
      clearkey_uri:
        type: string
  encoding.v1.Status:
    type: string
    enum:
      - STATUS_UNSPECIFIED
      - STATUS_CREATED
      - STATUS_INGESTED
      - STATUS_QUEUED
      - STATUS_INSPECTED
      - STATUS_DEPLOYED
      - STATUS_EXPORTED
      - STATUS_SUCCEEDED
      - STATUS_FAILED
      - STATUS_CANCELLED
    default: STATUS_UNSPECIFIED
  encoding.v1.SubtitleEmbedData:
    type: object
    properties:
      deployments:
        type: array
        items:
          type: object
          $ref: '#/definitions/encoding.v1.SubtitleEmbedDeployment'
  encoding.v1.SubtitleEmbedDeployment:
    type: object
    properties:
      uri:
        type: string
      protocol:
        $ref: '#/definitions/encoding.v1.DeploymentProtocol'
      timestamp:
        type: string
        format: int64
  encoding.v1.SubtitleEmbedStatus:
    type: string
    enum:
      - SUBTITLE_EMBED_STATUS_UNSPECIFIED
      - SUBTITLE_EMBED_STATUS_CREATED
      - SUBTITLE_EMBED_STATUS_INGESTED
      - SUBTITLE_EMBED_STATUS_QUEUED
      - SUBTITLE_EMBED_STATUS_DEPLOYED
      - SUBTITLE_EMBED_STATUS_EXPORTED
      - SUBTITLE_EMBED_STATUS_SUCCEEDED
      - SUBTITLE_EMBED_STATUS_FAILED
    default: SUBTITLE_EMBED_STATUS_UNSPECIFIED
  encoding.v1.Video:
    type: object
    properties:
      height:
        type: integer
        format: int32
        title: Height of the encoded video in pixels
      width:
        type: integer
        format: int32
        title: Width of the encoded video in pixels
      codec:
        $ref: '#/definitions/type.video.v1.VideoCodec'
        title: Video codec
      codec_profile:
        $ref: '#/definitions/type.video.v1.CodecProfile'
        title: H.264/H.265 codec Profile
      codec_profile_level:
        $ref: '#/definitions/type.video.v1.CodecProfileLevel'
        title: Specify level for H.264/H.265,
      b_frame:
        type: boolean
        title: Enable/Disable B-frame in H.264/H.265
      bitrate:
        type: string
        format: int64
        title: Video bitrate
      gop_size:
        type: integer
        format: int32
        title: GOP Length (keyframe interval) in seconds
      frame_rate:
        $ref: '#/definitions/type.video.v1.FrameRate'
        title: Video frame rate
      pte:
        $ref: '#/definitions/type.video.v1.PTE'
        title: Per-title encoding
      segment_length_seconds:
        type: integer
        format: int32
        title: Length of video duration for each segment package (in seconds)
  event.v1.CreateEventResponse:
    type: object
    properties:
      event:
        $ref: '#/definitions/event.v1.Event'
  event.v1.Event:
    type: object
    properties:
      id:
        type: string
        description: Output only.
        readOnly: true
      type:
        type: string
        description: Required. Immutable.
      user_id:
        type: string
        title: 'Immutable. Pattern: "^[A-Za-z0-9_-]{1,64}$". Invalid Value: "-"'
        pattern: ^[A-Za-z0-9_-]{1,64}$
      version:
        type: string
        description: Output only.
        readOnly: true
      create_time:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      occurrence_time:
        type: string
        format: date-time
        description: The time when the event occurred.
      payload:
        $ref: '#/definitions/google.protobuf.Any'
        description: Immutable.
    required:
      - type
  event.v1.GetEventResponse:
    type: object
    properties:
      event:
        $ref: '#/definitions/event.v1.Event'
  event.v1.ListEventsResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/event.v1.Event'
  google.api.HttpBody:
    type: object
    properties:
      content_type:
        type: string
        description: The HTTP Content-Type header value specifying the content type of the body.
      data:
        type: string
        format: byte
        description: The HTTP request/response body as raw binary.
      extensions:
        type: array
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
        description: |-
          Application specific response metadata. Must be set in the first response
          for streaming APIs.
    description: |-
      Message that represents an arbitrary HTTP body. It should only be used for
      payload formats that can't be represented as JSON, such as raw binary or
      an HTML page.


      This message can be used both in streaming and non-streaming API methods in
      the request as well as the response.

      It can be used as a top-level request field, which is convenient if one
      wants to extract parameters from either the URL or HTTP template into the
      request fields and also want access to the raw HTTP body.

      Example:

          message GetResourceRequest {
            // A unique request id.
            string request_id = 1;

            // The raw HTTP body is bound to this field.
            google.api.HttpBody http_body = 2;

          }

          service ResourceService {
            rpc GetResource(GetResourceRequest)
              returns (google.api.HttpBody);
            rpc UpdateResource(google.api.HttpBody)
              returns (google.protobuf.Empty);

          }

      Example with streaming methods:

          service CaldavService {
            rpc GetCalendar(stream google.api.HttpBody)
              returns (stream google.api.HttpBody);
            rpc UpdateCalendar(stream google.api.HttpBody)
              returns (stream google.api.HttpBody);

          }

      Use of this type only changes how the request and response bodies are
      handled, all other features will continue to work unchanged.
  google.protobuf.Any:
    type: object
    properties:
      '@type':
        type: string
        description: |-
          A URL/resource name that uniquely identifies the type of the serialized
          protocol buffer message. This string must contain at least
          one "/" character. The last segment of the URL's path must represent
          the fully qualified name of the type (as in
          `path/google.protobuf.Duration`). The name should be in a canonical form
          (e.g., leading "." is not accepted).

          In practice, teams usually precompile into the binary all types that they
          expect it to use in the context of Any. However, for URLs which use the
          scheme `http`, `https`, or no scheme, one can optionally set up a type
          server that maps type URLs to message definitions as follows:

          * If no scheme is provided, `https` is assumed.
          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official
          protobuf release, and it is not used for type URLs beginning with
          type.googleapis.com.

          Schemes other than `http`, `https` (or the empty scheme) might be
          used with implementation specific semantics.
    additionalProperties: {}
    description: |-
      `Any` contains an arbitrary serialized protocol buffer message along with a
      URL that describes the type of the serialized message.

      Protobuf library provides support to pack/unpack Any values in the form
      of utility functions or additional generated methods of the Any type.

      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }
          // or ...
          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
            foo = any.unpack(Foo.getDefaultInstance());
          }

      Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

      Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := anypb.New(foo)
           if err != nil {
             ...
           }
           ...
           foo := &pb.Foo{}
           if err := any.UnmarshalTo(foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use
      'type.googleapis.com/full.type.name' as the type URL and the unpack
      methods only use the fully qualified type name after the last '/'
      in the type URL, for example "foo.bar.com/x/y.z" will yield type
      name "y.z".

      JSON

      The JSON representation of an `Any` value uses the regular
      representation of the deserialized, embedded message, with an
      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON
      representation, that representation will be embedded adding a field
      `value` which holds the custom JSON in addition to the `@type`
      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  google.protobuf.NullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

       The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  google.rpc.ErrorInfo:
    type: object
    properties:
      reason:
        type: string
        description: |-
          The reason of the error. This is a constant value that identifies the
          proximate cause of the error. Error reasons are unique within a particular
          domain of errors. This should be at most 63 characters and match
          /[A-Z0-9_]+/.
      domain:
        type: string
        description: |-
          The logical grouping to which the "reason" belongs. The error domain
          is typically the registered service name of the tool or product that
          generates the error. Example: "pubsub.googleapis.com". If the error is
          generated by some common infrastructure, the error domain must be a
          globally unique value that identifies the infrastructure. For Google API
          infrastructure, the error domain is "googleapis.com".
      metadata:
        type: object
        additionalProperties:
          type: string
        description: |-
          Additional structured details about this error.

          Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in
          length. When identifying the current value of an exceeded limit, the units
          should be contained in the key, not the value.  For example, rather than
          {"instanceLimit": "100/request"}, should be returned as,
          {"instanceLimitPerRequest": "100"}, if the client exceeds the number of
          instances that can be created in a single (batch) request.
    description: |-
      Describes the cause of the error with structured details.

      Example of an error when contacting the "pubsub.googleapis.com" API when it
      is not enabled:

          { "reason": "API_DISABLED"
            "domain": "googleapis.com"
            "metadata": {
              "resource": "projects/123",
              "service": "pubsub.googleapis.com"
            }
          }

      This response indicates that the pubsub.googleapis.com API is not enabled.

      Example of an error that is returned when attempting to create a Spanner
      instance in a region that is out of stock:

          { "reason": "STOCKOUT"
            "domain": "spanner.googleapis.com",
            "metadata": {
              "availableRegions": "us-central1,us-east2"
            }
          }
  google.rpc.Status:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/google.protobuf.Any'
  google.type.Decimal:
    type: object
    properties:
      value:
        type: string
        description: |-
          The decimal value, as a string.

          The string representation consists of an optional sign, `+` (`U+002B`)
          or `-` (`U+002D`), followed by a sequence of zero or more decimal digits
          ("the integer"), optionally followed by a fraction, optionally followed
          by an exponent.

          The fraction consists of a decimal point followed by zero or more decimal
          digits. The string must contain at least one digit in either the integer
          or the fraction. The number formed by the sign, the integer and the
          fraction is referred to as the significand.

          The exponent consists of the character `e` (`U+0065`) or `E` (`U+0045`)
          followed by one or more decimal digits.

          Services **should** normalize decimal values before storing them by:

            - Removing an explicitly-provided `+` sign (`+2.5` -> `2.5`).
            - Replacing a zero-length integer value with `0` (`.5` -> `0.5`).
            - Coercing the exponent character to lower-case (`2.5E8` -> `2.5e8`).
            - Removing an explicitly-provided zero exponent (`2.5e0` -> `2.5`).

          Services **may** perform additional normalization based on its own needs
          and the internal decimal implementation selected, such as shifting the
          decimal point and exponent value together (example: `2.5e-1` <-> `0.25`).
          Additionally, services **may** preserve trailing zeroes in the fraction
          to indicate increased precision, but are not required to do so.

          Note that only the `.` character is supported to divide the integer
          and the fraction; `,` **should not** be supported regardless of locale.
          Additionally, thousand separators **should not** be supported. If a
          service does support them, values **must** be normalized.

          The ENBF grammar is:

              DecimalString =
                [Sign] Significand [Exponent];

              Sign = '+' | '-';

              Significand =
                Digits ['.'] [Digits] | [Digits] '.' Digits;

              Exponent = ('e' | 'E') [Sign] Digits;

              Digits = { '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' };

          Services **should** clearly document the range of supported values, the
          maximum supported precision (total number of digits), and, if applicable,
          the scale (number of digits after the decimal point), as well as how it
          behaves when receiving out-of-bounds values.

          Services **may** choose to accept values passed as input even when the
          value has a higher precision or scale than the service supports, and
          **should** round the value to fit the supported scale. Alternatively, the
          service **may** error with `400 Bad Request` (`INVALID_ARGUMENT` in gRPC)
          if precision would be lost.

          Services **should** error with `400 Bad Request` (`INVALID_ARGUMENT` in
          gRPC) if the service receives a value outside of the supported range.
    description: |-
      A representation of a decimal value, such as 2.5. Clients may convert values
      into language-native decimal formats, such as Java's [BigDecimal][] or
      Python's [decimal.Decimal][].

      [BigDecimal]:
      https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html
      [decimal.Decimal]: https://docs.python.org/3/library/decimal.html
  key.v1.Config:
    type: object
    properties:
      key_pair_info:
        $ref: '#/definitions/key.v1.KeyPairInfo'
  key.v1.Content:
    type: object
    properties:
      id:
        type: string
        format: uuid
        title: |-
          Required. Immutable.
          Global unique content ID for the key. Should refer to content.v1.Stream.id
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      content_keys:
        type: array
        items:
          type: object
          $ref: '#/definitions/key.v1.ContentKey'
        description: Required. Immutable.
    required:
      - id
      - content_keys
  key.v1.ContentKey:
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: |-
          Immutable.
          The key ID which is a 16 bytes key represented as hexadecimal characters and hyphens.
          Auto-generated when empty.
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      type:
        $ref: '#/definitions/key.v1.ContentKeyType'
        description: |-
          Required. Immutable.
          The type of the content key.
      plaintext:
        type: string
        format: byte
        description: |-
          Immutable.
          The key in plaintext. When you use the RESTful API or gRPC Client CLI,
          the value is Base64-encoded. Otherwise, it is not Base64-encoded.
          Auto-generated when empty.
      ciphertext:
        type: string
        format: byte
        description: |-
          Immutable.
          The key in ciphertext. When you use the RESTful API or gRPC Client CLI,
          the value is Base64-encoded. Otherwise, it is not Base64-encoded.
      content_id:
        type: string
        description: Output only.
        readOnly: true
      remote_urls:
        type: array
        items:
          type: object
          $ref: '#/definitions/key.v1.ContentKeyRemoteURL'
        description: |-
          Output only.
          Return empty when the key does not support remote url.
        readOnly: true
    required:
      - type
  key.v1.ContentKeyRemoteURL:
    type: object
    properties:
      protocol:
        $ref: '#/definitions/type.video.v1.Protocol'
        description: |-
          Output only.
          The streaming protocol type.
        readOnly: true
      url:
        type: string
        description: |-
          Output only.
          The URL of the key.
        readOnly: true
  key.v1.ContentKeyType:
    type: string
    enum:
      - CONTENT_KEY_TYPE_UNSPECIFIED
      - CONTENT_KEY_TYPE_CLEAR_KEY
      - CONTENT_KEY_TYPE_DRM
    default: CONTENT_KEY_TYPE_UNSPECIFIED
  key.v1.CreateContentResponse:
    type: object
    properties:
      content:
        $ref: '#/definitions/key.v1.Content'
  key.v1.CreateKeyPairResponse:
    type: object
    properties:
      key_pair_info:
        $ref: '#/definitions/key.v1.KeyPairInfo'
  key.v1.DeleteContentResponse:
    type: object
  key.v1.DeleteKeyPairResponse:
    type: object
  key.v1.GenerateKeyPairResponse:
    type: object
    properties:
      key_pair_info:
        $ref: '#/definitions/key.v1.KeyPairInfo'
  key.v1.GetConfigResponse:
    type: object
    properties:
      config:
        $ref: '#/definitions/key.v1.Config'
  key.v1.GetContentKeyResponse:
    type: object
    properties:
      content_key:
        $ref: '#/definitions/key.v1.ContentKey'
  key.v1.GetContentResponse:
    type: object
    properties:
      content:
        $ref: '#/definitions/key.v1.Content'
  key.v1.GetPublicKeyResponse:
    type: object
    properties:
      public_key:
        type: string
        format: byte
        description: |-
          The public key in plaintext. When you use the RESTful API or gRPC Client CLI,
          the value is Base64-encoded. Otherwise, it is not Base64-encoded.
  key.v1.KeyPair:
    type: object
    properties:
      id:
        type: string
        description: Output only.
        readOnly: true
      private_key_plaintext:
        type: string
        format: byte
        description: |-
          The private key in plaintext. When you use the RESTful API or gRPC Client CLI,
          the value is Base64-encoded. Otherwise, it is not Base64-encoded.
      public_key:
        type: string
        format: byte
        description: |-
          The public key in plaintext. When you use the RESTful API or gRPC Client CLI,
          the value is Base64-encoded. Otherwise, it is not Base64-encoded.
  key.v1.KeyPairInfo:
    type: object
    properties:
      id:
        type: string
        description: Output only.
        readOnly: true
  key.v1.ListKeyPairsResponse:
    type: object
    properties:
      key_pair_infos:
        type: array
        items:
          type: object
          $ref: '#/definitions/key.v1.KeyPairInfo'
      next_page_token:
        type: string
  key.v1.SignResponse:
    type: object
    properties:
      signature:
        type: string
        format: byte
  key.v1.SigningAlgorithm:
    type: string
    enum:
      - SIGNING_ALGORITHM_UNSPECIFIED
      - SIGNING_ALGORITHM_RSASSA_PKCS1_V1_5_SHA_256
    default: SIGNING_ALGORITHM_UNSPECIFIED
  key.v1.VerifyResponse:
    type: object
    properties:
      signature_valid:
        type: boolean
  org.v1.AWSMPEntitlement:
    type: string
    enum:
      - AWSMP_ENTITLEMENT_UNSPECIFIED
      - AWSMP_ENTITLEMENT_ENTITLEMENT_UPDATED
    default: AWSMP_ENTITLEMENT_UNSPECIFIED
  org.v1.AWSMPSetting:
    type: object
    properties:
      product_code:
        type: string
        description: Required. Immutable.
      appended_org_id:
        type: string
        description: Required.
      assume_role_arn:
        type: string
        description: Required.
      assume_role_external_id:
        type: string
        description: Required.
    required:
      - product_code
      - appended_org_id
      - assume_role_arn
      - assume_role_external_id
  org.v1.AWSMPSubscription:
    type: string
    enum:
      - AWSMP_SUBSCRIPTION_UNSPECIFIED
      - AWSMP_SUBSCRIPTION_SUBSCRIBE_SUCCESS
      - AWSMP_SUBSCRIPTION_SUBSCRIBE_FAIL
      - AWSMP_SUBSCRIPTION_UNSUBSCRIBE_PENDING
      - AWSMP_SUBSCRIPTION_UNSUBSCRIBE_SUCCESS
    default: AWSMP_SUBSCRIPTION_UNSPECIFIED
  org.v1.BatchAWSMPMeterUsageResponse:
    type: object
  org.v1.BatchCreateSubOrgsRequest:
    type: object
    example:
      organizations:
        - billing_cycle: 0
          contract_days: 0
          contract_months: 2
          contract_valid_start_time: "2023-07-24T14:15:22Z"
          description: test
          name: blendvision
          owner:
            email: blendvision@kkcompany.com
            first_name: test
            last_name: test
            need_confirm: false
          parent_id: 04212e7d-16ab-4996-bc3a-cf88719cd867
          plan_ids:
            - a8579efc-6828-4fc3-be7e-6000feabda77
          time_zone: Asia/Taipei
          type: ORGANIZATION_TYPE_BUSINESS
    properties:
      organizations:
        type: array
        items:
          type: object
          $ref: '#/definitions/org.v1.BatchCreateSubOrgsRequest.Request'
  org.v1.BatchCreateSubOrgsRequest.Request:
    type: object
    properties:
      name:
        type: string
        description: Required. The name of sub-organization.
      parent_id:
        type: string
        description: Required. The appended parent organization id of the sub-organization.
      type:
        $ref: '#/definitions/type.bv.v1.OrganizationType'
        description: Required. The type of the sub-organization.
      description:
        type: string
        description: Input only. The description of the sub-organization.
      owner:
        $ref: '#/definitions/type.bv.v1.OrgMember'
        description: Required. The owner of the sub-organization.
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.OrgMember'
        description: Input only. The member of the sub-organization.
      plan_ids:
        type: array
        items:
          type: string
        description: Input only. The assigned plan ids of the sub-organization.
      billing_cycle:
        type: integer
        format: int32
        description: |-
          Input only. The billing cycle of the reseller sub-organization.
          It's required and valid when the type is `ORGANIZATION_TYPE_RESELLER`.
      contract_valid_start_time:
        type: string
        format: date-time
        description: |-
          Input only. The contract start day of the business sub-organization.
          It's required and valid when the type is `ORGANIZATION_TYPE_BUSINESS`.
      contract_months:
        type: integer
        format: int32
        description: |-
          Input only. The contract months of the business sub-organization.
          It's required and valid when the type is `ORGANIZATION_TYPE_BUSINESS`.
          This field is mutually exclusive to `contract_days` field, it'll get the higher priority if both are provided.
          e.g. It'll use `contract_months` instead if both `contract_months` and `contract_days` are provided.
      contract_days:
        type: integer
        format: int32
        description: |-
          Input only. The contract days of the business sub-organization.
          It's required and valid when the type is `ORGANIZATION_TYPE_BUSINESS`.
          This field is mutually exclusive to `contract_months` field, it'll get the lower priority if both are provided.
          e.g. It'll use `contract_months` instead if both `contract_months` and `contract_days` are provided.
      time_zone:
        type: string
        description: Input only. The time zone to the sub-organization.
    required:
      - name
      - parent_id
      - type
      - owner
  org.v1.BatchCreateSubOrgsResponse:
    type: object
    properties:
      organizations:
        type: array
        items:
          type: object
          $ref: '#/definitions/org.v1.BatchCreateSubOrgsResponse.Response'
  org.v1.BatchCreateSubOrgsResponse.Response:
    type: object
    properties:
      organization:
        $ref: '#/definitions/type.bv.v1.APIOrganization'
      created_status:
        $ref: '#/definitions/org.v1.CreatedOrgStatus'
  org.v1.BatchJoinOrgRequest:
    type: object
    example:
      org_accounts:
        - account_id: f9bfbd37-70bf-4358-8a92-861700fb76da
          role_id: fc391cab-3292-4cd4-ba65-b02dc10f7d97
    properties:
      org_accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/org.v1.OrgAccount'
  org.v1.BatchJoinOrgResponse:
    type: object
    properties:
      succeed:
        type: array
        items:
          type: string
      failed:
        type: array
        items:
          type: string
  org.v1.ChangeAWSMPEntitlementResponse:
    type: object
  org.v1.ChangeAWSMPSubscriptionResponse:
    type: object
  org.v1.CheckExpiredRequest:
    type: object
  org.v1.CheckExpiredResponse:
    type: object
  org.v1.CreateGroupRequest:
    type: object
    properties:
      name:
        type: string
        description: Required. The name of the group to create.
      description:
        type: string
        description: Input only. The description of the group to create.
      user_ids:
        type: array
        items:
          type: string
        description: Input only. The user list to add to the group when creating.
    required:
      - name
  org.v1.CreateGroupResponse:
    type: object
    properties:
      group:
        $ref: '#/definitions/org.v1.Group'
  org.v1.CreateSubOrgRequest:
    type: object
    properties:
      name:
        type: string
        description: Required. The name of the sub-organization.
      parent_id:
        type: string
        description: Required. The appended parent organization id of the sub-organization.
      type:
        $ref: '#/definitions/type.bv.v1.OrganizationType'
        description: Required. The type of the sub-organization.
      owner_email:
        type: string
        description: Required. The owner email of the sub-organization.
      description:
        type: string
        description: Input only. The description of the sub-organization.
      plan_ids:
        type: array
        items:
          type: string
        description: Input only. The assigned plan ids of the sub-organization.
      billing_cycle:
        type: integer
        format: int32
        description: |-
          Input only. The billing cycle of the reseller sub-organization.
          It's required and valid when the type is `ORGANIZATION_TYPE_RESELLER`.
      contract_valid_start_time:
        type: string
        format: date-time
        description: |-
          Input only. The contract start day of the business sub-organization.
          It's required and valid when the type is `ORGANIZATION_TYPE_BUSINESS`.
      contract_months:
        type: integer
        format: int32
        description: |-
          Input only. The contract months of the business sub-organization.
          It's required and valid when the type is `ORGANIZATION_TYPE_BUSINESS`.
          This field is mutually exclusive to `contract_days` field, it'll get the higher priority if both are provided.
          e.g. It'll use `contract_months` instead if both `contract_months` and `contract_days` are provided.
      contract_days:
        type: integer
        format: int32
        description: |-
          Input only. The contract days of the business sub-organization.
          It's required and valid when the type is `ORGANIZATION_TYPE_BUSINESS`.
          This field is mutually exclusive to `contract_months` field, it'll get the lower priority if both are provided.
          e.g. It'll use `contract_months` instead if both `contract_months` and `contract_days` are provided.
    required:
      - name
      - parent_id
      - type
      - owner_email
  org.v1.CreateSubOrgResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/org.v1.Organization'
  org.v1.CreatedOrgStatus:
    type: string
    enum:
      - CREATED_ORG_STATUS_UNSPECIFIED
      - CREATED_ORG_STATUS_SUCCEED
      - CREATED_ORG_STATUS_FAILED
    default: CREATED_ORG_STATUS_UNSPECIFIED
  org.v1.DeactivateSubOrgResponse:
    type: object
  org.v1.DeleteGroupResponse:
    type: object
  org.v1.DeleteSubOrgResponse:
    type: object
  org.v1.FillTenantByOrgRequest:
    type: object
    properties:
      id:
        type: string
        description: Optional. The unique id of the organization.
  org.v1.FillTenantByOrgResponse:
    type: object
  org.v1.GetGroupResponse:
    type: object
    properties:
      group:
        $ref: '#/definitions/org.v1.Group'
  org.v1.GetOrgByLicenseKeyResponse:
    type: object
    properties:
      tenant_id:
        type: string
  org.v1.GetOrgInfoResponse:
    type: object
    properties:
      org_info:
        $ref: '#/definitions/org.v1.GetOrgInfoResponse.OrgInfo'
  org.v1.GetOrgInfoResponse.OrgInfo:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      tenant_id:
        type: string
      type:
        $ref: '#/definitions/type.bv.v1.OrganizationType'
      status:
        $ref: '#/definitions/type.bv.v1.OrganizationStatus'
  org.v1.GetResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/org.v1.Organization'
  org.v1.GetSubOrgDetailResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/org.v1.Organization'
      owner_info:
        $ref: '#/definitions/org.v1.OwnerInfo'
  org.v1.Group:
    type: object
    properties:
      id:
        type: string
        description: Output only. The unique id of the group.
        readOnly: true
      name:
        type: string
        description: Output only. The name of the group.
        readOnly: true
      description:
        type: string
        description: Output only. The description of the group.
        readOnly: true
      creator_name:
        type: string
        description: Output only. The name of the creator for the group.
        readOnly: true
      user_infos:
        type: array
        items:
          type: object
          $ref: '#/definitions/org.v1.UserInfo'
        description: Output only.
        readOnly: true
      members:
        type: integer
        format: int32
        description: Output only. The number of members in the group.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the group that was created.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the group that was last updated.
        readOnly: true
  org.v1.HierarchicalOrganizationInfo:
    type: object
    properties:
      id:
        type: string
        description: Output only. The unique id of the organization.
        readOnly: true
      name:
        type: string
        description: Output only. The name of the organization.
        readOnly: true
      type:
        $ref: '#/definitions/type.bv.v1.OrganizationType'
        description: Output only. The type of the organization.
        readOnly: true
      sub_orgs:
        type: array
        items:
          type: object
          $ref: '#/definitions/org.v1.HierarchicalOrganizationInfo'
        description: Output only. The sub-organizations list based on the organization.
        readOnly: true
  org.v1.InvitationResetResponse:
    type: object
  org.v1.ListAWSMPSettingsResponse:
    type: object
    properties:
      settings:
        type: array
        items:
          type: object
          $ref: '#/definitions/org.v1.AWSMPSetting'
  org.v1.ListAccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/org.v1.UserInfo'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  org.v1.ListAppendsResponse:
    type: object
    properties:
      organizations:
        type: array
        items:
          type: object
          $ref: '#/definitions/org.v1.OrganizationInfo'
  org.v1.ListGroupsResponse:
    type: object
    properties:
      groups:
        type: array
        items:
          type: object
          $ref: '#/definitions/org.v1.Group'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  org.v1.ListHierarchicalSubOrgsResponse:
    type: object
    properties:
      organizations:
        type: array
        items:
          type: object
          $ref: '#/definitions/org.v1.HierarchicalOrganizationInfo'
  org.v1.ListPlansResponse:
    type: object
    properties:
      plans:
        type: array
        items:
          type: object
          $ref: '#/definitions/org.v1.Plan'
  org.v1.ListRolesResponse:
    type: object
    properties:
      roles:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.Role'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  org.v1.ListSubOrgPlansResponse:
    type: object
    properties:
      plans:
        type: array
        items:
          type: object
          $ref: '#/definitions/org.v1.SubOrgPlan'
  org.v1.ListSubOrgResponse:
    type: object
    properties:
      organizations:
        type: array
        items:
          type: object
          $ref: '#/definitions/org.v1.Organization'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  org.v1.OrgAccount:
    type: object
    properties:
      account_id:
        type: string
      role_id:
        type: string
  org.v1.OrgPlan:
    type: object
    properties:
      id:
        type: string
        description: Output only. The unique id of the plan.
        readOnly: true
      name:
        type: string
        description: Output only. The name of the plan.
        readOnly: true
      type:
        $ref: '#/definitions/org.v1.PlanType'
        description: Output only. The type of the plan.
        readOnly: true
      status:
        $ref: '#/definitions/org.v1.PlanStatus'
        description: Output only. The status of the plan.
        readOnly: true
      description:
        type: string
        description: Output only. The description of the plan.
        readOnly: true
      trial:
        type: boolean
        description: Output only.
        readOnly: true
      group_plan:
        $ref: '#/definitions/org.v1.OrgPlan'
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
  org.v1.Organization:
    type: object
    properties:
      id:
        type: string
        description: Output only. The resource identifier of the organization.
        readOnly: true
      name:
        type: string
        description: Output only. The name of the organization.
        readOnly: true
      parent_id:
        type: string
        description: Output only. The appended parent organization id.
        readOnly: true
      type:
        $ref: '#/definitions/type.bv.v1.OrganizationType'
        description: Output only. Indicates the type of the organization.
        readOnly: true
      status:
        $ref: '#/definitions/type.bv.v1.OrganizationStatus'
        description: Output only. Indicates the status of the organization.
        readOnly: true
      description:
        type: string
        description: Output only. The description of the organization.
        readOnly: true
      owner_email:
        type: string
        description: Output only. The owner email of the organization.
        readOnly: true
      billing_cycle:
        type: integer
        format: int32
        description: Output only. The billing cycle of the organization.
        readOnly: true
      contract_valid_start_time:
        type: string
        format: date-time
        description: Output only. The contract valid start day won't be valid before the day.
        readOnly: true
      contract_months:
        type: integer
        format: int32
        description: Output only. The contract duration unit. It might one of the `contract_months` or `contract_days`.
        readOnly: true
      contract_days:
        type: integer
        format: int32
        description: Output only. The contract duration unit. It might one of the `contract_months` or `contract_days`.
        readOnly: true
      contract_valid_end_time:
        type: string
        format: date-time
        description: Output only. The contract valid end day won't be valid after the day.
        readOnly: true
      has_sub_orgs:
        type: boolean
        description: Output only. Indicates there are sub-organizations appended to the organization.
        readOnly: true
      parent_name:
        type: string
        description: Output only. The name of appended parent organization.
        readOnly: true
      license_key:
        type: string
        description: Output only.
        readOnly: true
      time_zone:
        type: string
        description: Output only. The time zone of the organization.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
  org.v1.OrganizationInfo:
    type: object
    properties:
      id:
        type: string
        description: Output only. The unique id of the organization.
        readOnly: true
      name:
        type: string
        description: Output only. The name of the organization.
        readOnly: true
      type:
        $ref: '#/definitions/type.bv.v1.OrganizationType'
        description: Output only. The type of the organization.
        readOnly: true
  org.v1.OwnerInfo:
    type: object
    properties:
      id:
        type: string
        description: Output only. The unique id of the owner account.
        readOnly: true
      email:
        type: string
        description: Output only. The email of the owner.
        readOnly: true
      invite_status:
        type: string
        description: Output only. The invitation status of the owner.
        readOnly: true
  org.v1.Plan:
    type: object
    properties:
      id:
        type: string
        description: Output only. The unique id of the plan.
        readOnly: true
      name:
        type: string
        description: Output only. The name of the plan.
        readOnly: true
      type:
        $ref: '#/definitions/org.v1.PlanType'
        description: Output only. The type of the plan.
        readOnly: true
      status:
        $ref: '#/definitions/org.v1.PlanStatus'
        description: Output only. The status of the plan.
        readOnly: true
      description:
        type: string
        description: Output only. The description of the plan.
        readOnly: true
      trial:
        type: boolean
        description: Output only. Indicates the plan is whether or not a trial plan.
        readOnly: true
      sub_plans:
        type: array
        items:
          type: object
          $ref: '#/definitions/org.v1.Plan'
        description: Output only. The list of sub plans of the plan.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the plan that was created.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the plan that was last updated.
        readOnly: true
  org.v1.PlanStatus:
    type: string
    enum:
      - PLAN_STATUS_UNSPECIFIED
      - PLAN_STATUS_ABLE_TO_ASSIGNED
    default: PLAN_STATUS_UNSPECIFIED
    description: ' - PLAN_STATUS_ABLE_TO_ASSIGNED: The `Plan` is be able to assigned.'
  org.v1.PlanType:
    type: string
    enum:
      - PLAN_TYPE_UNSPECIFIED
      - PLAN_TYPE_GROUP
      - PLAN_TYPE_PLAN
    default: PLAN_TYPE_UNSPECIFIED
  org.v1.ReactivateSubOrgResponse:
    type: object
  org.v1.RemoveAccountResponse:
    type: object
  org.v1.SetAWSMPSettingResponse:
    type: object
  org.v1.SubOrgPlan:
    type: object
    properties:
      plan:
        $ref: '#/definitions/org.v1.OrgPlan'
      in_used:
        type: boolean
        description: Output only. Indicates the plan is under used.
        readOnly: true
  org.v1.SwitchOwnerRequest:
    type: object
    properties:
      new_owner_id:
        type: string
    required:
      - new_owner_id
  org.v1.SwitchOwnerResponse:
    type: object
  org.v1.SwitchSubOrgOwnerResponse:
    type: object
  org.v1.UpdateGroupResponse:
    type: object
    properties:
      group:
        $ref: '#/definitions/org.v1.Group'
  org.v1.UpdateRequest:
    type: object
    properties:
      name:
        type: string
        description: Required. An organization name to update.
    required:
      - name
  org.v1.UpdateResponse:
    type: object
  org.v1.UpdateSubOrgResponse:
    type: object
  org.v1.UserInfo:
    type: object
    properties:
      id:
        type: string
        description: Output only. The unique id of the user.
        readOnly: true
      email:
        type: string
        description: Output only. The email of the user.
        readOnly: true
      status:
        $ref: '#/definitions/type.bv.v1.AccountStatus'
        description: Output only. The status of the user.
        readOnly: true
      role_type:
        $ref: '#/definitions/type.bv.v1.RoleType'
        description: Output only. The role of the user.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output only. The created time of the user.
        readOnly: true
      first_name:
        type: string
        description: Output only. The first name of the user.
        readOnly: true
      last_name:
        type: string
        description: Output only. The last name of the user.
        readOnly: true
  payment.gmo.v1.AdvanceSubscriptionTestClockResponse:
    type: object
  payment.gmo.v1.BatchGetPurchasesRequest:
    type: object
    properties:
      ids:
        type: array
        items:
          type: string
        description: The ids of the purchases to retrieve. Maximum length is 1000.
    required:
      - ids
  payment.gmo.v1.BatchGetPurchasesResponse:
    type: object
    properties:
      purchases:
        type: array
        items:
          type: object
          $ref: '#/definitions/payment.gmo.v1.Purchase'
  payment.gmo.v1.BatchGetSubscriptionsRequest:
    type: object
    properties:
      ids:
        type: array
        items:
          type: string
        description: 'The ids of the subscriptions to retrieve. Maximum length: 1000.'
      allow_missing:
        type: boolean
        description: If set, request for nonexistent items won't return any error.
    required:
      - ids
  payment.gmo.v1.BatchGetSubscriptionsResponse:
    type: object
    properties:
      subscriptions:
        type: array
        items:
          type: object
          $ref: '#/definitions/payment.gmo.v1.Subscription'
  payment.gmo.v1.CancelSubscriptionResponse:
    type: object
  payment.gmo.v1.CardInfo:
    type: object
    properties:
      masked_card_no:
        type: string
        description: 'Output only. Example: *************111.'
        readOnly: true
      expire_date:
        type: string
        description: 'Output only. Example: 2209.'
        readOnly: true
      brand:
        type: string
        description: |-
          Output only. The credit card brand. Possible values: VISA/MASTER/JCB/AMEX/DINERS. Notice that the value will
          remain empty when the credit card brand is unrecognized.
        readOnly: true
  payment.gmo.v1.ChangeSubscriptionPriceResponse:
    type: object
  payment.gmo.v1.CreatePurchaseRequest:
    type: object
    properties:
      purchase:
        $ref: '#/definitions/payment.gmo.v1.Purchase'
        description: Required.
      return_url:
        type: string
        description: Required.
      purchase_id:
        type: string
        description: 'Pattern: "^[A-Za-z0-9_-]{1,64}$".'
        pattern: ^[A-Za-z0-9_-]{1,64}$
      with_hosted_page:
        type: boolean
        description: Whether the GMO hosted page will be used during payment.
    required:
      - purchase
      - return_url
  payment.gmo.v1.CreatePurchaseResponse:
    type: object
    properties:
      purchase:
        $ref: '#/definitions/payment.gmo.v1.Purchase'
      redirect_page:
        $ref: '#/definitions/google.api.HttpBody'
  payment.gmo.v1.CreateSubscriptionRequest:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/payment.gmo.v1.Subscription'
        description: Required.
      subscription_id:
        type: string
        description: 'Pattern: "^[A-Za-z0-9_-]{1,64}$".'
        pattern: ^[A-Za-z0-9_-]{1,64}$
      validate_only:
        type: boolean
        description: If set, the request won't make any change. This allows you to preview the resource without actually creating it.
    required:
      - subscription
  payment.gmo.v1.CreateSubscriptionResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/payment.gmo.v1.Subscription'
  payment.gmo.v1.CreateTelecomPaymentMethodRequest:
    type: object
    properties:
      type:
        $ref: '#/definitions/payment.gmo.v1.PaymentType'
        description: Required.
      user_id:
        type: string
        description: 'Required. Pattern: "^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$".'
        pattern: ^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$
      return_url:
        type: string
        description: Required.
    required:
      - type
      - user_id
      - return_url
  payment.gmo.v1.CreateTelecomPaymentMethodResponse:
    type: object
    properties:
      redirect_page:
        $ref: '#/definitions/google.api.HttpBody'
  payment.gmo.v1.DefaultPaymentMethodRequest:
    type: object
    properties:
      id:
        type: string
        description: Required.
      user_id:
        type: string
        description: 'Required. Pattern: "^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$".'
        pattern: ^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$
    required:
      - id
      - user_id
  payment.gmo.v1.DefaultPaymentMethodResponse:
    type: object
  payment.gmo.v1.DeletePaymentMethodResponse:
    type: object
  payment.gmo.v1.ErrorInfo:
    type: object
    properties:
      reason:
        $ref: '#/definitions/payment.gmo.v1.ErrorReason'
      domain:
        type: string
        description: Always be "core.payment.gmo.v1".
      metadata:
        type: object
        additionalProperties:
          type: string
        description: See `ErrorReason` to get `metadata` definition.
    description: |-
      This describes the format of `google.rpc.ErrorInfo`.
      NOTE: This is designed for documentation purpose only.
  payment.gmo.v1.ErrorReason:
    type: string
    enum:
      - ERROR_REASON_UNSPECIFIED
      - ERROR_REASON_GMO_ERROR
      - ERROR_REASON_SUBSCRIPTION_NOT_CANCELLABLE
      - ERROR_REASON_SUBSCRIPTION_CANCELLATION_NOT_REVOCABLE
      - ERROR_REASON_INVALID_ENCODING_CONVERSION
      - ERROR_REASON_INTERNAL_ERROR
    default: ERROR_REASON_UNSPECIFIED
    description: |-
      Defines the supported values for `google.rpc.ErrorInfo.reason` for the
      `core.payment.gmo.v1` error domain.

       - ERROR_REASON_UNSPECIFIED: Do not use this default value.
       - ERROR_REASON_GMO_ERROR: Example:
        {
          "reason": "ERROR_REASON_GMO_ERROR",
          "domain": "core.payment.gmo.v1",
          "metadata": {
            // GMO error info. Separator: "|". Example: "M01058010", "M01058010|M01054004".
            "error_info": "M01058010|M01054004"
          }
        }
       - ERROR_REASON_SUBSCRIPTION_NOT_CANCELLABLE: The subscription is considered as cancellable only when subscription.status is SUBSCRIPTION_STATUS_ACTIVE and
      subscription.cancel_request_time is null. However, if force is true, a subscription is considered as cancellable
      regardless of subscription.cancel_request_time. Example:
        {
          "reason": "ERROR_REASON_SUBSCRIPTION_NOT_CANCELLABLE",
          "domain": "core.payment.gmo.v1",
          "metadata": {
            "error_message": "some message"
          }
        }
       - ERROR_REASON_SUBSCRIPTION_CANCELLATION_NOT_REVOCABLE: The subscription is not revocable. A subscription is considered as revocable only when `subscription.status` is
      `SUBSCRIPTION_STATUS_ACTIVE` and `subscription.cancel_request_time` is not `null`. Example:
        {
          "reason": "ERROR_REASON_SUBSCRIPTION_CANCELLATION_NOT_REVOCABLE",
          "domain": "core.payment.gmo.v1",
          "metadata": {
            "error_message": "some message"
          }
        }
       - ERROR_REASON_INVALID_ENCODING_CONVERSION: The payment service internally uses the Shift JIS encoding. When there is
      an encoding conversion error, return this error reason. Example:
        {
          "reason": "ERROR_REASON_INVALID_ENCODING_CONVERSION",
          "domain": "core.payment.gmo.v1",
          "metadata": {
            "error_message": "some message"
          }
        }
       - ERROR_REASON_INTERNAL_ERROR: Example:
        {
          "reason": "ERROR_REASON_INTERNAL_ERROR",
          "domain": "core.payment.gmo.v1",
          "metadata": {
            "error_message": "some message"
          }
        }
  payment.gmo.v1.GetPaymentMethodResponse:
    type: object
    properties:
      payment_method:
        $ref: '#/definitions/payment.gmo.v1.PaymentMethod'
  payment.gmo.v1.GetPurchaseResponse:
    type: object
    properties:
      purchase:
        $ref: '#/definitions/payment.gmo.v1.Purchase'
  payment.gmo.v1.GetSubscriptionResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/payment.gmo.v1.Subscription'
  payment.gmo.v1.ListPaymentMethodsResponse:
    type: object
    properties:
      payment_methods:
        type: array
        items:
          type: object
          $ref: '#/definitions/payment.gmo.v1.PaymentMethod'
      next_page_token:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
          subsequent pages.
  payment.gmo.v1.ListPurchasesResponse:
    type: object
    properties:
      purchases:
        type: array
        items:
          type: object
          $ref: '#/definitions/payment.gmo.v1.Purchase'
      next_page_token:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
          subsequent pages.
  payment.gmo.v1.ListSubscriptionsResponse:
    type: object
    properties:
      subscriptions:
        type: array
        items:
          type: object
          $ref: '#/definitions/payment.gmo.v1.Subscription'
      next_page_token:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
          subsequent pages.
  payment.gmo.v1.ManageCardPaymentMethodRequest:
    type: object
    properties:
      user_id:
        type: string
        description: 'Required. Pattern: "^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$".'
        pattern: ^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$
      return_url:
        type: string
        description: Required.
      security_code_required:
        type: boolean
        description: Whether the GMO hosted page will ask user for providing the security code.
      card_add_disabled:
        type: boolean
        description: Whether the GMO hosted page will disable the button which is used for adding cards.
      card_edit_disabled:
        type: boolean
        description: Whether the GMO hosted page will disable the button which is used for editing cards.
      card_delete_disabled:
        type: boolean
        description: Whether the GMO hosted page will disable the button which is used for deleting cards.
    required:
      - user_id
      - return_url
  payment.gmo.v1.ManageCardPaymentMethodResponse:
    type: object
    properties:
      redirect_page:
        $ref: '#/definitions/google.api.HttpBody'
  payment.gmo.v1.PaymentEvent:
    type: object
    properties:
      id:
        type: string
      type:
        $ref: '#/definitions/payment.gmo.v1.PaymentEventType'
      user_id:
        type: string
        description: 'Pattern: "^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$".'
        pattern: ^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$
      payload:
        $ref: '#/definitions/google.protobuf.Any'
    description: |-
      This describes what and how events will be sent from *PaymentService* to *EventService*.
      NOTE: This is designed for documentation purpose only.
  payment.gmo.v1.PaymentEventType:
    type: string
    enum:
      - PAYMENT_EVENT_TYPE_UNSPECIFIED
      - PAYMENT_EVENT_TYPE_GMO_PURCHASE_CREATED
      - PAYMENT_EVENT_TYPE_GMO_PURCHASE_USER_ACTION_REQUIRED
      - PAYMENT_EVENT_TYPE_GMO_PURCHASE_SUCCEEDED
      - PAYMENT_EVENT_TYPE_GMO_PURCHASE_FAILED
      - PAYMENT_EVENT_TYPE_GMO_METHOD_CREATED
      - PAYMENT_EVENT_TYPE_GMO_METHOD_UPDATED
      - PAYMENT_EVENT_TYPE_GMO_METHOD_DELETED
      - PAYMENT_EVENT_TYPE_GMO_SUBSCRIPTION_CREATED
      - PAYMENT_EVENT_TYPE_GMO_SUBSCRIPTION_TRIAL_ENDED
      - PAYMENT_EVENT_TYPE_GMO_SUBSCRIPTION_PAY_SUCCEEDED
      - PAYMENT_EVENT_TYPE_GMO_SUBSCRIPTION_PAY_FAILED
      - PAYMENT_EVENT_TYPE_GMO_SUBSCRIPTION_CANCEL_REQUESTED
      - PAYMENT_EVENT_TYPE_GMO_SUBSCRIPTION_CANCEL_REVOKED
      - PAYMENT_EVENT_TYPE_GMO_SUBSCRIPTION_CANCELLED
    default: PAYMENT_EVENT_TYPE_UNSPECIFIED
    description: |2-
       - PAYMENT_EVENT_TYPE_GMO_PURCHASE_CREATED: Occurs whenever a `Purchase` is created (event payload: `Purchase`).
       - PAYMENT_EVENT_TYPE_GMO_PURCHASE_USER_ACTION_REQUIRED: Occurs whenever a `Purchase` transitions to `PURCHASE_STATUS_USER_ACTION_REQUIRED` status (event payload: `Purchase`).
       - PAYMENT_EVENT_TYPE_GMO_PURCHASE_SUCCEEDED: Occurs whenever a `Purchase` transitions to `PURCHASE_STATUS_SUCCEEDED` status (event payload: `Purchase`).
       - PAYMENT_EVENT_TYPE_GMO_PURCHASE_FAILED: Occurs whenever a `Purchase` transitions to `PURCHASE_STATUS_FAILED` status (event payload: `Purchase`).
       - PAYMENT_EVENT_TYPE_GMO_METHOD_CREATED: Occurs whenever a `PaymentMethod` is created (event payload: `PaymentMethod`).
       - PAYMENT_EVENT_TYPE_GMO_METHOD_UPDATED: Occurs whenever a `PaymentMethod` is updated (event payload: `PaymentMethod`).
       - PAYMENT_EVENT_TYPE_GMO_METHOD_DELETED: Occurs whenever a `PaymentMethod` is deleted (event payload: `PaymentMethod`).
       - PAYMENT_EVENT_TYPE_GMO_SUBSCRIPTION_CREATED: Occurs whenever a `Subscription` is created (event payload: `Subscription`).
       - PAYMENT_EVENT_TYPE_GMO_SUBSCRIPTION_TRIAL_ENDED: Occurs whenever the trial period of `Subscription` is ended (event payload: `Subscription`).
      This event will be omitted if the `Subscription` has no trial period.
       - PAYMENT_EVENT_TYPE_GMO_SUBSCRIPTION_PAY_SUCCEEDED: Occurs whenever a payment of `Subscription` is succeeded (event payload: `Subscription`).
       - PAYMENT_EVENT_TYPE_GMO_SUBSCRIPTION_PAY_FAILED: Occurs whenever a payment of `Subscription` is failed (event payload: `Subscription`).
       - PAYMENT_EVENT_TYPE_GMO_SUBSCRIPTION_CANCEL_REQUESTED: Occurs whenever a cancellation of `Subscription` is requested (event payload: `Subscription`).
       - PAYMENT_EVENT_TYPE_GMO_SUBSCRIPTION_CANCEL_REVOKED: Occurs whenever a cancellation of `Subscription` is revoked (event payload: `Subscription`).
       - PAYMENT_EVENT_TYPE_GMO_SUBSCRIPTION_CANCELLED: Occurs whenever a `Subscription` is cancelled (event payload: `Subscription`).
  payment.gmo.v1.PaymentMethod:
    type: object
    properties:
      id:
        type: string
        description: Output only.
        readOnly: true
      type:
        $ref: '#/definitions/payment.gmo.v1.PaymentType'
        description: Required. Immutable.
      user_id:
        type: string
        description: 'Required. Immutable. Pattern: "^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$".'
        pattern: ^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$
      is_default:
        type: boolean
        description: Output only.
        readOnly: true
      card_info:
        $ref: '#/definitions/payment.gmo.v1.CardInfo'
        description: Output only.
        readOnly: true
      create_time:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      update_time:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
    required:
      - type
      - user_id
  payment.gmo.v1.PaymentType:
    type: string
    enum:
      - PAYMENT_TYPE_UNSPECIFIED
      - PAYMENT_TYPE_CREDIT_CARD
      - PAYMENT_TYPE_TELECOM_DOCOMO
      - PAYMENT_TYPE_TELECOM_SOFTBANK
      - PAYMENT_TYPE_TELECOM_AU
    default: PAYMENT_TYPE_UNSPECIFIED
  payment.gmo.v1.Purchase:
    type: object
    properties:
      id:
        type: string
        description: 'Output only. Pattern: "^[A-Za-z0-9_-]{1,64}$".'
        readOnly: true
        pattern: ^[A-Za-z0-9_-]{1,64}$
      type:
        $ref: '#/definitions/payment.gmo.v1.PaymentType'
        description: Required. Immutable.
      status:
        $ref: '#/definitions/payment.gmo.v1.PurchaseStatus'
        description: Output only.
        readOnly: true
      currency_code:
        type: string
        description: 'Immutable. The three-letter currency code defined in ISO 4217. Example: "JPY".'
      amount:
        $ref: '#/definitions/google.type.Decimal'
        description: Required. Immutable.
      tax_rate:
        $ref: '#/definitions/google.type.Decimal'
        description: Immutable.
      tax:
        $ref: '#/definitions/google.type.Decimal'
        description: Output only.
        readOnly: true
      order_id:
        type: string
        description: Output only.
        readOnly: true
      user_id:
        type: string
        description: 'Immutable. Pattern: "^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$".'
        pattern: ^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$
      subscription_id:
        type: string
        description: 'Output only. Pattern: "^[A-Za-z0-9_-]{1,64}$".'
        readOnly: true
        pattern: ^[A-Za-z0-9_-]{1,64}$
      subscription_period_start_time:
        type: string
        format: date-time
        description: Output only. Affected by test clock.
        readOnly: true
      subscription_period_end_time:
        type: string
        format: date-time
        description: Output only. Affected by test clock.
        readOnly: true
      payment_method_id:
        type: string
        description: Output only.
        readOnly: true
      error_info:
        $ref: '#/definitions/google.rpc.ErrorInfo'
        description: Output only.
        readOnly: true
      au_commodity:
        type: string
        description: If set, use this value instead of the tenant setting `payment.provider.gmo.au.commodity.purchase`.
      create_time:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      update_time:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
    required:
      - type
      - amount
  payment.gmo.v1.PurchaseStatus:
    type: string
    enum:
      - PURCHASE_STATUS_UNSPECIFIED
      - PURCHASE_STATUS_NOT_STARTED
      - PURCHASE_STATUS_USER_ACTION_REQUIRED
      - PURCHASE_STATUS_SUCCEEDED
      - PURCHASE_STATUS_FAILED
    default: PURCHASE_STATUS_UNSPECIFIED
    description: |2-
       - PURCHASE_STATUS_NOT_STARTED: The `Purchase` is created but not started yet.
       - PURCHASE_STATUS_USER_ACTION_REQUIRED: The `Purchase` is waiting for further user action.
       - PURCHASE_STATUS_SUCCEEDED: The `Purchase` is succeeded.
       - PURCHASE_STATUS_FAILED: The `Purchase` is failed.
  payment.gmo.v1.RenewSubscriptionResponse:
    type: object
  payment.gmo.v1.RevokeCancelSubscriptionResponse:
    type: object
  payment.gmo.v1.Subscription:
    type: object
    properties:
      id:
        type: string
        description: 'Output only. Pattern: "^[A-Za-z0-9_-]{1,64}$".'
        readOnly: true
        pattern: ^[A-Za-z0-9_-]{1,64}$
      status:
        $ref: '#/definitions/payment.gmo.v1.SubscriptionStatus'
        description: Output only.
        readOnly: true
      user_id:
        type: string
        description: 'Required. Immutable. Pattern: "^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$".'
        pattern: ^[A-Za-z0-9][A-Za-z0-9_-]{0,59}$
      currency_code:
        type: string
        description: 'Immutable. The three-letter currency code defined in ISO 4217. Example: "JPY".'
      amount:
        $ref: '#/definitions/google.type.Decimal'
        description: Required. Immutable.
      tax_rate:
        $ref: '#/definitions/google.type.Decimal'
        description: Immutable.
      tax:
        $ref: '#/definitions/google.type.Decimal'
        description: Output only.
        readOnly: true
      time_zone:
        type: string
        description: |-
          Immutable. The time zone which controls the subscription lifecycle. Format: [IANA Time Zone Database](https://www.iana.org/time-zones).
          Default: "UTC". Example: "Asia/Tokyo".
      trialing:
        type: boolean
        description: Output only. Indicates whether the subscription is currently in trial period or not.
        readOnly: true
      trial_days:
        type: string
        format: int64
        description: Input only. The days of trial period.
      start_time:
        type: string
        format: date-time
        description: Input only. If not provided, will use the current time. If provided, the time must be earlier than the current time.
      curr_period_start_time:
        type: string
        format: date-time
        description: Output only. Affected by test clock.
        readOnly: true
      curr_period_end_time:
        type: string
        format: date-time
        description: Output only. Affected by test clock.
        readOnly: true
      curr_period_pay_amount:
        $ref: '#/definitions/google.type.Decimal'
        description: Output only.
        readOnly: true
      curr_period_pay_tax:
        $ref: '#/definitions/google.type.Decimal'
        description: Output only.
        readOnly: true
      next_period_start_time:
        type: string
        format: date-time
        description: Output only. Affected by test clock.
        readOnly: true
      next_period_end_time:
        type: string
        format: date-time
        description: Output only. Affected by test clock.
        readOnly: true
      next_period_pay_amount:
        $ref: '#/definitions/google.type.Decimal'
        description: Output only.
        readOnly: true
      next_period_pay_tax:
        $ref: '#/definitions/google.type.Decimal'
        description: Output only.
        readOnly: true
      cancel_request_time:
        type: string
        format: date-time
        description: Output only. Affected by test clock. The time when the cancellation is requested.
        readOnly: true
      cancel_schedule_time:
        type: string
        format: date-time
        description: Output only. Affected by test clock. The time when the scheduled subscription cancel.
        readOnly: true
      cancel_time:
        type: string
        format: date-time
        description: Output only. Affected by test clock. The time when the subscription is cancelled.
        readOnly: true
      test_clock_time:
        type: string
        format: date-time
        description: The clock time for testing purposes makes it easier to test the subscription renewal, its value must be later than the current time.
      au_commodity:
        type: string
        description: If set, use this value instead of the tenant setting `payment.provider.gmo.au.commodity.subscription`.
      create_time:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
      update_time:
        type: string
        format: date-time
        description: Output only.
        readOnly: true
    required:
      - user_id
      - amount
  payment.gmo.v1.SubscriptionStatus:
    type: string
    enum:
      - SUBSCRIPTION_STATUS_UNSPECIFIED
      - SUBSCRIPTION_STATUS_PENDING
      - SUBSCRIPTION_STATUS_ACTIVE
      - SUBSCRIPTION_STATUS_CANCELLED
      - SUBSCRIPTION_STATUS_FAILED
    default: SUBSCRIPTION_STATUS_UNSPECIFIED
    description: |2-
       - SUBSCRIPTION_STATUS_PENDING: The `Subscription` is created but awaiting initial payment.
       - SUBSCRIPTION_STATUS_ACTIVE: The `Subscription` is active.
       - SUBSCRIPTION_STATUS_CANCELLED: The `Subscription` is ended due to cancellation.
       - SUBSCRIPTION_STATUS_FAILED: The `Subscription` is ended due to failed payment.
  payment.gmo.v1.WebhookResponse:
    type: object
    properties:
      raw_data:
        type: string
  playback.v1.Chapter:
    type: object
    properties:
      title:
        type: string
        description: Output only. The title of chapter.
        readOnly: true
      timestamp:
        type: string
        format: int64
        description: Output only. The time of chatper.
        readOnly: true
  playback.v1.Config:
    type: object
    properties:
      showroom:
        $ref: '#/definitions/type.bv.v1.Showroom'
        description: Output only.
        readOnly: true
      license_key:
        type: string
        description: Output only.
        readOnly: true
      interaction:
        $ref: '#/definitions/playback.v1.Interaction'
        description: Output only.
        readOnly: true
    description: Deprecated.
  playback.v1.CoverImage:
    type: object
    properties:
      cover_image_url:
        type: string
        description: Output only. The cover image url of the player.
        readOnly: true
      default_image_url:
        type: string
        description: Output only. The default cover image url of the player, it is used to display in the unexpected case.
        readOnly: true
  playback.v1.CreateChatroomTokenRequest:
    type: object
    properties:
      device_id:
        type: string
        description: Optional.
  playback.v1.CreateChatroomTokenResponse:
    type: object
    properties:
      endpoint:
        type: string
      authorizer:
        type: string
      token:
        type: string
      signature:
        type: string
      chat:
        $ref: '#/definitions/playback.v1.CreateChatroomTokenResponse.Topic'
  playback.v1.CreateChatroomTokenResponse.Topic:
    type: object
    properties:
      pub:
        type: string
      sub:
        type: string
  playback.v1.CreateInteractionTokenRequest:
    type: object
    properties:
      name:
        type: string
        description: Optional. Chatroom name.
  playback.v1.CreateInteractionTokenResponse:
    type: object
    properties:
      chatroom_token:
        type: string
      poll_token:
        type: string
  playback.v1.CreateResourceTokenByRedeemCodeRequest:
    type: object
    properties:
      redeem_code:
        type: string
        description: Required. The redeem code of live/vod.
    required:
      - redeem_code
  playback.v1.CreateResourceTokenByRedeemCodeResponse:
    type: object
    properties:
      token:
        type: string
  playback.v1.CreateTokenResponse:
    type: object
    properties:
      token:
        type: string
  playback.v1.EndSessionResponse:
    type: object
  playback.v1.Feature:
    type: object
    properties:
      name:
        $ref: '#/definitions/playback.v1.FeatureName'
  playback.v1.FeatureName:
    type: string
    enum:
      - FEATURE_NAME_UNSPECIFIED
      - FEATURE_NAME_PSE
      - FEATURE_NAME_ULL
    default: FEATURE_NAME_UNSPECIFIED
  playback.v1.GetConfigByCodeResponse:
    type: object
    properties:
      config:
        $ref: '#/definitions/playback.v1.Config'
    description: Deprecated.
  playback.v1.GetMetadataResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: Output only. The unique id of resource (live/vod).
        readOnly: true
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      title:
        type: string
        description: Output only. The title of resource (live/vod).
        readOnly: true
      is_ended:
        type: boolean
        description: Output only. The field indicating the live event is ended or not.
        readOnly: true
      player_setting:
        $ref: '#/definitions/playback.v1.PlayerSetting'
        description: Output only. The settings for the player.
        readOnly: true
      tenant_id:
        type: string
        description: Output only. The unique id of tenant.
        readOnly: true
      playable:
        type: boolean
        description: Output only. The field indicating the resource is in playable state or not.
        readOnly: true
      type:
        type: string
        enum:
          - RESOURCE_TYPE_LIVE_EVENT
          - RESOURCE_TYPE_LIVE_EVENT_RECORDING
          - RESOURCE_TYPE_VOD_EVENT
        description: Output only. The type of resource.
        readOnly: true
  playback.v1.GetResourceConfigResponse:
    type: object
    properties:
      config:
        $ref: '#/definitions/playback.v1.ResourceConfig'
  playback.v1.GetSessionInfoResponse:
    type: object
    properties:
      sources:
        type: array
        items:
          type: object
          $ref: '#/definitions/playback.v1.PlaybackSource'
  playback.v1.HeartbeatResponse:
    type: object
  playback.v1.Interaction:
    type: object
    properties:
      poll_enabled:
        type: boolean
        description: Output only. The field indicating the poll is enabled or not.
        readOnly: true
      chatroom:
        $ref: '#/definitions/type.bv.v1.Chatroom'
        description: Output only. The setting of chatroom.
        readOnly: true
      event_id:
        type: string
        description: Output only. The id which is bound to the interaction.
        readOnly: true
  playback.v1.Manifest:
    type: object
    properties:
      protocol:
        $ref: '#/definitions/type.bv.v1.Protocol'
        description: Output only. The protocol of the manifest.
        readOnly: true
      url:
        type: string
        description: Output only. The url of the manifest.
        readOnly: true
      resolutions:
        type: array
        items:
          type: object
          $ref: '#/definitions/playback.v1.Resolution'
        description: Output only. The resolutions provided in the manifest.
        readOnly: true
  playback.v1.PlaybackSource:
    type: object
    properties:
      manifests:
        type: array
        items:
          type: object
          $ref: '#/definitions/playback.v1.Manifest'
        description: Output only.
        readOnly: true
      thumbnail_seeking_url:
        type: string
        description: Output only. The url of thumbnail seeking.
        readOnly: true
  playback.v1.PlayerSetting:
    type: object
    properties:
      template:
        $ref: '#/definitions/playback.v1.Template'
        description: Output only. The template of the player.
        readOnly: true
      features:
        type: array
        items:
          type: object
          $ref: '#/definitions/playback.v1.Feature'
        description: Output only. The features provided by player.
        readOnly: true
      share:
        $ref: '#/definitions/playback.v1.Share'
        description: Output only. The share links provided by player.
        readOnly: true
      description:
        type: string
        description: Output only. The description that will be displayed in the player.
        readOnly: true
      color:
        type: string
        description: Output only. The color of the player.
        readOnly: true
      cover_image_url:
        type: string
        description: Output only. The cover image url of the player.
        readOnly: true
      default_image_url:
        type: string
        description: Output only. The default cover image url of the player, it is used to display in the unexpected case.
        readOnly: true
      watermark:
        $ref: '#/definitions/playback.v1.Watermark'
        description: Output only. The watermark information of the player.
        readOnly: true
  playback.v1.Position:
    type: string
    enum:
      - POSITION_UNSPECIFIED
      - POSITION_BOTTOM_RIGHT
      - POSITION_BOTTOM_MIDDLE
      - POSITION_BOTTOM_LEFT
      - POSITION_CENTER_RIGHT
      - POSITION_CENTER_LEFT
      - POSITION_TOP_RIGHT
      - POSITION_TOP_MIDDLE
      - POSITION_TOP_LEFT
      - POSITION_RANDOM
    default: POSITION_UNSPECIFIED
  playback.v1.Resolution:
    type: object
    properties:
      height:
        type: string
      width:
        type: string
  playback.v1.ResourceConfig:
    type: object
    properties:
      license_key:
        type: string
        description: Output only. The license key of the player.
        readOnly: true
      status:
        $ref: '#/definitions/playback.v1.ResourceStatus'
        title: Output only. The Status of the resource
        readOnly: true
      showroom:
        $ref: '#/definitions/type.bv.v1.Showroom'
        title: Output only. The Setting of the showroom
        readOnly: true
      interaction:
        $ref: '#/definitions/playback.v1.Interaction'
        title: Output only. The Setting of the interaction
        readOnly: true
      cover_image:
        $ref: '#/definitions/playback.v1.CoverImage'
        title: Output only. The Information of the cover image
        readOnly: true
      player_setting:
        $ref: '#/definitions/type.bv.v1.PlayerSetting'
        title: Output only. The Setting of the player
        readOnly: true
      chapter_setting:
        $ref: '#/definitions/playback.v1.VODChapter'
        title: Output only. The Chapter of the video
        readOnly: true
      metadata:
        $ref: '#/definitions/type.bv.v1.Metadata'
        title: Output only. The metadata of the video
        readOnly: true
  playback.v1.ResourceStatus:
    type: string
    enum:
      - RESOURCE_STATUS_UNSPECIFIED
      - RESOURCE_STATUS_LIVE_SCHEDULED
      - RESOURCE_STATUS_LIVE
      - RESOURCE_STATUS_VOD_SCHEDULED
      - RESOURCE_STATUS_VOD
      - RESOURCE_STATUS_END
    default: RESOURCE_STATUS_UNSPECIFIED
  playback.v1.Share:
    type: object
    properties:
      url:
        type: string
      show_iframe_tag:
        type: boolean
  playback.v1.StartSessionResponse:
    type: object
    properties:
      drm_server_endpoint:
        type: string
        description: Output only. The endpoint of drm server.
        readOnly: true
  playback.v1.Template:
    type: string
    enum:
      - TEMPLATE_UNSPECIFIED
      - TEMPLATE_STANDALONE
      - TEMPLATE_EMBEDDED
    default: TEMPLATE_UNSPECIFIED
  playback.v1.VODChapter:
    type: object
    properties:
      enable:
        type: boolean
        description: Output only. Enable chapter.
        readOnly: true
      chapters:
        type: array
        items:
          type: object
          $ref: '#/definitions/playback.v1.Chapter'
        description: Output only.
        readOnly: true
  playback.v1.ValidateContentRequest:
    type: object
    properties:
      domain:
        type: string
        description: Required. The domain to validate.
    required:
      - domain
  playback.v1.ValidateContentResponse:
    type: object
  playback.v1.ValidateLicenseRequest:
    type: object
    properties:
      license_key:
        type: string
        description: Required. The license key of the player.
    required:
      - license_key
  playback.v1.ValidateLicenseResponse:
    type: object
    properties:
      allow_playback:
        type: boolean
        description: Output only. The flag indicating whether the use of the player is allowed or not.
        readOnly: true
      buy_pse:
        type: boolean
        description: Output only. The flag indicating whether the use of PSE is allowed or not.
        readOnly: true
      buy_ull:
        type: boolean
        description: Output only. The flag indicating whether the use of ultra low Latency is allowed or not.
        readOnly: true
      allow_external_ull:
        type: boolean
        description: Output only. The flag indicating whether the use of self-generated ultra low latency manifest is allowed or not.
        readOnly: true
  playback.v1.ValidateManifestRequest:
    type: object
    properties:
      license_key:
        type: string
        description: Required. The license key of the player.
      protocol:
        $ref: '#/definitions/type.bv.v1.Protocol'
        description: Required. The Protocol of the manifest.
      path:
        type: string
        description: Required. The path of the manifest.
    required:
      - license_key
      - protocol
      - path
  playback.v1.ValidateManifestResponse:
    type: object
  playback.v1.Watermark:
    type: object
    properties:
      position:
        $ref: '#/definitions/playback.v1.Position'
      image_url:
        type: string
      text:
        type: string
  pricing.v1.AdminCreateCustomizedPlanRequest:
    type: object
    properties:
      customized_plan:
        $ref: '#/definitions/pricing.v1.CustomizedPlan'
        description: Required.
    required:
      - customized_plan
  pricing.v1.AdminCreateCustomizedPlanResponse:
    type: object
  pricing.v1.AdminCreatePlanGroupRequest:
    type: object
    properties:
      plan_group:
        $ref: '#/definitions/pricing.v1.PlanGroup'
        description: Required.
    required:
      - plan_group
  pricing.v1.AdminCreatePlanGroupResponse:
    type: object
  pricing.v1.AdminListCustomizedPlansResponse:
    type: object
    properties:
      customized_plans:
        type: array
        items:
          type: object
          $ref: '#/definitions/pricing.v1.CustomizedPlan'
  pricing.v1.AdminListPlanGroupHistoriesResponse:
    type: object
    properties:
      plan_group_histories:
        type: array
        items:
          type: object
          $ref: '#/definitions/pricing.v1.PlanGroupHistory'
  pricing.v1.AdminListPlanGroupsResponse:
    type: object
    properties:
      plan_groups:
        type: array
        items:
          type: object
          $ref: '#/definitions/pricing.v1.PlanGroup'
  pricing.v1.AdminListPlanItemHistoriesResponse:
    type: object
    properties:
      plan_item_histories:
        type: array
        items:
          type: object
          $ref: '#/definitions/pricing.v1.PlanItemHistory'
  pricing.v1.AdminUpdatePlanGroupRequest:
    type: object
    properties:
      plan_group:
        $ref: '#/definitions/pricing.v1.PlanGroup'
        description: Required.
    required:
      - plan_group
  pricing.v1.AdminUpdatePlanGroupResponse:
    type: object
  pricing.v1.AdminUpdatePlanItemRequest:
    type: object
    properties:
      plan:
        $ref: '#/definitions/pricing.v1.Plan'
        description: Required.
    required:
      - plan
  pricing.v1.AdminUpdatePlanItemResponse:
    type: object
  pricing.v1.ChangePlanRequest:
    type: object
    properties:
      plan_id:
        type: string
        description: Required.
      message:
        type: string
        description: Required.
    required:
      - plan_id
      - message
  pricing.v1.ChangePlanResponse:
    type: object
  pricing.v1.CustomPlanRequest:
    type: object
    properties:
      message:
        type: string
        description: Required.
    required:
      - message
  pricing.v1.CustomPlanResponse:
    type: object
  pricing.v1.CustomizedPlan:
    type: object
    properties:
      id:
        type: string
        description: Output only.
        readOnly: true
      name:
        type: string
        description: 'Required. Unique Key. Pattern: "^[A-Za-z0-9_-]{1,64}$".'
      display_name:
        type: string
      description:
        type: string
      display_description:
        $ref: '#/definitions/pricing.v1.DisplayDescription'
    required:
      - name
  pricing.v1.DisplayDescription:
    type: object
    properties:
      text:
        type: string
      links:
        type: array
        items:
          type: object
          $ref: '#/definitions/pricing.v1.Link'
      items:
        type: array
        items:
          type: object
          $ref: '#/definitions/pricing.v1.DisplayDescription'
  pricing.v1.GetPlanInfoResponse:
    type: object
    properties:
      plans:
        type: array
        items:
          type: object
          $ref: '#/definitions/pricing.v1.PlanInfoPlan'
      customized_plan:
        $ref: '#/definitions/pricing.v1.PlanInfoCustomizedPlan'
  pricing.v1.Link:
    type: object
    properties:
      name:
        type: string
      text:
        type: string
      uri:
        type: string
  pricing.v1.ListPlanGroupDetailsResponse:
    type: object
    properties:
      plan_group_details:
        type: array
        items:
          type: object
          $ref: '#/definitions/pricing.v1.PlanGroupDetail'
      pagination:
        $ref: '#/definitions/type.bv.v1.Pagination'
  pricing.v1.Plan:
    type: object
    properties:
      id:
        type: string
        description: Output only.
        readOnly: true
      name:
        type: string
        description: 'Required. Immutable. Unique Key. Pattern: "^[A-Za-z0-9_-]{1,64}$".'
      display_name:
        type: string
      description:
        type: string
      display_description:
        $ref: '#/definitions/pricing.v1.DisplayDescription'
      trial:
        type: boolean
        description: Immutable.
      plan_type:
        $ref: '#/definitions/pricing.v1.PlanType'
        description: 'Default: `PLAN_TYPE_STANDARD`.'
      currency_code:
        type: string
        description: Required. Immutable. The three-letter currency code defined in ISO 4217.
      price:
        $ref: '#/definitions/google.type.Decimal'
      display_price:
        type: string
      storage_quota_mbs:
        $ref: '#/definitions/google.type.Decimal'
      cdn_quota_mbs:
        $ref: '#/definitions/google.type.Decimal'
      encoding_quota_mbs:
        $ref: '#/definitions/google.type.Decimal'
      live_quota_mins:
        $ref: '#/definitions/google.type.Decimal'
      drm_quota_times:
        $ref: '#/definitions/google.type.Decimal'
      features:
        type: object
        additionalProperties:
          type: boolean
      max_concurrent_live_count:
        type: string
        format: int64
      max_account_count:
        type: string
        format: int64
      plan_charge:
        $ref: '#/definitions/pricing.v1.PlanCharge'
    required:
      - name
      - currency_code
      - plan_charge
  pricing.v1.PlanCharge:
    type: object
    properties:
      cdn_price_per_mb:
        $ref: '#/definitions/google.type.Decimal'
      storage_price_per_mb:
        $ref: '#/definitions/google.type.Decimal'
      encoding_price_per_mb:
        $ref: '#/definitions/google.type.Decimal'
      live_price_per_min:
        $ref: '#/definitions/google.type.Decimal'
      drm_price_per_times:
        $ref: '#/definitions/google.type.Decimal'
      cdn_tiered_prices_per_mb:
        type: array
        items:
          type: object
          $ref: '#/definitions/pricing.v1.TieredPrice'
        description: |-
          The cdn_tiered_prices_per_mb must be sort by min_quantity ascending.
          The min_quantity of the cdn_tiered_prices_per_mb must not be repeated.
      storage_tiered_prices_per_mb:
        type: array
        items:
          type: object
          $ref: '#/definitions/pricing.v1.TieredPrice'
        description: |-
          The storage_tiered_prices_per_mb must be sort by min_quantity ascending.
          The min_quantity of the storage_tiered_prices_per_mb must not be repeated.
      encoding_tiered_prices_per_mb:
        type: array
        items:
          type: object
          $ref: '#/definitions/pricing.v1.TieredPrice'
        description: |-
          The encoding_tiered_prices_per_mb must be sort by min_quantity ascending.
          The min_quantity of the encoding_tiered_prices_per_mb must not be repeated.
      live_tiered_prices_per_min:
        type: array
        items:
          type: object
          $ref: '#/definitions/pricing.v1.TieredPrice'
        description: |-
          The live_tiered_prices_per_min must be sort by min_quantity ascending.
          The min_quantity of the live_tiered_prices_per_min must not be repeated.
      drm_tiered_prices_per_times:
        type: array
        items:
          type: object
          $ref: '#/definitions/pricing.v1.TieredPrice'
        description: |-
          The drm_tiered_prices_per_times must be sort by min_quantity ascending.
          The min_quantity of the drm_tiered_prices_per_times must not be repeated.
      premium_support_price:
        $ref: '#/definitions/google.type.Decimal'
      live_support_price_per_min:
        $ref: '#/definitions/google.type.Decimal'
      cdn_base_rate:
        $ref: '#/definitions/google.type.Decimal'
      cdn_region_other_rate:
        $ref: '#/definitions/google.type.Decimal'
      cdn_region_rate:
        type: object
        additionalProperties:
          $ref: '#/definitions/google.type.Decimal'
      pure_storage_base_rate:
        $ref: '#/definitions/google.type.Decimal'
      encoding_vod_base_rate:
        $ref: '#/definitions/google.type.Decimal'
      encoding_vod_h264_rate:
        $ref: '#/definitions/google.type.Decimal'
      encoding_vod_h265_rate:
        $ref: '#/definitions/google.type.Decimal'
      encoding_vod_faster_queue_rate:
        $ref: '#/definitions/google.type.Decimal'
      encoding_vod_pte_rate:
        $ref: '#/definitions/google.type.Decimal'
      encoding_live_to_vod_base_rate:
        $ref: '#/definitions/google.type.Decimal'
      live_channel_base_rate:
        $ref: '#/definitions/google.type.Decimal'
      live_channel_4k_rate:
        $ref: '#/definitions/google.type.Decimal'
      live_channel_ull_rate:
        $ref: '#/definitions/google.type.Decimal'
    description: |-
      TieredPrice Example:
      ```
      {
        "cdn_price_per_mb": {"value": "20"},
        "cdn_tiered_prices_per_mb": [
          {
            "min_quantity": {"value": "100"},
            "unit_price": {"value": "15"}
          },
          {
            "min_quantity": {"value": "200"},
            "unit_price": {"value": "10"}
          },
          {
            "min_quantity": {"value": "400"},
            "unit_price": {"value": "5"}
          }
        ]
      }
      cdn_usage: 1000
      price: (100 - 0) * 20 + (200 - 100) * 15 + (400 - 200) * 10 + (1000 - 400) * 5

      | usage        | 0 ~ 100 | 100 ~ 200 | 200 ~ 400 | 400 ~ N |
      | min_quantity | 0       | 100       | 200       | 400     |
      | unit_price   | 20      | 15        | 10        | 5       |
      ```
    title: PlanCharge
  pricing.v1.PlanDetail:
    type: object
    properties:
      id:
        type: string
      display_name:
        type: string
      description:
        type: string
      display_description:
        $ref: '#/definitions/pricing.v1.DisplayDescription'
      assigned_business_names:
        type: array
        items:
          type: string
  pricing.v1.PlanGroup:
    type: object
    properties:
      id:
        type: string
        description: Output only.
        readOnly: true
      name:
        type: string
        description: 'Required. Unique Key. Pattern: "^[A-Za-z0-9_-]{1,64}$".'
      display_name:
        type: string
      description:
        type: string
      display_description:
        $ref: '#/definitions/pricing.v1.DisplayDescription'
      customized_plan_name:
        type: string
      status:
        $ref: '#/definitions/pricing.v1.PlanStatus'
        description: Output only.
        readOnly: true
      plans:
        type: array
        items:
          type: object
          $ref: '#/definitions/pricing.v1.Plan'
        description: Required. Immutable.
    required:
      - name
      - plans
  pricing.v1.PlanGroupDetail:
    type: object
    properties:
      id:
        type: string
      display_name:
        type: string
      description:
        type: string
      display_description:
        $ref: '#/definitions/pricing.v1.DisplayDescription'
      status:
        $ref: '#/definitions/pricing.v1.PlanStatus'
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/pricing.v1.PlanDetail'
      assigned_business_names:
        type: array
        items:
          type: string
  pricing.v1.PlanGroupHistory:
    type: object
    properties:
      plan_group:
        $ref: '#/definitions/pricing.v1.PlanGroup'
      create_time:
        type: string
        format: date-time
  pricing.v1.PlanInfoCustomizedPlan:
    type: object
    properties:
      display_name:
        type: string
      display_description:
        $ref: '#/definitions/pricing.v1.DisplayDescription'
  pricing.v1.PlanInfoPlan:
    type: object
    properties:
      id:
        type: string
      display_name:
        type: string
      display_description:
        $ref: '#/definitions/pricing.v1.DisplayDescription'
      currency_code:
        type: string
      price:
        $ref: '#/definitions/google.type.Decimal'
      display_price:
        type: string
      is_current_plan:
        type: boolean
  pricing.v1.PlanItemHistory:
    type: object
    properties:
      plan:
        $ref: '#/definitions/pricing.v1.Plan'
      create_time:
        type: string
        format: date-time
  pricing.v1.PlanStatus:
    type: string
    enum:
      - PLAN_STATUS_UNSPECIFIED
      - PLAN_STATUS_ACTIVE
    default: PLAN_STATUS_UNSPECIFIED
  pricing.v1.PlanType:
    type: string
    enum:
      - PLAN_TYPE_UNSPECIFIED
      - PLAN_TYPE_STANDARD
      - PLAN_TYPE_PAY_AS_YOU_GO
    default: PLAN_TYPE_UNSPECIFIED
  pricing.v1.TieredPrice:
    type: object
    properties:
      min_quantity:
        $ref: '#/definitions/google.type.Decimal'
      unit_price:
        $ref: '#/definitions/google.type.Decimal'
  stream.v1.BatchGetVODsRequest:
    type: object
    properties:
      ids:
        type: array
        items:
          type: string
        description: The ids of the purchases to retrieve. Maximum length is 1000.
    required:
      - ids
  stream.v1.BatchGetVODsResponse:
    type: object
    properties:
      vods:
        type: array
        items:
          type: object
          $ref: '#/definitions/stream.v1.VOD'
  stream.v1.CancelVODResponse:
    type: object
  stream.v1.CloseMeetingResponse:
    type: object
  stream.v1.CreateInstantEncodingRequest:
    type: object
    properties:
      source:
        $ref: '#/definitions/stream.v1.Source'
        description: Required.
      encoding_config:
        $ref: '#/definitions/stream.v1.InstantEncodingConfig'
        description: Required.
      name:
        type: string
        description: Required.
      expire_duration:
        type: string
        title: Optional
    required:
      - source
      - encoding_config
      - name
  stream.v1.CreateInstantEncodingResponse:
    type: object
    properties:
      instant_encoding:
        $ref: '#/definitions/stream.v1.InstantEncoding'
  stream.v1.CreateLiveRequest:
    type: object
    properties:
      type:
        $ref: '#/definitions/stream.v1.LiveType'
        description: Required. Live type.
      resolution:
        $ref: '#/definitions/stream.v1.LiveResolution'
        description: Required. Live resolution.
      source:
        $ref: '#/definitions/stream.v1.LiveSource'
        description: Input only. Required if type is `LIVE_TYPE_SIMULIVE``.
      backup_stream:
        type: boolean
        description: Input only.
      scheduled_at:
        type: string
        format: date-time
        description: Input only. Live will be launched instantly if not set.
      drm_enabled:
        type: boolean
        description: Immutable.
      geo_control:
        type: array
        items:
          type: string
        description: Optional. Immutable.
      ull_enabled:
        type: boolean
        description: Immutable.
      ingest_type:
        $ref: '#/definitions/stream.v1.LiveStreamIngestType'
        description: Required. Immutable. The type for ingesting live streaming.
      delivery_disabled:
        type: boolean
        description: Immutable.
    required:
      - type
      - resolution
      - ingest_type
  stream.v1.CreateLiveResponse:
    type: object
    properties:
      live:
        $ref: '#/definitions/stream.v1.Live'
  stream.v1.CreateMeetingRequest:
    type: object
  stream.v1.CreateMeetingResponse:
    type: object
    properties:
      meeting:
        $ref: '#/definitions/stream.v1.Meeting'
  stream.v1.CreateVODRequest:
    type: object
    properties:
      source:
        $ref: '#/definitions/stream.v1.Source'
        description: Required. Source.
      encoding_config:
        $ref: '#/definitions/stream.v1.EncodingConfig'
        title: Required. EncodingConfig
      type:
        $ref: '#/definitions/stream.v1.VODType'
        title: Required. Type
      geo_control:
        type: array
        items:
          type: string
        title: Optional Geo Control
      exports:
        type: array
        items:
          type: object
          $ref: '#/definitions/stream.v1.Export'
        title: Optional Export to another place
      delivery_disabled:
        type: boolean
        description: Immutable.
    required:
      - encoding_configtype
      - geo_control
      - source
      - encoding_config
      - type
  stream.v1.CreateVODResponse:
    type: object
    properties:
      vod:
        $ref: '#/definitions/stream.v1.VOD'
  stream.v1.CreateVODSubtitleEmbedResponse:
    type: object
  stream.v1.DeleteLiveResponse:
    type: object
  stream.v1.DeleteMeetingResponse:
    type: object
  stream.v1.DeleteVODResponse:
    type: object
  stream.v1.EncodingConfig:
    type: object
    properties:
      queue:
        $ref: '#/definitions/type.video.v1.Queue'
        description: Required. Queue type.
      pte:
        $ref: '#/definitions/type.video.v1.PTE'
        title: Per-title encoding
      profile_set:
        $ref: '#/definitions/type.video.v1.ProfileSet'
        description: Required. Profile set.
      protection:
        $ref: '#/definitions/type.video.v1.Protection'
        title: Content protection
      thumbnail_seekings:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.ThumbnailSeeking'
        title: Thumbnail seekings
    required:
      - queue
      - profile_set
  stream.v1.Export:
    type: object
    properties:
      type:
        $ref: '#/definitions/stream.v1.ExportType'
      aws:
        $ref: '#/definitions/type.video.v1.AWSCloudStorage'
  stream.v1.ExportType:
    type: string
    enum:
      - EXPORT_TYPE_UNSPECIFIED
      - EXPORT_TYPE_AWS
    default: EXPORT_TYPE_UNSPECIFIED
  stream.v1.Format:
    type: string
    enum:
      - FORMAT_UNSPECIFIED
      - FORMAT_ABR
      - FORMAT_MP4
    default: FORMAT_UNSPECIFIED
  stream.v1.GetInstantEncodingResponse:
    type: object
    properties:
      instant_encoding:
        $ref: '#/definitions/stream.v1.InstantEncoding'
  stream.v1.GetLiveDownloadResponse:
    type: object
    properties:
      live_download:
        $ref: '#/definitions/stream.v1.LiveDownload'
  stream.v1.GetLiveMetricsResponse:
    type: object
    properties:
      metrics:
        type: array
        items:
          type: object
          $ref: '#/definitions/stream.v1.LiveMetric'
  stream.v1.GetLiveResponse:
    type: object
    properties:
      live:
        $ref: '#/definitions/stream.v1.Live'
  stream.v1.GetMeetingResponse:
    type: object
    properties:
      meeting:
        $ref: '#/definitions/stream.v1.Meeting'
  stream.v1.GetVODResponse:
    type: object
    properties:
      vod:
        $ref: '#/definitions/stream.v1.VOD'
  stream.v1.InstantEncoding:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      stream:
        $ref: '#/definitions/type.video.v1.Stream'
      status:
        $ref: '#/definitions/stream.v1.InstantEncodingStatus'
      expiration_time:
        type: string
        format: date-time
      create_time:
        type: string
        format: date-time
  stream.v1.InstantEncodingConfig:
    type: object
    properties:
      profile_set:
        $ref: '#/definitions/type.video.v1.InstantProfileSet'
        description: Required.
      protection:
        $ref: '#/definitions/type.video.v1.Protection'
        description: Optional.
    required:
      - profile_set
  stream.v1.InstantEncodingStatus:
    type: string
    enum:
      - INSTANT_ENCODING_STATUS_UNSPECIFIED
      - INSTANT_ENCODING_STATUS_CREATED
      - INSTANT_ENCODING_STATUS_SEMI_SUCCESSFUL
      - INSTANT_ENCODING_STATUS_SUCCEEDED
      - INSTANT_ENCODING_STATUS_FAILED
    default: INSTANT_ENCODING_STATUS_UNSPECIFIED
  stream.v1.ListLivesResponse:
    type: object
    properties:
      lives:
        type: array
        items:
          type: object
          $ref: '#/definitions/stream.v1.Live'
        description: Output only.
        readOnly: true
      next_page_token:
        type: string
        description: |-
          A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
          subsequent pages.
  stream.v1.Live:
    type: object
    properties:
      id:
        type: string
        description: Output Only.
        readOnly: true
      setup:
        $ref: '#/definitions/stream.v1.LiveSetup'
        description: Output only.
        readOnly: true
      stream:
        $ref: '#/definitions/type.video.v1.Stream'
        description: Output Only.
        readOnly: true
      status:
        $ref: '#/definitions/stream.v1.LiveStatus'
        description: Output Only.
        readOnly: true
      geo_control:
        type: array
        items:
          type: string
        description: Optional. Immutable.
      drm_enabled:
        type: boolean
        description: Immutable.
      ull_enabled:
        type: boolean
        description: Immutable.
      ingest_type:
        $ref: '#/definitions/stream.v1.LiveStreamIngestType'
        description: Required. Immutable. The type for ingesting live streaming.
      delivery_disabled:
        type: boolean
        description: Immutable.
      metadata:
        type: object
        additionalProperties:
          type: string
        description: Output only.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output Only.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output Only.
        readOnly: true
    required:
      - ingest_type
  stream.v1.LiveDownload:
    type: object
    properties:
      id:
        type: string
        description: Output only.
        readOnly: true
      file:
        $ref: '#/definitions/content.v1.File'
        readOnly: true
      status:
        $ref: '#/definitions/stream.v1.LiveDownloadStatus'
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output Only.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output Only.
        readOnly: true
  stream.v1.LiveDownloadStatus:
    type: string
    enum:
      - LIVE_DOWNLOAD_STATUS_UNSPECIFIED
      - LIVE_DOWNLOAD_STATUS_CREATING
      - LIVE_DOWNLOAD_STATUS_SCHEDULING
      - LIVE_DOWNLOAD_STATUS_STARTED
      - LIVE_DOWNLOAD_STATUS_WAIT_FOR_DEPLOYED
      - LIVE_DOWNLOAD_STATUS_EXPORTING
      - LIVE_DOWNLOAD_STATUS_EXPORTED
      - LIVE_DOWNLOAD_STATUS_READY
      - LIVE_DOWNLOAD_STATUS_FAILED
    default: LIVE_DOWNLOAD_STATUS_UNSPECIFIED
  stream.v1.LiveMetric:
    type: object
    properties:
      type:
        $ref: '#/definitions/stream.v1.LiveMetricType'
        description: The metric type requested.
      dimension:
        type: string
        description: Optional. The dimension for the metric.
      datapoints:
        type: array
        items:
          type: object
          $ref: '#/definitions/stream.v1.LiveMetricDatapoint'
        description: The datapoints for the metric.
  stream.v1.LiveMetricDatapoint:
    type: object
    properties:
      time:
        type: string
        format: date-time
        description: The timestamp for the datapoint.
      value:
        $ref: '#/definitions/google.type.Decimal'
        description: The value for the datapoint.
  stream.v1.LiveMetricType:
    type: string
    enum:
      - LIVE_METRIC_TYPE_UNSPECIFIED
      - LIVE_METRIC_TYPE_NETWORK_IN
      - LIVE_METRIC_TYPE_FRAME_RATE
    default: LIVE_METRIC_TYPE_UNSPECIFIED
    title: |-
      - LIVE_METRIC_TYPE_NETWORK_IN: The rate of traffic coming into the streaming server. Unit: Mbps.
       - LIVE_METRIC_TYPE_FRAME_RATE: The frame rate of the input content. Unit: fps
  stream.v1.LiveResolution:
    type: string
    enum:
      - LIVE_RESOLUTION_UNSPECIFIED
      - LIVE_RESOLUTION_HD
      - LIVE_RESOLUTION_FHD
      - LIVE_RESOLUTION_4K
    default: LIVE_RESOLUTION_UNSPECIFIED
  stream.v1.LiveSetup:
    type: object
    properties:
      rtmp:
        $ref: '#/definitions/stream.v1.RTMPSetup'
        description: Output only.
        readOnly: true
      whip:
        $ref: '#/definitions/stream.v1.WHIPSetup'
        description: Output only.
        readOnly: true
  stream.v1.LiveSource:
    type: object
    properties:
      type:
        $ref: '#/definitions/stream.v1.LiveSourceType'
      content_id:
        type: string
  stream.v1.LiveSourceType:
    type: string
    enum:
      - LIVE_SOURCE_TYPE_UNSPECIFIED
      - LIVE_SOURCE_TYPE_FILE
    default: LIVE_SOURCE_TYPE_UNSPECIFIED
  stream.v1.LiveStatus:
    type: string
    enum:
      - LIVE_STATUS_UNSPECIFIED
      - LIVE_STATUS_CHANNEL_CREATING
      - LIVE_STATUS_CHANNEL_CREATED
      - LIVE_STATUS_DELIVERY_DEPLOYING
      - LIVE_STATUS_DELIVERY_DEPLOYED
      - LIVE_STATUS_IDLE
      - LIVE_STATUS_STARTING
      - LIVE_STATUS_RUNNING
      - LIVE_STATUS_STOPPING
      - LIVE_STATUS_DELETE_STOPPING
      - LIVE_STATUS_READY_TO_DELETE
      - LIVE_STATUS_DELIVERY_RELEASING
      - LIVE_STATUS_CHANNEL_DELETING
      - LIVE_STATUS_CHANNEL_DELETED
      - LIVE_STATUS_SOURCE_MOVING
      - LIVE_STATUS_SOURCE_MOVED
      - LIVE_STATUS_SOURCE_FAIL_TO_MOVE
      - LIVE_STATUS_SOURCE_CHECKING
      - LIVE_STATUS_SOURCE_CHECKED
      - LIVE_STATUS_SOURCE_INVALID
      - LIVE_STATUS_FAIL_TO_LIVE
      - LIVE_STATUS_CHECK_TYPE
      - LIVE_STATUS_CHECK_DELETE
    default: LIVE_STATUS_UNSPECIFIED
  stream.v1.LiveStreamIngestType:
    type: string
    enum:
      - LIVE_STREAM_INGEST_TYPE_UNSPECIFIED
      - LIVE_STREAM_INGEST_TYPE_RTMP
      - LIVE_STREAM_INGEST_TYPE_WHIP
    default: LIVE_STREAM_INGEST_TYPE_UNSPECIFIED
    description: |2-
       - LIVE_STREAM_INGEST_TYPE_RTMP: Real-Time Messaging Protocol.
       - LIVE_STREAM_INGEST_TYPE_WHIP: WebRTC-HTTP Ingestion Protocol.
  stream.v1.LiveStreamPipeline:
    type: string
    enum:
      - LIVE_STREAM_PIPELINE_UNSPECIFIED
      - LIVE_STREAM_PIPELINE_MAIN
      - LIVE_STREAM_PIPELINE_BACKUP
    default: LIVE_STREAM_PIPELINE_UNSPECIFIED
  stream.v1.LiveType:
    type: string
    enum:
      - LIVE_TYPE_UNSPECIFIED
      - LIVE_TYPE_LIVE
      - LIVE_TYPE_SIMULIVE
    default: LIVE_TYPE_UNSPECIFIED
  stream.v1.Meeting:
    type: object
    properties:
      id:
        type: string
        description: Output only. The unique id of the meeting.
        readOnly: true
      status:
        $ref: '#/definitions/stream.v1.MeetingStatus'
        description: Output only. The status of the meeting.
        readOnly: true
      info:
        $ref: '#/definitions/stream.v1.MeetingInfo'
        description: Output only. The information for joining the meeting.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the meeting that was created.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the meeting that was last updated.
        readOnly: true
  stream.v1.MeetingInfo:
    type: object
    properties:
      id:
        type: string
        description: Output only. The unique id to join to the meeting. It will be empty until the meeting is available.
        readOnly: true
      token:
        type: string
        description: Output only. The access token for the meeting. It will be empty until until the meeting is available.
        readOnly: true
  stream.v1.MeetingStatus:
    type: string
    enum:
      - MEETING_STATUS_UNSPECIFIED
      - MEETING_STATUS_CHANNEL_CREATING
      - MEETING_STATUS_CHANNEL_CREATED
      - MEETING_STATUS_IDLE
      - MEETING_STATUS_STARTING
      - MEETING_STATUS_AVAILABLE
      - MEETING_STATUS_CLOSING
      - MEETING_STATUS_FAILED
      - MEETING_STATUS_DELETE_CLOSING
      - MEETING_STATUS_READY_TO_DELETE
      - MEETING_STATUS_CHANNEL_DELETING
      - MEETING_STATUS_CHANNEL_DELETED
      - MEETING_STATUS_CHECK_DELETE
    default: MEETING_STATUS_UNSPECIFIED
  stream.v1.RTMPLink:
    type: object
    properties:
      url:
        type: string
        description: Output only. RTMP server endpoint.
        readOnly: true
      pipeline:
        $ref: '#/definitions/stream.v1.LiveStreamPipeline'
        description: Output only.
        readOnly: true
  stream.v1.RTMPSetup:
    type: object
    properties:
      links:
        type: array
        items:
          type: object
          $ref: '#/definitions/stream.v1.RTMPLink'
        description: Output only.
        readOnly: true
  stream.v1.RecordLiveForDownloadResponse:
    type: object
    properties:
      live_download:
        $ref: '#/definitions/stream.v1.LiveDownload'
  stream.v1.RecordLiveResponse:
    type: object
    properties:
      vod:
        $ref: '#/definitions/stream.v1.VOD'
  stream.v1.Source:
    type: object
    properties:
      type:
        $ref: '#/definitions/stream.v1.SourceType'
      library:
        $ref: '#/definitions/stream.v1.SourceLibrary'
      live:
        $ref: '#/definitions/stream.v1.SourceLive'
      cloud_storage:
        $ref: '#/definitions/stream.v1.SourceCloudStorage'
  stream.v1.SourceCloudStorage:
    type: object
    properties:
      video:
        $ref: '#/definitions/stream.v1.SourceLibraryVideo'
      type:
        $ref: '#/definitions/stream.v1.SourceCloudStorageType'
      aws:
        $ref: '#/definitions/type.video.v1.AWSCloudStorage'
      subtitles:
        type: array
        items:
          type: object
          $ref: '#/definitions/stream.v1.SourceLibrarySubtitle'
  stream.v1.SourceCloudStorageType:
    type: string
    enum:
      - SOURCE_CLOUD_STORAGE_TYPE_UNSPECIFIED
      - SOURCE_CLOUD_STORAGE_TYPE_AWS
    default: SOURCE_CLOUD_STORAGE_TYPE_UNSPECIFIED
  stream.v1.SourceFileInfo:
    type: object
    properties:
      file_name:
        type: string
      size:
        type: string
        format: int64
      bitrate:
        type: string
        format: int64
      duration:
        type: number
        format: float
      video:
        $ref: '#/definitions/type.video.v1.VideoSource'
      audios:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.AudioSource'
  stream.v1.SourceLibrary:
    type: object
    properties:
      video:
        $ref: '#/definitions/stream.v1.SourceLibraryVideo'
      subtitles:
        type: array
        items:
          type: object
          $ref: '#/definitions/stream.v1.SourceLibrarySubtitle'
  stream.v1.SourceLibrarySubtitle:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      code:
        type: string
      display:
        type: string
  stream.v1.SourceLibraryVideo:
    type: object
    properties:
      id:
        type: string
  stream.v1.SourceLive:
    type: object
    properties:
      id:
        type: string
      channel_id:
        type: string
  stream.v1.SourceType:
    type: string
    enum:
      - SOURCE_TYPE_UNSPECIFIED
      - SOURCE_TYPE_LIBRARY
      - SOURCE_TYPE_LIVE
      - SOURCE_TYPE_CLOUD_STORAGE
    default: SOURCE_TYPE_UNSPECIFIED
  stream.v1.StartLiveResponse:
    type: object
  stream.v1.StartMeetingResponse:
    type: object
  stream.v1.StopLiveResponse:
    type: object
  stream.v1.UpdateInstantEncodingResponse:
    type: object
    properties:
      instant_encoding:
        $ref: '#/definitions/stream.v1.InstantEncoding'
  stream.v1.VOD:
    type: object
    properties:
      id:
        type: string
        description: Output only.
        readOnly: true
      encoding_config:
        $ref: '#/definitions/stream.v1.EncodingConfig'
        description: Output only.
        readOnly: true
      stream:
        $ref: '#/definitions/type.video.v1.Stream'
        description: Output Only.
        readOnly: true
      status:
        $ref: '#/definitions/stream.v1.VODStatus'
        description: Output Only.
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Output Only.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Output Only.
        readOnly: true
      source:
        $ref: '#/definitions/stream.v1.Source'
        description: Output Only.
        readOnly: true
      source_file_info:
        $ref: '#/definitions/stream.v1.SourceFileInfo'
        description: Output Only.
        readOnly: true
      geo_control:
        type: array
        items:
          type: string
        description: Output Only.
        readOnly: true
      delivery_disabled:
        type: boolean
        description: Immutable.
  stream.v1.VODStatus:
    type: string
    enum:
      - VOD_STATUS_UNSPECIFIED
      - VOD_STATUS_CREATED
      - VOD_STATUS_INGESTED
      - VOD_STATUS_QUEUED
      - VOD_STATUS_ENCODED
      - VOD_STATUS_DEPLOYED
      - VOD_STATUS_EXPORTED
      - VOD_STATUS_SUCCEEDED
      - VOD_STATUS_FAILED
      - VOD_STATUS_CANCELLED
      - VOD_STATUS_DELETED
      - VOD_STATUS_CATCHUP_CREATING
      - VOD_STATUS_CATCHUP_SCHEDULING
      - VOD_STATUS_CATCHUP_STARTED
      - VOD_STATUS_CATCHUP_WAIT_FOR_DEPLOYED
      - VOD_STATUS_CATCHUP_EXPORTING
      - VOD_STATUS_CATCHUP_EXPORTED
      - VOD_STATUS_CATCHUP_READY
      - VOD_STATUS_CATCHUP_ENDED
      - VOD_STATUS_CATCHUP_FAILED
      - VOD_STATUS_DELIVERY_DEPLOYING
      - VOD_STATUS_DELIVERY_DEPLOYED
      - VOD_STATUS_DELIVERY_RELEASING
    default: VOD_STATUS_UNSPECIFIED
  stream.v1.VODType:
    type: string
    enum:
      - VOD_TYPE_UNSPECIFIED
      - VOD_TYPE_ENCODING
      - VOD_TYPE_CATCHUP
    default: VOD_TYPE_UNSPECIFIED
  stream.v1.WHIPLink:
    type: object
    properties:
      url:
        type: string
        description: Output only.
        readOnly: true
      pipeline:
        $ref: '#/definitions/stream.v1.LiveStreamPipeline'
        description: Output only.
        readOnly: true
      token:
        type: string
        description: Output only.
        readOnly: true
  stream.v1.WHIPSetup:
    type: object
    properties:
      links:
        type: array
        items:
          type: object
          $ref: '#/definitions/stream.v1.WHIPLink'
        description: Output only.
        readOnly: true
  tenant.v1.CreateTenantResponse:
    type: object
    properties:
      tenant:
        $ref: '#/definitions/tenant.v1.Tenant'
  tenant.v1.GetTenantByIDResponse:
    type: object
    properties:
      tenant:
        $ref: '#/definitions/tenant.v1.Tenant'
  tenant.v1.GetTenantResponse:
    type: object
    properties:
      tenant:
        $ref: '#/definitions/tenant.v1.Tenant'
  tenant.v1.ListSettingsResponse:
    type: object
    properties:
      settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/tenant.v1.Setting'
        description: The filtered `settings` by `prefix_key`.
        title: settings
  tenant.v1.SetSettingsResponse:
    type: object
  tenant.v1.Setting:
    type: object
    properties:
      value:
        type: string
        description: Required. Specifies the value of this setting.
        title: value
      enabled:
        type: boolean
        description: Specifies whether the setting is enabled.
        title: enabled
    required:
      - value
  tenant.v1.Tenant:
    type: object
    properties:
      id:
        type: string
        description: Output only. The tenant resource id.
        title: id
        readOnly: true
      name:
        type: string
        description: Optional. `name` is the unique name of the tenant.
        title: name
      group:
        type: string
        description: Optional. The tenant group name.
        title: group
  type.bv.v1.APIAccount:
    type: object
    properties:
      id:
        type: string
        description: Output only. The resource identifier of account.
        readOnly: true
      email:
        type: string
        title: Required. The email of account
      password:
        type: string
        description: |-
          Optional. The password of account.  If the account is created by creating sub org api, not need to provide the password.  The service will genrate password automatically.
          Password policy:
          Contains at least 1 number.
          Contains at least 1 special character.
          Contains at least 1 uppercase letter.
          Contains at least 1 lowercase letter.
      first_name:
        type: string
        description: Required. The first name of account.
      last_name:
        type: string
        description: Required. The last name of account.
      role_type:
        $ref: '#/definitions/type.bv.v1.RoleType'
        description: |-
          Optional. The role of account.
          If the role type is not specified, the default role will be set to staff.
      status:
        $ref: '#/definitions/type.bv.v1.AccountStatus'
        description: Output only. The status of account.
        readOnly: true
      attrs:
        type: object
        additionalProperties:
          type: string
        title: 'Output only. The attributes of account. Data struct: <key,value>'
        readOnly: true
      need_confirm:
        type: boolean
        description: 'Optional. Need to send confirm email to account email.  Default: false.'
      created_at:
        type: string
        format: date-time
        readOnly: true
      updated_at:
        type: string
        format: date-time
        readOnly: true
    required:
      - email
      - first_name
      - last_name
  type.bv.v1.APIOrganization:
    type: object
    properties:
      id:
        type: string
        description: Output only. The resource identifier of the organization.
        readOnly: true
      name:
        type: string
        description: Required. The name of the sub-organization.
      parent_id:
        type: string
        description: Required. The appended parent organization id of the sub-organization.
      type:
        $ref: '#/definitions/type.bv.v1.OrganizationType'
        description: Output only. Indicates the type of the organization.
        readOnly: true
      status:
        $ref: '#/definitions/type.bv.v1.OrganizationStatus'
        description: Output only. Indicates the status of the organization.
        readOnly: true
      description:
        type: string
        description: Input only. The description of the sub-organization.
      owner:
        $ref: '#/definitions/type.bv.v1.OrgMember'
        description: Required. The owner of the sub-organization. The service will genrate account password automatically.
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.OrgMember'
        description: Optional. The member of the sub-organization.  The service will genrate account password automatically.
      time_zone:
        type: string
        description: 'Optional. The time zone to the sub-organization.  Default: Aisa/Taipei.'
      billing_cycle:
        type: integer
        format: int32
        description: |-
          Input only. The billing cycle of the reseller sub-organization.
          It's required and valid when the type is `ORGANIZATION_TYPE_RESELLER`.
      contract_valid_start_time:
        type: string
        format: date-time
        description: |-
          Input only. The contract start day of the business sub-organization.
          It's required and valid when the type is `ORGANIZATION_TYPE_BUSINESS`.
      contract_months:
        type: integer
        format: int32
        description: |-
          Input only. The contract months of the business sub-organization.
          It's required and valid when the type is `ORGANIZATION_TYPE_BUSINESS`.
          This field is mutually exclusive to `contract_days` field, it'll get the higher priority if both are provided.
          e.g. It'll use `contract_months` instead if both `contract_months` and `contract_days` are provided.
      contract_days:
        type: integer
        format: int32
        description: |-
          Input only. The contract days of the business sub-organization.
          It's required and valid when the type is `ORGANIZATION_TYPE_BUSINESS`.
          This field is mutually exclusive to `contract_months` field, it'll get the lower priority if both are provided.
          e.g. It'll use `contract_months` instead if both `contract_months` and `contract_days` are provided.
      contract_valid_end_time:
        type: string
        format: date-time
        description: Output only. The contract valid end day won't be valid after the day.
        readOnly: true
      has_sub_orgs:
        type: boolean
        description: Output only. Indicates there are sub-organizations appended to the organization.
        readOnly: true
      parent_name:
        type: string
        description: Output only. The name of appended parent organization.
        readOnly: true
      license_key:
        type: string
        description: Output only.
        readOnly: true
      created_at:
        type: string
        format: date-time
        readOnly: true
      updated_at:
        type: string
        format: date-time
        readOnly: true
    required:
      - name
      - parent_id
      - owner
  type.bv.v1.AccountStatus:
    type: string
    enum:
      - ACCOUNT_STATUS_UNSPECIFIED
      - ACCOUNT_STATUS_ACTIVATED
      - ACCOUNT_STATUS_DEACTIVATED
    default: ACCOUNT_STATUS_UNSPECIFIED
  type.bv.v1.AudioCodec:
    type: string
    enum:
      - AUDIO_CODEC_UNSPECIFIED
      - AUDIO_CODEC_AAC
      - AUDIO_CODEC_AC3
      - AUDIO_CODEC_MP3
    default: AUDIO_CODEC_UNSPECIFIED
    title: |-
      - AUDIO_CODEC_AAC: AUDIO_CODEC_AAC Indicates audio codec aac
       - AUDIO_CODEC_AC3: AUDIO_CODEC_AC3 Indicates audio codec ac3
       - AUDIO_CODEC_MP3: AUDIO_CODEC_MP3 Indicates audio codec mp3
  type.bv.v1.AudioSource:
    type: object
    properties:
      codec:
        $ref: '#/definitions/type.bv.v1.AudioCodec'
      lang:
        type: string
      bitrate:
        type: string
        format: int64
      sample_rate:
        type: string
        format: int64
  type.bv.v1.AutoImage:
    type: object
    properties:
      url:
        type: string
        description: Output only. The URL of the cover image.
        readOnly: true
      name:
        type: string
        description: Output only. The name of the cover image.
        readOnly: true
      size:
        type: string
        format: int64
        description: Output only. The size of the cover image.
        readOnly: true
  type.bv.v1.Chatroom:
    type: object
    properties:
      enabled:
        type: boolean
        description: Optional. This field indicating the chatroom is enabled or not.
      theme:
        $ref: '#/definitions/type.bv.v1.ChatroomTheme'
        description: Optional. Required when `enabled` = true.
  type.bv.v1.ChatroomTheme:
    type: string
    enum:
      - CHATROOM_THEME_UNSPECIFIED
      - CHATROOM_THEME_LIGHT
      - CHATROOM_THEME_DARK
    default: CHATROOM_THEME_UNSPECIFIED
  type.bv.v1.CloudStorageType:
    type: string
    enum:
      - CLOUD_STORAGE_TYPE_UNSPECIFIED
      - CLOUD_STORAGE_TYPE_AWS
    default: CLOUD_STORAGE_TYPE_UNSPECIFIED
  type.bv.v1.CodecProfile:
    type: string
    enum:
      - CODEC_PROFILE_UNSPECIFIED
      - CODEC_PROFILE_AUTO
      - CODEC_PROFILE_BASELINE
      - CODEC_PROFILE_MAIN
      - CODEC_PROFILE_HIGH
      - CODEC_PROFILE_MAIN10
    default: CODEC_PROFILE_UNSPECIFIED
  type.bv.v1.CodecProfileLevel:
    type: string
    enum:
      - CODEC_PROFILE_LEVEL_UNSPECIFIED
      - CODEC_PROFILE_LEVEL_AUTO
      - CODEC_PROFILE_LEVEL_1
      - CODEC_PROFILE_LEVEL_1_1
      - CODEC_PROFILE_LEVEL_1_2
      - CODEC_PROFILE_LEVEL_1_3
      - CODEC_PROFILE_LEVEL_2
      - CODEC_PROFILE_LEVEL_2_1
      - CODEC_PROFILE_LEVEL_2_2
      - CODEC_PROFILE_LEVEL_3
      - CODEC_PROFILE_LEVEL_3_1
      - CODEC_PROFILE_LEVEL_3_2
      - CODEC_PROFILE_LEVEL_4
      - CODEC_PROFILE_LEVEL_4_1
      - CODEC_PROFILE_LEVEL_4_2
      - CODEC_PROFILE_LEVEL_5
      - CODEC_PROFILE_LEVEL_5_1
      - CODEC_PROFILE_LEVEL_5_2
      - CODEC_PROFILE_LEVEL_6
    default: CODEC_PROFILE_LEVEL_UNSPECIFIED
  type.bv.v1.CoverImage:
    type: object
    properties:
      type:
        $ref: '#/definitions/type.bv.v1.CoverImageType'
        description: Required. Indicates the cover image type.
      auto:
        $ref: '#/definitions/type.bv.v1.AutoImage'
        description: |-
          Output only. Indicates the cover images which are generated automatically.
          It will be empty which represents the black screen when the content type is live.
        readOnly: true
      customize:
        $ref: '#/definitions/type.bv.v1.CustomizeImage'
        description: Optional. Required if `type` is `COVER_IMAGE_TYPE_CUSTOMIZE`.
      updated_at:
        type: string
        format: date-time
        description: Output only. The timestamp of the cover image that was updated.
        readOnly: true
    required:
      - type
  type.bv.v1.CoverImageType:
    type: string
    enum:
      - COVER_IMAGE_TYPE_UNSPECIFIED
      - COVER_IMAGE_TYPE_AUTO
      - COVER_IMAGE_TYPE_CUSTOMIZE
    default: COVER_IMAGE_TYPE_UNSPECIFIED
    description: |2-
       - COVER_IMAGE_TYPE_AUTO: COVER_IMAGE_TYPE_AUTO Indicates the image created by BlendVision One.
       - COVER_IMAGE_TYPE_CUSTOMIZE: COVER_IMAGE_TYPE_CUSTOMIZE Indicates the image uploaded by User.
  type.bv.v1.CreatedAccountStatus:
    type: string
    enum:
      - CREATED_ACCOUNT_STATUS_UNSPECIFIED
      - CREATED_ACCOUNT_STATUS_SUCCEED
      - CREATED_ACCOUNT_STATUS_EXIST
      - CREATED_ACCOUNT_STATUS_FAILED
      - CREATED_ACCOUNT_STATUS_JOIN_ORG_FAILED
    default: CREATED_ACCOUNT_STATUS_UNSPECIFIED
  type.bv.v1.CustomizeImage:
    type: object
    properties:
      library_id:
        type: string
        description: Required. The library id of the cover image.
      url:
        type: string
        description: Output only. The URL of the cover image.
        readOnly: true
      name:
        type: string
        description: Output only. The name of the cover image.
        readOnly: true
      size:
        type: string
        format: int64
        description: Output only. The size of the cover image.
        readOnly: true
    required:
      - library_id
  type.bv.v1.DisplayAspectRatio:
    type: string
    enum:
      - DISPLAY_ASPECT_RATIO_UNSPECIFIED
      - DISPLAY_ASPECT_RATIO_SOURCE
      - DISPLAY_ASPECT_RATIO_1_1
      - DISPLAY_ASPECT_RATIO_3_2
      - DISPLAY_ASPECT_RATIO_4_3
      - DISPLAY_ASPECT_RATIO_5_4
      - DISPLAY_ASPECT_RATIO_16_9
      - DISPLAY_ASPECT_RATIO_16_10
      - DISPLAY_ASPECT_RATIO_17_9
      - DISPLAY_ASPECT_RATIO_21_9
      - DISPLAY_ASPECT_RATIO_32_9
    default: DISPLAY_ASPECT_RATIO_UNSPECIFIED
    title: |-
      - DISPLAY_ASPECT_RATIO_SOURCE: DISPLAY_ASPECT_RATIO_SOURCE Indicates follow source file.
       - DISPLAY_ASPECT_RATIO_1_1: DISPLAY_ASPECT_RATIO_1_1 Indicates 1:1
       - DISPLAY_ASPECT_RATIO_3_2: DISPLAY_ASPECT_RATIO_3_2 Indicates 3:2
       - DISPLAY_ASPECT_RATIO_4_3: DISPLAY_ASPECT_RATIO_4_3 Indicates 4:3
       - DISPLAY_ASPECT_RATIO_5_4: DISPLAY_ASPECT_RATIO_5_4 Indicates 5:4
       - DISPLAY_ASPECT_RATIO_16_9: DISPLAY_ASPECT_RATIO_16_9 Indicates 16:9
       - DISPLAY_ASPECT_RATIO_16_10: DISPLAY_ASPECT_RATIO_16_10 Indicates 16:10
       - DISPLAY_ASPECT_RATIO_17_9: DISPLAY_ASPECT_RATIO_17_9 Indicates 17:9
       - DISPLAY_ASPECT_RATIO_21_9: DISPLAY_ASPECT_RATIO_21_9 Indicates 21:9
       - DISPLAY_ASPECT_RATIO_32_9: DISPLAY_ASPECT_RATIO_32_9 Indicates 32:9
  type.bv.v1.FrameRate:
    type: string
    enum:
      - FRAME_RATE_UNSPECIFIED
      - FRAME_RATE_10
      - FRAME_RATE_15
      - FRAME_RATE_23_97
      - FRAME_RATE_24
      - FRAME_RATE_25
      - FRAME_RATE_29_97
      - FRAME_RATE_30
      - FRAME_RATE_50
      - FRAME_RATE_59_94
      - FRAME_RATE_60
      - FRAME_RATE_SOURCE
    default: FRAME_RATE_UNSPECIFIED
  type.bv.v1.InviteStatus:
    type: string
    enum:
      - INVITE_STATUS_UNSPECIFIED
      - INVITE_STATUS_INVITING
      - INVITE_STATUS_INVITE_SUCCESS
      - INVITE_STATUS_INVITE_FAILED
    default: INVITE_STATUS_UNSPECIFIED
  type.bv.v1.Label:
    type: object
    properties:
      name:
        type: string
        title: The label name
  type.bv.v1.LangCustomize:
    type: object
    properties:
      code:
        type: string
      display:
        type: string
  type.bv.v1.LangFrom:
    type: string
    enum:
      - LANG_FROM_UNSPECIFIED
      - LANG_FROM_SOURCE
      - LANG_FROM_CUSTOMIZE
      - LANG_FROM_FIRST_TRACK
    default: LANG_FROM_UNSPECIFIED
  type.bv.v1.LanguageType:
    type: string
    enum:
      - LANGUAGE_TYPE_UNSPECIFIED
      - LANGUAGE_TYPE_EN
      - LANGUAGE_TYPE_JP
      - LANGUAGE_TYPE_CH
    default: LANGUAGE_TYPE_UNSPECIFIED
  type.bv.v1.Manifest:
    type: object
    properties:
      protocol:
        $ref: '#/definitions/type.bv.v1.Protocol'
        description: Indicates the streaming protocol of manifest.
      uris:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.ManifestURI'
        description: Indicates the uri array of manifest.
  type.bv.v1.ManifestURI:
    type: object
    properties:
      resolutions:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.Resolution'
        description: The resolution of the manifest.
      uri:
        type: string
        description: The streaming uri of the manifest.
  type.bv.v1.Metadata:
    type: object
    properties:
      short_description:
        type: string
        description: The short description of the resource.
      long_description:
        type: string
        description: The long description of the resource.
      labels:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.Label'
        description: The labels of the resource.
  type.bv.v1.MultipleAudioTrack:
    type: object
    properties:
      lang_from:
        $ref: '#/definitions/type.bv.v1.LangFrom'
      lang_customizes:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.LangCustomize'
  type.bv.v1.OrgMember:
    type: object
    properties:
      id:
        type: string
        description: Output only. The resource identifier of account.
        readOnly: true
      email:
        type: string
        title: Required. The email of account
      password:
        type: string
        description: |-
          Optional. The password of account.  If the account is created by creating sub org api, not need to provide the password.  The service will genrate password automatically.
          Password policy:
          Contains at least 1 number.
          Contains at least 1 special character.
          Contains at least 1 uppercase letter.
          Contains at least 1 lowercase letter.
      first_name:
        type: string
        description: Required. The first name of account.
      last_name:
        type: string
        description: Required. The last name of account.
      role_type:
        $ref: '#/definitions/type.bv.v1.RoleType'
        description: Output only. The role of account.
        readOnly: true
      status:
        $ref: '#/definitions/type.bv.v1.AccountStatus'
        description: Output only. The status of account.
        readOnly: true
      created_status:
        $ref: '#/definitions/type.bv.v1.CreatedAccountStatus'
        description: Outpu only. The created status of account.
        readOnly: true
      attrs:
        type: object
        additionalProperties:
          type: string
        title: 'Output only. The attributes of account. Data struct: <key,value>'
        readOnly: true
      need_confirm:
        type: boolean
        description: 'Optional. Need to send confirm email to account email.  Default: false.'
      created_at:
        type: string
        format: date-time
        readOnly: true
      updated_at:
        type: string
        format: date-time
        readOnly: true
    required:
      - email
      - first_name
      - last_name
  type.bv.v1.OrganizationStatus:
    type: string
    enum:
      - ORGANIZATION_STATUS_UNSPECIFIED
      - ORGANIZATION_STATUS_ACTIVATED
      - ORGANIZATION_STATUS_VERIFYING
      - ORGANIZATION_STATUS_FAIL_TO_VERIFY
      - ORGANIZATION_STATUS_DEACTIVATED
      - ORGANIZATION_STATUS_DELETING
      - ORGANIZATION_STATUS_DELETED
    default: ORGANIZATION_STATUS_UNSPECIFIED
    description: |2-
       - ORGANIZATION_STATUS_ACTIVATED: The `Organization` is activated.
       - ORGANIZATION_STATUS_VERIFYING: The `Organization` is created but awaiting the owner to verify.
       - ORGANIZATION_STATUS_FAIL_TO_VERIFY: The `Organization` failed to verify since the invitation is expired.
       - ORGANIZATION_STATUS_DEACTIVATED: The `Organization` is deactivated since the contract is expired or manually changed by the parent admin.
       - ORGANIZATION_STATUS_DELETING: The `Organization` is awaiting related resources deleted.
       - ORGANIZATION_STATUS_DELETED: The `Organization` is deleted.
  type.bv.v1.OrganizationType:
    type: string
    enum:
      - ORGANIZATION_TYPE_UNSPECIFIED
      - ORGANIZATION_TYPE_ROOT
      - ORGANIZATION_TYPE_GENERAL_DISTRIBUTOR
      - ORGANIZATION_TYPE_RESELLER
      - ORGANIZATION_TYPE_BUSINESS
    default: ORGANIZATION_TYPE_UNSPECIFIED
  type.bv.v1.Pagination:
    type: object
    properties:
      total_items:
        type: integer
        format: int32
        description: Output only. The total numbers of the list in the current pagination.
        readOnly: true
      items_per_page:
        type: integer
        format: int32
        description: Output only. The number of items per page in the current pagination.
        readOnly: true
      current_page:
        type: integer
        format: int32
        description: Output only. The current page in the current pagination.
        readOnly: true
  type.bv.v1.PlayerSetting:
    type: object
    properties:
      setting:
        type: object
        description: Output Only. The model of player preferences.
        readOnly: true
      id:
        type: string
        description: Output only. The resource identifier of player setting.
        readOnly: true
      name:
        type: string
        description: Output only. The name of player setting.
        readOnly: true
      description:
        type: string
        description: Output Only. The decription of player setting.
        readOnly: true
  type.bv.v1.Profile:
    type: object
    properties:
      id:
        type: string
        description: Output only. The resource identifier of profile.
        readOnly: true
      name:
        type: string
        description: Input only. The name of profile.
      video_codec:
        $ref: '#/definitions/type.bv.v1.VideoCodec'
        description: Input only. The video codec.
      video_width:
        type: integer
        format: int32
        description: Input only. The video width in pixels.
      video_height:
        type: integer
        format: int32
        description: Input only. The video height in pixels.
      video_bitrate:
        type: string
        format: int64
        description: Input only. The video bitrate.
      audio_bitrate:
        type: string
        format: int64
        description: Input only. The audio bitrate.
      codec_profile:
        $ref: '#/definitions/type.bv.v1.CodecProfile'
        description: Input only. H.264/H.265 codec profile.
      level:
        $ref: '#/definitions/type.bv.v1.CodecProfileLevel'
        description: Input only. Specify level for H.264/H.265.
      b_frame:
        type: boolean
        description: Input only. Enable/Disable B-frame.
      frame_rate:
        $ref: '#/definitions/type.bv.v1.FrameRate'
        description: Input only. The video frame rate.
      gop_size:
        type: integer
        format: int32
        description: Input only. GOP size (keyframe interval) in seconds.
      segment_duration:
        type: integer
        format: int32
        description: Input only. Length of video duration for each segment package in seconds.
      preset:
        type: boolean
        title: Output only. Preset is system or custom
        readOnly: true
      standard:
        $ref: '#/definitions/type.bv.v1.ResolutionType'
        title: Output only. Standard is sd|hd|fhd|4k
        readOnly: true
  type.bv.v1.ProfileSet:
    type: object
    properties:
      id:
        type: string
        description: Output only. The resource identifier of profile set.
        readOnly: true
      name:
        type: string
        description: Input only. The name of profile set.
      protocols:
        type: array
        items:
          $ref: '#/definitions/type.bv.v1.Protocol'
        description: Input only. The protocols.
      smart_abr:
        type: boolean
        description: Input only. Samrt abr.
      multiple_audio_track:
        $ref: '#/definitions/type.bv.v1.MultipleAudioTrack'
        description: Input only.
      video_codec:
        $ref: '#/definitions/type.bv.v1.VideoCodec'
        description: Input only. The video codec.
      profiles:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.Profile'
        description: Output only.
        readOnly: true
      preset:
        type: boolean
        description: |-
          Output only. The prest is system or custom.
          If preset is true, the profile set is created by system, otherwise the profile set is created by custom.
        readOnly: true
  type.bv.v1.Protocol:
    type: string
    enum:
      - PROTOCOL_UNSPECIFIED
      - PROTOCOL_HLS
      - PROTOCOL_DASH
      - PROTOCOL_WHEP
      - PROTOCOL_PROGRESSIVE
    default: PROTOCOL_UNSPECIFIED
    title: |-
      - PROTOCOL_HLS: HTTP Live Streaming
       - PROTOCOL_DASH: Dynamic Adaptive Streaming over HTTP
       - PROTOCOL_WHEP: WebRTC-HTTP Egress Protocol
       - PROTOCOL_PROGRESSIVE: Progressive download
  type.bv.v1.Resolution:
    type: object
    properties:
      height:
        type: string
        format: int64
        description: The video resolution height.
      width:
        type: string
        format: int64
        description: The video resolution width.
  type.bv.v1.ResolutionType:
    type: string
    enum:
      - RESOLUTION_TYPE_UNSPECIFIED
      - RESOLUTION_TYPE_SD
      - RESOLUTION_TYPE_HD
      - RESOLUTION_TYPE_FHD
      - RESOLUTION_TYPE_4K
    default: RESOLUTION_TYPE_UNSPECIFIED
  type.bv.v1.ResourceType:
    type: string
    enum:
      - RESOURCE_TYPE_UNSPECIFIED
      - RESOURCE_TYPE_LIVE
      - RESOURCE_TYPE_VOD
      - RESOURCE_TYPE_LIVE_EVENT
      - RESOURCE_TYPE_LIVE_EVENT_RECORDING
      - RESOURCE_TYPE_VOD_EVENT
    default: RESOURCE_TYPE_UNSPECIFIED
  type.bv.v1.Role:
    type: object
    properties:
      id:
        type: string
        description: role id
      name:
        type: string
        description: role name
        readOnly: true
      type:
        $ref: '#/definitions/type.bv.v1.RoleType'
        readOnly: true
      is_default:
        type: boolean
        readOnly: true
  type.bv.v1.RoleType:
    type: string
    enum:
      - ROLE_TYPE_UNSPECIFIED
      - ROLE_TYPE_OWNER
      - ROLE_TYPE_ADMIN
      - ROLE_TYPE_STAFF
      - ROLE_TYPE_DEVELOPER
    default: ROLE_TYPE_UNSPECIFIED
  type.bv.v1.Showroom:
    type: object
    properties:
      model:
        type: object
        description: Optional. The model of showroom preferences.
      libraries:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.ShowroomLibrary'
        description: Optional. The library assets that is used by the model.
  type.bv.v1.ShowroomLibrary:
    type: object
    properties:
      id:
        type: string
        description: Required. The library id of the asset.
      name:
        type: string
        description: Output only. The library name of the asset.
        readOnly: true
      url:
        type: string
        description: Output only. The URL of the asset.
        readOnly: true
    required:
      - id
  type.bv.v1.Stream:
    type: object
    properties:
      manifests:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.bv.v1.Manifest'
        description: Indicates the manifest resources.
      thumbnail:
        $ref: '#/definitions/type.bv.v1.Thumbnail'
        description: Indicates the thumbnail resource.
  type.bv.v1.Thumbnail:
    type: object
    properties:
      uri:
        type: string
        description: Thumbnail seeking uri.
  type.bv.v1.TokenType:
    type: string
    enum:
      - TOKEN_TYPE_UNSPECIFIED
      - TOKEN_TYPE_BEARER
    default: TOKEN_TYPE_UNSPECIFIED
  type.bv.v1.VideoCodec:
    type: string
    enum:
      - VIDEO_CODEC_UNSPECIFIED
      - VIDEO_CODEC_H264
      - VIDEO_CODEC_H265
    default: VIDEO_CODEC_UNSPECIFIED
    title: |-
      - VIDEO_CODEC_H264: VIDEO_CODEC_H264 Indicates video code H.264
       - VIDEO_CODEC_H265: VIDEO_CODEC_H265 Indicates video code H.265
  type.bv.v1.VideoSource:
    type: object
    properties:
      codec:
        $ref: '#/definitions/type.bv.v1.VideoCodec'
        title: Video codec
      height:
        type: integer
        format: int32
        description: The display height of video.
      width:
        type: integer
        format: int32
        description: The display width of video.
      bitrate:
        type: string
        format: int64
        description: The bitrate of video.
      frame_rate:
        type: string
        description: The frame rate of video.
      interlace:
        type: boolean
        description: The interlace of video.
      aspect_ratio:
        $ref: '#/definitions/type.bv.v1.DisplayAspectRatio'
        description: The display aspect ratio of video.
  type.bv.v1.WatermarkPosition:
    type: string
    enum:
      - WATERMARK_POSITION_UNSPECIFIED
      - WATERMARK_POSITION_BOTTOM_RIGHT
      - WATERMARK_POSITION_BOTTOM_MIDDLE
      - WATERMARK_POSITION_BOTTOM_LEFT
      - WATERMARK_POSITION_CENTER_RIGHT
      - WATERMARK_POSITION_CENTER_LEFT
      - WATERMARK_POSITION_TOP_RIGHT
      - WATERMARK_POSITION_TOP_MIDDLE
      - WATERMARK_POSITION_TOP_LEFT
      - WATERMARK_POSITION_RANDOM
    default: WATERMARK_POSITION_UNSPECIFIED
  type.video.v1.AWSCloudStorage:
    type: object
    properties:
      bucket:
        type: string
      key:
        type: string
      assume_role_arn:
        type: string
      external_id:
        type: string
      region:
        type: string
    required:
      - bucket
      - key
  type.video.v1.Abr:
    type: object
    properties:
      uri:
        type: string
      source_uri:
        type: string
  type.video.v1.Audio:
    type: object
    properties:
      bitrate:
        type: string
        format: int64
      codec:
        $ref: '#/definitions/type.video.v1.AudioCodec'
      channel:
        $ref: '#/definitions/type.video.v1.AudioChannel'
  type.video.v1.AudioChannel:
    type: string
    enum:
      - AUDIO_CHANNEL_UNSPECIFIED
      - AUDIO_CHANNEL_SOURCE
    default: AUDIO_CHANNEL_UNSPECIFIED
  type.video.v1.AudioCodec:
    type: string
    enum:
      - AUDIO_CODEC_UNSPECIFIED
      - AUDIO_CODEC_AAC
      - AUDIO_CODEC_AC3
      - AUDIO_CODEC_MP3
    default: AUDIO_CODEC_UNSPECIFIED
  type.video.v1.AudioSource:
    type: object
    properties:
      codec:
        $ref: '#/definitions/type.video.v1.AudioCodec'
      lang:
        type: string
      bitrate:
        type: string
        format: int64
      sample_rate:
        type: string
        format: int64
  type.video.v1.CodecProfile:
    type: string
    enum:
      - CODEC_PROFILE_UNSPECIFIED
      - CODEC_PROFILE_AUTO
      - CODEC_PROFILE_BASELINE
      - CODEC_PROFILE_MAIN
      - CODEC_PROFILE_HIGH
      - CODEC_PROFILE_MAIN10
    default: CODEC_PROFILE_UNSPECIFIED
  type.video.v1.CodecProfileLevel:
    type: string
    enum:
      - CODEC_PROFILE_LEVEL_UNSPECIFIED
      - CODEC_PROFILE_LEVEL_AUTO
      - CODEC_PROFILE_LEVEL_1
      - CODEC_PROFILE_LEVEL_1_1
      - CODEC_PROFILE_LEVEL_1_2
      - CODEC_PROFILE_LEVEL_1_3
      - CODEC_PROFILE_LEVEL_2
      - CODEC_PROFILE_LEVEL_2_1
      - CODEC_PROFILE_LEVEL_2_2
      - CODEC_PROFILE_LEVEL_3
      - CODEC_PROFILE_LEVEL_3_1
      - CODEC_PROFILE_LEVEL_3_2
      - CODEC_PROFILE_LEVEL_4
      - CODEC_PROFILE_LEVEL_4_1
      - CODEC_PROFILE_LEVEL_4_2
      - CODEC_PROFILE_LEVEL_5
      - CODEC_PROFILE_LEVEL_5_1
      - CODEC_PROFILE_LEVEL_5_2
      - CODEC_PROFILE_LEVEL_6
    default: CODEC_PROFILE_LEVEL_UNSPECIFIED
  type.video.v1.CoverImage:
    type: object
    properties:
      uri:
        type: string
      timestamp:
        type: string
        format: int64
      height:
        type: integer
        format: int32
      width:
        type: integer
        format: int32
      size:
        type: string
        format: int64
  type.video.v1.DRMKey:
    type: object
    properties:
      profile_id:
        type: string
      key_id:
        type: string
        title: Key identity use to exchange key
  type.video.v1.DisplayAspectRatio:
    type: string
    enum:
      - DISPLAY_ASPECT_RATIO_UNSPECIFIED
      - DISPLAY_ASPECT_RATIO_SOURCE
      - DISPLAY_ASPECT_RATIO_1_1
      - DISPLAY_ASPECT_RATIO_3_2
      - DISPLAY_ASPECT_RATIO_4_3
      - DISPLAY_ASPECT_RATIO_5_4
      - DISPLAY_ASPECT_RATIO_16_9
      - DISPLAY_ASPECT_RATIO_16_10
      - DISPLAY_ASPECT_RATIO_17_9
      - DISPLAY_ASPECT_RATIO_21_9
      - DISPLAY_ASPECT_RATIO_32_9
    default: DISPLAY_ASPECT_RATIO_UNSPECIFIED
  type.video.v1.DrmSystem:
    type: string
    enum:
      - DRM_SYSTEM_UNSPECIFIED
      - DRM_SYSTEM_WIDEVINE
      - DRM_SYSTEM_FAIRPLAY
      - DRM_SYSTEM_PLAYREADY
      - DRM_SYSTEM_CLEARKEY
    default: DRM_SYSTEM_UNSPECIFIED
  type.video.v1.FileType:
    type: string
    enum:
      - FILE_TYPE_UNSPECIFIED
      - FILE_TYPE_VIDEO
      - FILE_TYPE_IMAGE
      - FILE_TYPE_SUBTITLE
    default: FILE_TYPE_UNSPECIFIED
  type.video.v1.FrameRate:
    type: string
    enum:
      - FRAME_RATE_UNSPECIFIED
      - FRAME_RATE_10
      - FRAME_RATE_15
      - FRAME_RATE_23_97
      - FRAME_RATE_24
      - FRAME_RATE_25
      - FRAME_RATE_29_97
      - FRAME_RATE_30
      - FRAME_RATE_50
      - FRAME_RATE_59_94
      - FRAME_RATE_60
      - FRAME_RATE_SOURCE
    default: FRAME_RATE_UNSPECIFIED
  type.video.v1.InstantProfile:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      audio_codec:
        $ref: '#/definitions/type.video.v1.AudioCodec'
      audio_bitrate:
        type: string
        format: int64
  type.video.v1.InstantProfileSet:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      protocols:
        type: array
        items:
          $ref: '#/definitions/type.video.v1.Protocol'
      profiles:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.InstantProfile'
  type.video.v1.LangCustomize:
    type: object
    properties:
      code:
        type: string
      display:
        type: string
  type.video.v1.LangFrom:
    type: string
    enum:
      - LANG_FROM_UNSPECIFIED
      - LANG_FROM_SOURCE
      - LANG_FROM_CUSTOMIZE
      - LANG_FROM_FIRST_TRACK
    default: LANG_FROM_UNSPECIFIED
  type.video.v1.Manifest:
    type: object
    properties:
      protocol:
        $ref: '#/definitions/type.video.v1.Protocol'
      uri:
        type: string
      resolutions:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.Resolution'
      abrs:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.Abr'
      source_uri:
        type: string
  type.video.v1.MultipleAudioTrack:
    type: object
    properties:
      lang_from:
        $ref: '#/definitions/type.video.v1.LangFrom'
      lang_customizes:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.LangCustomize'
  type.video.v1.PTE:
    type: object
    properties:
      profile:
        $ref: '#/definitions/type.video.v1.PTEProfile'
  type.video.v1.PTEProfile:
    type: string
    enum:
      - PTE_PROFILE_UNSPECIFIED
      - PTE_PROFILE_HIGH
      - PTE_PROFILE_MEDIUM
      - PTE_PROFILE_LOW
    default: PTE_PROFILE_UNSPECIFIED
  type.video.v1.Profile:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      video_codec:
        $ref: '#/definitions/type.video.v1.VideoCodec'
      video_width:
        type: integer
        format: int32
      video_height:
        type: integer
        format: int32
      video_bitrate:
        type: string
        format: int64
      audio_bitrate:
        type: string
        format: int64
      codec_profile:
        $ref: '#/definitions/type.video.v1.CodecProfile'
      level:
        $ref: '#/definitions/type.video.v1.CodecProfileLevel'
      b_frame:
        type: boolean
      frame_rate:
        $ref: '#/definitions/type.video.v1.FrameRate'
      gop_size:
        type: integer
        format: int32
      segment_duration:
        type: integer
        format: int32
  type.video.v1.ProfileSet:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      protocols:
        type: array
        items:
          $ref: '#/definitions/type.video.v1.Protocol'
      smart_abr:
        type: boolean
      multiple_audio_track:
        $ref: '#/definitions/type.video.v1.MultipleAudioTrack'
      video_codec:
        $ref: '#/definitions/type.video.v1.VideoCodec'
      profiles:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.Profile'
  type.video.v1.Protection:
    type: object
    properties:
      type:
        $ref: '#/definitions/type.video.v1.ProtectionType'
      drm:
        $ref: '#/definitions/type.video.v1.ProtectionDRM'
      clear_key:
        $ref: '#/definitions/type.video.v1.ProtectionClearKey'
  type.video.v1.ProtectionClearKey:
    type: object
    properties:
      key_id:
        type: string
  type.video.v1.ProtectionDRM:
    type: object
    properties:
      keys:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.DRMKey'
  type.video.v1.ProtectionType:
    type: string
    enum:
      - PROTECTION_TYPE_UNSPECIFIED
      - PROTECTION_TYPE_DRM
      - PROTECTION_TYPE_CLEAR_KEY
      - PROTECTION_TYPE_KKDRM
    default: PROTECTION_TYPE_UNSPECIFIED
  type.video.v1.Protocol:
    type: string
    enum:
      - PROTOCOL_UNSPECIFIED
      - PROTOCOL_HLS
      - PROTOCOL_DASH
      - PROTOCOL_WHEP
      - PROTOCOL_PROGRESSIVE
    default: PROTOCOL_UNSPECIFIED
  type.video.v1.Queue:
    type: object
    properties:
      type:
        $ref: '#/definitions/type.video.v1.QueueType'
  type.video.v1.QueueType:
    type: string
    enum:
      - QUEUE_TYPE_UNSPECIFIED
      - QUEUE_TYPE_NORMAL
      - QUEUE_TYPE_PRIORITY
      - QUEUE_TYPE_RESERVED
    default: QUEUE_TYPE_UNSPECIFIED
    title: |-
      - QUEUE_TYPE_NORMAL: normal queue
       - QUEUE_TYPE_PRIORITY: priority queue
       - QUEUE_TYPE_RESERVED: reserved queue
  type.video.v1.Resolution:
    type: object
    properties:
      height:
        type: string
        format: int64
      width:
        type: string
        format: int64
  type.video.v1.Stream:
    type: object
    properties:
      manifests:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.Manifest'
      thumbnails:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.Thumbnail'
      cover_image:
        $ref: '#/definitions/type.video.v1.CoverImage'
  type.video.v1.Subtitle:
    type: object
    properties:
      type:
        $ref: '#/definitions/type.video.v1.SubtitleType'
      embed:
        $ref: '#/definitions/type.video.v1.SubtitleEmbed'
      burn_in:
        $ref: '#/definitions/type.video.v1.SubtitleBurnIn'
  type.video.v1.SubtitleBurnIn:
    type: object
    properties:
      uri:
        type: string
  type.video.v1.SubtitleEmbed:
    type: object
    properties:
      items:
        type: array
        items:
          type: object
          $ref: '#/definitions/type.video.v1.SubtitleEmbedItem'
  type.video.v1.SubtitleEmbedItem:
    type: object
    properties:
      code:
        type: string
      display:
        type: string
      uri:
        type: string
  type.video.v1.SubtitleType:
    type: string
    enum:
      - SUBTITLE_TYPE_UNSPECIFIED
      - SUBTITLE_TYPE_EMBED
      - SUBTITLE_TYPE_BURN_IN
    default: SUBTITLE_TYPE_UNSPECIFIED
  type.video.v1.Thumbnail:
    type: object
    properties:
      uri:
        type: string
  type.video.v1.ThumbnailSeeking:
    type: object
    properties:
      image_height:
        type: integer
        format: int32
      image_width:
        type: integer
        format: int32
      tile_width:
        type: integer
        format: int32
      tile_height:
        type: integer
        format: int32
      interval:
        type: integer
        format: int32
  type.video.v1.VideoCodec:
    type: string
    enum:
      - VIDEO_CODEC_UNSPECIFIED
      - VIDEO_CODEC_H264
      - VIDEO_CODEC_H265
    default: VIDEO_CODEC_UNSPECIFIED
  type.video.v1.VideoSource:
    type: object
    properties:
      codec:
        $ref: '#/definitions/type.video.v1.VideoCodec'
      height:
        type: integer
        format: int32
      width:
        type: integer
        format: int32
      bitrate:
        type: string
        format: int64
      frame_rate:
        type: string
      interlace:
        type: boolean
      aspect_ratio:
        $ref: '#/definitions/type.video.v1.DisplayAspectRatio'
  usage.v1.ContentUsage:
    type: object
    properties:
      type:
        $ref: '#/definitions/type.video.v1.FileType'
      usage_bytes:
        $ref: '#/definitions/google.type.Decimal'
  usage.v1.GetContentStorageUsageResponse:
    type: object
    properties:
      contents:
        type: array
        items:
          type: object
          $ref: '#/definitions/usage.v1.ContentUsage'
      last_update_time:
        type: string
        format: date-time
  usage.v1.GetVODStorageUsageResponse:
    type: object
    properties:
      vod_faster_usage_bytes:
        $ref: '#/definitions/usage.v1.UsageByCodec'
        title: |-
          CMS will handle legacy by querying time range 2000/01/01 ~ the 1st day of current billing period.
          ResolutionSizes vod_legacy = 1;
      vod_standard_usage_bytes:
        $ref: '#/definitions/usage.v1.UsageByCodec'
      vod_live_usage_bytes:
        $ref: '#/definitions/google.type.Decimal'
      last_update_time:
        type: string
        format: date-time
  usage.v1.UsageByCodec:
    type: object
    properties:
      codec_h264:
        $ref: '#/definitions/google.type.Decimal'
      codec_h265:
        $ref: '#/definitions/google.type.Decimal'
securityDefinitions:
  BearerTokenAuth:
    type: apiKey
    description: Enter the token with Bearer schema prefix, eg. `Bearer <token-string>`
    name: authorization
    in: header
security:
  - BearerTokenAuth: []
